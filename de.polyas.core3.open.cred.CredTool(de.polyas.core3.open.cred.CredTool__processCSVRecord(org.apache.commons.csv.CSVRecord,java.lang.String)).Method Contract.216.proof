\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 09 03:47:58 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\problem {
!(  wellFormed(heapAtPre<<anonHeapFunction>>)
  & heap = heapAtPre<<anonHeapFunction>>
  & !self_53 = null
  &   boolean::select(heap,
                      self_53,
                      java.lang.Object::<created>)
    = TRUE
  &   de.polyas.core3.open.cred.CredTool::exactInstance(self_53)
    = TRUE
  & (  ((  record_7 = null
         |   boolean::select(heapAtPre<<anonHeapFunction>>,
                             record_7,
                             java.lang.Object::<created>)
           = TRUE)<<SC>>)
     & ((  password_7 = null
         |   boolean::select(heapAtPre<<anonHeapFunction>>,
                             password_7,
                             java.lang.Object::<created>)
           = TRUE)<<SC>>))
  & ((  java.math.BigInteger::<$inv>(heapAtPre<<anonHeapFunction>>)
      & ((  de.polyas.core3.open.cred.CredentialGenerator::<$inv>(heapAtPre<<anonHeapFunction>>)
          & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre<<anonHeapFunction>>)
              & ((  java.lang.Object::<inv>(heapAtPre<<anonHeapFunction>>,
                                            record_7)
                  & ((  java.lang.Object::<inv>(heapAtPre<<anonHeapFunction>>,
                                                self_53)
                      & ((  (\forall int j;
                               ((   (  leq(Z(0(#)), j)<<origin("requires @ file CredTool.java @ line 194","[]")>>
                                     & lt(j,
                                          seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                             java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,
                                                                                         self_53,
                                                                                         de.polyas.core3.open.cred.CredTool::$inputColsForDist),
                                                             java.util.Collection::$seq)))<<origin("requires @ file CredTool.java @ line 194","[]")>>)<<SC,
                                                                                                                                                        origin("requires @ file CredTool.java @ line 194","[]")>>
                                 -> (\exists int i;
                                       ((  (leq(Z(0(#)),
                                                i)<<origin("requires @ file CredTool.java @ line 194","[]")>>
                                         & lt(i,
                                              seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                 record_7,
                                                                 org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 194","[]")>>)<<SC,
                                                                                                                                                                            origin("requires @ file CredTool.java @ line 194","[]")>>
                                         & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                         record_7,
                                                                                         org.apache.commons.csv.CSVRecord::$key_seq),
                                                                             i))
                                            = (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                         java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,
                                                                                                                     self_53,
                                                                                                                     de.polyas.core3.open.cred.CredTool::$inputColsForDist),
                                                                                         java.util.Collection::$seq),
                                                                             j)))<<origin("requires @ file CredTool.java @ line 194","[]")>>)<<SC,
                                                                                                                                               origin("requires @ file CredTool.java @ line 194","[]")>>))<<origin("requires @ file CredTool.java @ line 194","[]")>>)<<origin("requires @ file CredTool.java @ line 194","[]")>>))<<origin("requires @ file CredTool.java @ line 194","[]")>>
                          & ((  (\forall int j;
                                   ((   (  leq(Z(0(#)),
                                               j)<<origin("requires @ file CredTool.java @ line 198","[]")>>
                                         & lt(j,
                                              seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                 java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,
                                                                                             self_53,
                                                                                             de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),
                                                                 java.util.Collection::$seq)))<<origin("requires @ file CredTool.java @ line 198","[]")>>)<<SC,
                                                                                                                                                            origin("requires @ file CredTool.java @ line 198","[]")>>
                                     -> (\exists int i;
                                           ((  (leq(Z(0(#)),
                                                    i)<<origin("requires @ file CredTool.java @ line 198","[]")>>
                                             & lt(i,
                                                  seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                     record_7,
                                                                     org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 198","[]")>>)<<SC,
                                                                                                                                                                                origin("requires @ file CredTool.java @ line 198","[]")>>
                                             & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                             record_7,
                                                                                             org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                 i))
                                                = (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                             java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,
                                                                                                                         self_53,
                                                                                                                         de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),
                                                                                             java.util.Collection::$seq),
                                                                                 j)))<<origin("requires @ file CredTool.java @ line 198","[]")>>)<<SC,
                                                                                                                                                   origin("requires @ file CredTool.java @ line 198","[]")>>))<<origin("requires @ file CredTool.java @ line 198","[]")>>)<<origin("requires @ file CredTool.java @ line 198","[]")>>))<<origin("requires @ file CredTool.java @ line 198","[]")>>
                              & ((  (\exists int i;
                                       ((  (leq(Z(0(#)),
                                                i)<<origin("requires @ file CredTool.java @ line 202","[]")>>
                                         & lt(i,
                                              seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                 record_7,
                                                                 org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 202","[]")>>)<<SC,
                                                                                                                                                                            origin("requires @ file CredTool.java @ line 202","[]")>>
                                         & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                         record_7,
                                                                                         org.apache.commons.csv.CSVRecord::$key_seq),
                                                                             i))
                                            = java.lang.String::select(heapAtPre<<anonHeapFunction>>,
                                                                       self_53,
                                                                       de.polyas.core3.open.cred.CredTool::$idCol))<<origin("requires @ file CredTool.java @ line 202","[]")>>)<<SC,
                                                                                                                                                                                 origin("requires @ file CredTool.java @ line 202","[]")>>))<<origin("requires @ file CredTool.java @ line 202","[]")>>
                                  & ((  (\forall int i;
                                           ((   (  leq(Z(0(#)),
                                                       i)<<origin("requires @ file CredTool.java @ line 205","[]")>>
                                                 & lt(i,
                                                      seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                         record_7,
                                                                         org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 205","[]")>>)<<SC,
                                                                                                                                                                                    origin("requires @ file CredTool.java @ line 205","[]")>>
                                             -> ((  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                               record_7,
                                                                                               org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                   i))
                                                  = java.lang.String::select(heapAtPre<<anonHeapFunction>>,
                                                                             self_53,
                                                                             de.polyas.core3.open.cred.CredTool::$idCol))<<origin("requires @ file CredTool.java @ line 205","[]")>>
                                             -> (\exists int j;
                                                   ((  (leq(Z(0(#)),
                                                            j)<<origin("requires @ file CredTool.java @ line 205","[]")>>
                                                     & lt(j,
                                                          seqLen(strContent((java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                                                       record_7,
                                                                                                                       org.apache.commons.csv.CSVRecord::$value_seq),
                                                                                                           i)))))<<origin("requires @ file CredTool.java @ line 205","[]")>>)<<SC,
                                                                                                                                                                               origin("requires @ file CredTool.java @ line 205","[]")>>
                                                     & gt((int)(any::seqGet(strContent((java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,
                                                                                                                                  record_7,
                                                                                                                                  org.apache.commons.csv.CSVRecord::$value_seq),
                                                                                                                      i))),
                                                                            j)),
                                                          C(2(3(#))))<<origin("requires @ file CredTool.java @ line 205","[]")>>)<<SC,
                                                                                                                                   origin("requires @ file CredTool.java @ line 205","[]")>>))<<origin("requires @ file CredTool.java @ line 205","[]")>>)<<origin("requires @ file CredTool.java @ line 205","[]")>>)<<origin("requires @ file CredTool.java @ line 205","[]")>>))<<origin("requires @ file CredTool.java @ line 205","[]")>>
                                      & ((  (!(  record_7
                                               = null)<<origin("requires @ file CredTool.java @ line 216","[]")>>)<<impl,
                                                                                                                    origin("requires @ file CredTool.java @ line 216","[]")>>
                                          & (!(  password_7
                                               = null)<<origin("requires @ file CredTool.java @ line 216","[]")>>)<<impl,
                                                                                                                    origin("requires @ file CredTool.java @ line 216","[]")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>)
  & {_record_7:=record_7 || _password_7:=password_7}
      \[{
          exc_66=null;try {
            self_53.processCSVRecord(_record_7,_password_7)@de.polyas.core3.open.cred.CredTool;
          }   catch (java.lang.Throwable e) {
            exc_66=e;
          }
        }\] (  selfAtPost_53 = self_53
             & excAtPost_66 = exc_66
             & heapAtPost = heap))

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "217911")

(branch "dummy ID"
(rule "notRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "16"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "eqSymm" (formula "18") (term "0,0,0,1"))
(rule "eqSymm" (formula "18") (term "1,0,0,1"))
(rule "eqSymm" (formula "2"))
(rule "eqSymm" (formula "12") (term "1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,0,1,0"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
 (builtin "One Step Simplification" (formula "6"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "5"))
(rule "castedGetAny" (formula "17") (term "0,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,0,0,1,0,1,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "16") (term "0"))
(rule "castedGetAny" (formula "12") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "assignment" (formula "18") (term "1"))
 (builtin "One Step Simplification" (formula "18"))
(rule "boxToDiamond" (formula "18") (term "1"))
 (builtin "One Step Simplification" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "10") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "10"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "18") (inst "sk=i_1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "exLeft" (formula "15") (inst "sk=i_2_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "castedGetAny" (formula "19") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "22") (term "0"))
(rule "castedGetAny" (formula "17") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "commute_or" (formula "13"))
(rule "commute_and" (formula "23") (term "0,0"))
(rule "commute_and" (formula "24") (term "0,0"))
(rule "commute_and" (formula "28") (term "0,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "21") (term "0,0,1,0"))
(rule "commute_and" (formula "22") (term "0,0,1,0"))
(rule "commute_and_2" (formula "26") (term "0,1,1,0"))
(rule "commute_and" (formula "10") (term "0,0,0"))
(rule "commute_and" (formula "10") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_processCSVRecord,savedHeapBefore_processCSVRecord"))
 (builtin "One Step Simplification" (formula "54"))
(rule "variableDeclarationAssign" (formula "54") (term "1"))
(rule "variableDeclaration" (formula "54") (term "1") (newnames "dataForVoter_2"))
(rule "commute_and" (formula "17") (term "0,0"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "commute_and" (formula "12") (term "0,0"))
(rule "commute_and_2" (formula "21") (term "0,1,0"))
(rule "commute_and_2" (formula "22") (term "0,1,0"))
(rule "shift_paren_and" (formula "10") (term "0,0"))
(rule "commute_and_2" (formula "10") (term "0,0,0"))
(rule "shift_paren_and" (formula "9") (term "0,0"))
(rule "commute_and_2" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "26") (term "0,0,1,1,0"))
(rule "commute_and_2" (formula "26") (term "0,1,1,0"))
(rule "charLiteral_to_int" (formula "26") (term "1,0,0,0,1,1,0"))
(rule "lenNonNegative" (formula "24") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "24"))
(rule "seqGetAlphaCast" (formula "26") (term "0"))
(rule "castedGetAny" (formula "26") (term "0"))
 (builtin "One Step Simplification" (formula "26"))
(rule "true_left" (formula "26"))
 (builtin "Use Operation Contract" (formula "55") (newnames "heapBefore_generateDataForVoter,result_48,exc_67,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")) (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
    (builtin "One Step Simplification" (formula "59"))
    (builtin "One Step Simplification" (formula "30"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "29"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1,0") (ifseqformula "29"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "35"))
   (rule "insert_constant_string_value" (formula "45") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "45"))
   (rule "insert_constant_string_value" (formula "44") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "44"))
   (rule "insert_constant_string_value" (formula "46") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "46"))
   (rule "insert_constant_string_value" (formula "60") (term "0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "castDel" (formula "45") (term "0,0"))
   (rule "castDel" (formula "44") (term "0,0"))
   (rule "castDel" (formula "46") (term "0,0"))
   (rule "castDel" (formula "60") (term "0,0"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "36"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "38"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "40"))
   (rule "notLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "41"))
   (rule "andLeft" (formula "33"))
   (rule "notLeft" (formula "35"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "33"))
   (rule "notLeft" (formula "36"))
   (rule "notLeft" (formula "35"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "35"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "34"))
   (rule "notLeft" (formula "33"))
   (rule "exLeft" (formula "42") (inst "sk=i_2"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "51"))
    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "54")))
   (rule "castedGetAny" (formula "45") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "45") (term "0,1,0,1,1,0"))
   (rule "castedGetAny" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
   (rule "castedGetAny" (formula "44") (term "0"))
   (rule "castedGetAny" (formula "45") (term "0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "42"))
   (rule "assignment" (formula "83") (term "1"))
    (builtin "One Step Simplification" (formula "83"))
   (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "55") (term "0"))
   (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
   (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "55")) (ifInst ""  (formula "52")))
   (rule "replaceKnownSelect_taclet0_3" (formula "54") (term "0"))
   (rule "replaceKnownSelect_taclet0_3" (formula "53") (term "1,0"))
   (rule "hideAuxiliaryEq" (formula "35"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "53") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "52") (term "1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "35") (term "0,0"))
   (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
   (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")) (ifInst ""  (formula "52")))
   (rule "replaceKnownSelect_taclet0_5" (formula "51") (term "0"))
   (rule "replaceKnownSelect_taclet0_5" (formula "50") (term "1,0"))
   (rule "hideAuxiliaryEq" (formula "34"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "50") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "49") (term "1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "34") (term "0,0"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "37"))
   (rule "andLeft" (formula "37"))
   (rule "notLeft" (formula "37"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "38"))
   (rule "andLeft" (formula "38"))
   (rule "andLeft" (formula "38"))
   (rule "andLeft" (formula "38"))
   (rule "notLeft" (formula "39"))
   (rule "notLeft" (formula "38"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "40"))
   (rule "insert_constant_string_value" (formula "40") (term "0,0,0,0") (ifseqformula "47"))
    (builtin "One Step Simplification" (formula "40"))
   (rule "castDel" (formula "40") (term "0,0,0,0,0"))
   (rule "andLeft" (formula "40"))
   (rule "andLeft" (formula "40"))
   (rule "notLeft" (formula "42"))
   (rule "notLeft" (formula "41"))
   (rule "notLeft" (formula "40"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "32"))
   (rule "replaceKnownSelect_taclet0_3" (formula "32") (term "0,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "32") (term "0,0,1"))
   (rule "replaceKnownSelect_taclet0_5" (formula "32") (term "0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "32") (term "0,0,1,0"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "34"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "57")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "48") (term "0"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "39") (inst "i=i") (inst "i_0=i_0"))
   (rule "expand_inInt" (formula "39") (term "1,0,0,1,0"))
   (rule "expand_inInt" (formula "39") (term "1,0,0,1"))
   (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1,0"))
   (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1"))
   (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1"))
   (rule "andLeft" (formula "39"))
   (rule "andLeft" (formula "39"))
   (rule "eqSymm" (formula "39"))
   (rule "castedGetAny" (formula "41") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "40") (term "0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "42") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
   (rule "insert_constant_string_value" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "47"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "insert_constant_string_value" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "47"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "insert_constant_string_value" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "47"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "castDel" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "castDel" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "castDel" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "44"))
   (rule "notLeft" (formula "43"))
   (rule "andLeft" (formula "42"))
   (rule "notLeft" (formula "42"))
   (rule "notLeft" (formula "42"))
   (rule "exLeft" (formula "47") (inst "sk=i_3"))
   (rule "andLeft" (formula "47"))
   (rule "andLeft" (formula "47"))
   (rule "exLeft" (formula "44") (inst "sk=i_2_1"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "castedGetAny" (formula "48") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "47") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "43") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "51") (term "0"))
   (rule "castedGetAny" (formula "46") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "49"))
   (rule "inEqSimp_commuteLeq" (formula "44"))
   (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "38"))
   (rule "true_left" (formula "38"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "37"))
   (rule "andLeft" (formula "37"))
   (rule "andLeft" (formula "38"))
   (rule "andLeft" (formula "37"))
   (rule "notLeft" (formula "38"))
   (rule "notLeft" (formula "37"))
   (rule "commute_and" (formula "55") (term "0,0"))
   (rule "commute_or" (formula "42"))
   (rule "commute_and_2" (formula "55") (term "0,1,1,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "37"))
   (rule "andLeft" (formula "37"))
   (rule "notLeft" (formula "37"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "commute_and" (formula "39") (term "1,0,0"))
   (rule "commute_and" (formula "39") (term "0,0,0"))
   (rule "commute_and" (formula "38") (term "1,0,0"))
   (rule "lenNonNegative" (formula "8") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "commute_and" (formula "39") (term "0,0,0"))
   (rule "commute_and" (formula "47") (term "0,0"))
   (rule "commute_and" (formula "46") (term "0,0"))
   (rule "commute_and" (formula "42") (term "0,0"))
   (rule "lenNonNegative" (formula "20") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "20"))
   (rule "lenNonNegative" (formula "15") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
    (builtin "Use Operation Contract" (formula "118") (newnames "heapBefore_initDistVals,exc_68,heapAfter_initDistVals,anon_heap_initDistVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
   (branch "Post (initDistVals)"
       (builtin "One Step Simplification" (formula "62"))
       (builtin "One Step Simplification" (formula "122"))
       (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "123")) (ifInst ""  (formula "93")) (ifInst ""  (formula "123")) (ifInst ""  (formula "93")))
       (builtin "One Step Simplification" (formula "61"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,1") (ifseqformula "32"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,0,1") (ifseqformula "32"))
      (rule "andLeft" (formula "61"))
      (rule "andLeft" (formula "64"))
      (rule "andLeft" (formula "62"))
      (rule "andLeft" (formula "65"))
      (rule "andLeft" (formula "67"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "66"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "64"))
      (rule "eqSymm" (formula "70") (term "1,0,1,0"))
      (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "100"))
       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "34")))
      (rule "true_left" (formula "73"))
      (rule "replace_known_left" (formula "72") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "72"))
      (rule "true_left" (formula "72"))
      (rule "castedGetAny" (formula "70") (term "1,1,0,1,0"))
      (rule "castedGetAny" (formula "70") (term "0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,1,0"))
      (rule "pullOutSelect" (formula "70") (term "0,1,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "132")) (ifInst ""  (formula "58")))
      (rule "replaceKnownSelect_taclet00_10" (formula "71") (term "0,1,1,0,1,0"))
      (rule "elementOfSingleton" (formula "70") (term "0,0"))
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "132")))
      (rule "hideAuxiliaryEq" (formula "70"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "70") (term "0,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "70") (term "0,1,1,0,0,1,0"))
      (rule "pullOutSelect" (formula "70") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "70"))
      (rule "replaceKnownSelect_taclet00_12" (formula "71") (term "0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "70") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "70"))
      (rule "pullOutSelect" (formula "70") (term "1,0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
      (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "135")) (ifInst ""  (formula "3")))
      (rule "replaceKnownSelect_taclet00_13" (formula "71") (term "1,2,0"))
      (rule "replaceKnownSelect_taclet00_13" (formula "71") (term "1,1,0"))
      (rule "replaceKnownSelect_taclet00_13" (formula "71") (term "0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "70") (term "0,0"))
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "135")))
      (rule "hideAuxiliaryEq" (formula "70"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "70") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "70") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "70") (term "0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "70") (term "1,0,0,1,0,0"))
      (rule "replace_known_right" (formula "70") (term "0,0,0,0") (ifseqformula "86"))
       (builtin "One Step Simplification" (formula "70"))
      (rule "ifthenelse_negated" (formula "70") (term "0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "67") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "67") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "67") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "67") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "67") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "67") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "67") (term "0,1,1,0,0,0,1,0"))
      (rule "expand_inInt" (formula "67") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "67") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "67") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "67") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "67") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "67") (term "1,0,1,0,0,1"))
      (rule "andLeft" (formula "67"))
      (rule "andLeft" (formula "67"))
      (rule "eqSymm" (formula "67"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "68") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "68") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0"))
      (rule "pullOutSelect" (formula "69") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "135")) (ifInst ""  (formula "58")))
      (rule "replaceKnownSelect_taclet00_15" (formula "67") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_15" (formula "70") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "67"))
      (rule "elementOfSingleton" (formula "69") (term "0,0"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "135")))
      (rule "hideAuxiliaryEq" (formula "69"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "67") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "69") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "69") (term "0,1,1,0,0,0"))
      (rule "eqSymm" (formula "67"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "69"))
      (rule "replaceKnownSelect_taclet0_3" (formula "69") (term "0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "69") (term "0,0,1"))
      (rule "replaceKnownSelect_taclet0_5" (formula "69") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet0_7" (formula "69") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "69") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "69") (term "0,0,0,0"))
      (rule "andLeft" (formula "69"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "69"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "69"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "63") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "63") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "63") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "63") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "63") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "63") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "63") (term "1,0,1,0,0,1"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "eqSymm" (formula "63"))
      (rule "castedGetAny" (formula "65") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "64") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "65") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "64") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0"))
      (rule "pullOutSelect" (formula "65") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "135")))
      (rule "replaceKnownSelect_taclet00_17" (formula "63") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_15" (formula "65") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "65") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replaceKnownSelect_taclet00_17" (formula "66") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "63"))
      (rule "replace_known_left" (formula "65") (term "0,0,1,0,0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "elementOfUnion" (formula "65") (term "0,0"))
      (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "elementOfUnion" (formula "65") (term "0,0"))
      (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "elementOfUnion" (formula "65") (term "0,0"))
      (rule "elementOfSingleton" (formula "65") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "elementOfSingleton" (formula "65") (term "0,0"))
       (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "135")))
      (rule "hideAuxiliaryEq" (formula "65"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "63") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "65") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "65") (term "0,1,1,0,0,0"))
      (rule "pullOutSelect" (formula "64") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "134")))
      (rule "replaceKnownSelect_taclet00_19" (formula "63") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "64") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "64") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replaceKnownSelect_taclet00_19" (formula "65") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "63"))
      (rule "replace_known_left" (formula "64") (term "0,0,1,0,0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfUnion" (formula "64") (term "0,0"))
      (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfUnion" (formula "64") (term "0,0"))
      (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfUnion" (formula "64") (term "0,0"))
      (rule "elementOfSingleton" (formula "64") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfSingleton" (formula "64") (term "0,0"))
       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "134")))
      (rule "hideAuxiliaryEq" (formula "64"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "63") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "63") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "63") (term "0,1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "68") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
      (rule "replaceKnownSelect_taclet00_12" (formula "68") (term "0,1,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "68") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet00_13" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
      (rule "insert_constant_string_value" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "85")))
      (rule "insert_constant_string_value" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "insert_constant_string_value" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "replaceKnownSelect_taclet0_1" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "68") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "68") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "68") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "68") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "69"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "andLeft" (formula "68"))
      (rule "notLeft" (formula "70"))
      (rule "notLeft" (formula "68"))
      (rule "notLeft" (formula "68"))
      (rule "exLeft" (formula "73") (inst "sk=i_4"))
      (rule "andLeft" (formula "73"))
      (rule "andLeft" (formula "73"))
      (rule "exLeft" (formula "70") (inst "sk=i_2_2"))
      (rule "andLeft" (formula "70"))
      (rule "andLeft" (formula "70"))
      (rule "castedGetAny" (formula "74") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "73") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "77") (term "0"))
      (rule "castedGetAny" (formula "72") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "75"))
      (rule "inEqSimp_commuteLeq" (formula "70"))
      (rule "pullOutSelect" (formula "73") (term "1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
      (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "156")) (ifInst ""  (formula "3")))
      (rule "replaceKnownSelect_taclet00_21" (formula "91") (term "0"))
      (rule "replaceKnownSelect_taclet00_21" (formula "77") (term "1,0,1"))
      (rule "replaceKnownSelect_taclet00_21" (formula "78") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet00_21" (formula "74") (term "1,0,0,0,1,0"))
      (rule "elementOfSingleton" (formula "73") (term "0,0"))
       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "156")))
      (rule "hideAuxiliaryEq" (formula "73"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "90") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "76") (term "1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "77") (term "1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "73") (term "1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "73") (term "1,0,1,1,0,0"))
      (rule "pullOutSelect" (formula "69") (term "1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
      (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "155")) (ifInst ""  (formula "3")))
      (rule "replaceKnownSelect_taclet00_23" (formula "90") (term "0"))
      (rule "replaceKnownSelect_taclet00_23" (formula "73") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet00_23" (formula "72") (term "1,0,1"))
      (rule "replaceKnownSelect_taclet00_23" (formula "70") (term "1,0,0,0,1,0"))
      (rule "elementOfSingleton" (formula "69") (term "0,0"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "155")))
      (rule "hideAuxiliaryEq" (formula "69"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "89") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "71") (term "1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "72") (term "1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "69") (term "1,0,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "69") (term "1,0,0,0,1,0"))
      (rule "pullOutSelect" (formula "68") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "replaceKnownSelect_taclet00_25" (formula "84") (term "0"))
      (rule "replaceKnownSelect_taclet00_25" (formula "69") (term "0,0"))
      (rule "eqSymm" (formula "69") (term "1"))
      (rule "eqSymm" (formula "69") (term "0"))
      (rule "elementOfSingleton" (formula "68") (term "0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "hideAuxiliaryEq" (formula "68"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "83") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "68") (term "1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "68") (term "1,0"))
      (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "153")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "153")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_28" (formula "90") (term "0"))
      (rule "pullOutSelect" (formula "89") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_30" (formula "89") (term "0"))
      (rule "pullOutSelect" (formula "88") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "151")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_32" (formula "88") (term "0"))
      (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_34" (formula "87") (term "0"))
      (rule "pullOutSelect" (formula "86") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")) (ifInst ""  (formula "4")))
      (rule "replaceKnownSelect_taclet00_35" (formula "78") (term "1"))
      (rule "replaceKnownSelect_taclet00_35" (formula "73") (term "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "149")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "72") (term "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "86") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "77") (term "1"))
      (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_38" (formula "85") (term "0"))
      (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_40" (formula "84") (term "0"))
      (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_42" (formula "83") (term "0"))
      (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_44" (formula "82") (term "0"))
      (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_46" (formula "81") (term "0"))
      (rule "pullOutSelect" (formula "76") (term "0,1") (inst "selectSK=java_util_Collection_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "96")))
      (rule "replaceKnownSelect_taclet00_47" (formula "78") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_47" (formula "73") (term "0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_47" (formula "73") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "76") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "96")))
      (rule "ifthenelse_negated" (formula "76") (term "0"))
      (rule "pullOutSelect" (formula "71") (term "0,1") (inst "selectSK=java_util_Collection_seq_2"))
      (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "95")))
      (rule "replaceKnownSelect_taclet00_48" (formula "73") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_48" (formula "69") (term "0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_48" (formula "69") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "71") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "95")))
      (rule "ifthenelse_negated" (formula "71") (term "0"))
      (rule "pullOutSelect" (formula "68") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_0"))
      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "eqSymm" (formula "69") (term "1"))
      (rule "elementOfSingleton" (formula "68") (term "0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "hideAuxiliaryEq" (formula "68"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_50" (formula "68") (term "1,1"))
      (rule "pullOutSelect" (formula "68") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "eqSymm" (formula "69") (term "0"))
      (rule "elementOfSingleton" (formula "68") (term "0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "hideAuxiliaryEq" (formula "68"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_52" (formula "68") (term "1,0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "notLeft" (formula "63"))
      (rule "notLeft" (formula "63"))
      (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
      (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
      (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "35"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_54" (formula "84") (term "0"))
      (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
      (rule "replaceKnownSelect_taclet0_7" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "111"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_56" (formula "83") (term "0"))
      (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
      (rule "replaceKnownSelect_taclet0_5" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "110"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_58" (formula "82") (term "0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "63") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
      (rule "insert_constant_string_value" (formula "63") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "insert_constant_string_value" (formula "63") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "insert_constant_string_value" (formula "63") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "castDel" (formula "63") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "63") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "63") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "65"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "64"))
      (rule "andLeft" (formula "63"))
      (rule "notLeft" (formula "63"))
      (rule "notLeft" (formula "63"))
      (rule "exLeft" (formula "68") (inst "sk=i_5"))
      (rule "andLeft" (formula "68"))
      (rule "andLeft" (formula "68"))
      (rule "exLeft" (formula "65") (inst "sk=i_2_3"))
      (rule "andLeft" (formula "65"))
      (rule "andLeft" (formula "65"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "68") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "64") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "72") (term "0"))
      (rule "castedGetAny" (formula "67") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "70"))
      (rule "inEqSimp_commuteLeq" (formula "65"))
      (rule "pullOutSelect" (formula "69") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_3"))
      (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "102")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replaceKnownSelect_taclet00_59" (formula "70") (term "0,0,0,1,0"))
      (rule "elementOfUnion" (formula "69") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "elementOfUnion" (formula "69") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "elementOfUnion" (formula "69") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "102")))
      (rule "elementOfSingleton" (formula "69") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "ifthenelse_negated" (formula "69") (term "0"))
      (rule "pullOutSelect" (formula "68") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_4"))
      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "104")))
      (rule "replaceKnownSelect_taclet00_60" (formula "74") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_60" (formula "73") (term "0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replaceKnownSelect_taclet00_60" (formula "69") (term "0,0,0,1,0"))
      (rule "elementOfUnion" (formula "68") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "elementOfUnion" (formula "68") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "elementOfUnion" (formula "68") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "104")))
      (rule "elementOfSingleton" (formula "68") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "ifthenelse_negated" (formula "68") (term "0"))
      (rule "pullOutSelect" (formula "64") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_5"))
      (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "103")))
      (rule "replaceKnownSelect_taclet00_61" (formula "67") (term "0,1"))
      (rule "replaceKnownSelect_taclet00_61" (formula "68") (term "0,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,1,0,0") (ifseqformula "32"))
      (rule "replaceKnownSelect_taclet00_61" (formula "65") (term "0,0,0,1,0"))
      (rule "elementOfUnion" (formula "64") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "64") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfUnion" (formula "64") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "64") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfUnion" (formula "64") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "64") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfSingleton" (formula "64") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "103")))
      (rule "ifthenelse_negated" (formula "64") (term "0"))
      (rule "pullOutSelect" (formula "63") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_1"))
      (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "63"))
      (rule "replaceKnownSelect_taclet00_62" (formula "98") (term "0"))
      (rule "replaceKnownSelect_taclet00_62" (formula "64") (term "0,1"))
      (rule "replaceKnownSelect_taclet00_25" (formula "63") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_26" (formula "63") (term "2,0"))
      (rule "eqSymm" (formula "64") (term "0"))
      (rule "eqSymm" (formula "64") (term "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "172")))
      (rule "replaceKnownSelect_taclet00_27" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_28" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "63"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "173")))
      (rule "replaceKnownSelect_taclet00_29" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_30" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")))
      (rule "replaceKnownSelect_taclet00_31" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_32" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "175")))
      (rule "replaceKnownSelect_taclet00_21" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_22" (formula "1") (term "2,0"))
      (rule "replaceKnownSelect_taclet00_66" (formula "74") (term "1,2,0"))
      (rule "replaceKnownSelect_taclet00_66" (formula "74") (term "1,1,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
      (rule "replaceKnownSelect_taclet00_66" (formula "74") (term "1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_66" (formula "74") (term "1,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "67") (term "0,0"))
      (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "67"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "176")))
      (rule "replaceKnownSelect_taclet00_13" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_14" (formula "1") (term "2,0"))
      (rule "replaceKnownSelect_taclet00_67" (formula "77") (term "1,1,0"))
      (rule "replaceKnownSelect_taclet00_67" (formula "77") (term "1,2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
      (rule "replaceKnownSelect_taclet00_67" (formula "77") (term "1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_67" (formula "77") (term "1,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "177")))
      (rule "replaceKnownSelect_taclet00_23" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_24" (formula "1") (term "2,0"))
      (rule "replaceKnownSelect_taclet00_68" (formula "71") (term "1,1,0"))
      (rule "replaceKnownSelect_taclet00_68" (formula "71") (term "1,2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
      (rule "replaceKnownSelect_taclet00_68" (formula "71") (term "1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_68" (formula "71") (term "1,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "178")))
      (rule "replaceKnownSelect_taclet00_33" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_34" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")))
      (rule "replaceKnownSelect_taclet00_70" (formula "77") (term "1"))
      (rule "replaceKnownSelect_taclet00_70" (formula "84") (term "1"))
      (rule "replaceKnownSelect_taclet00_35" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_36" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
      (rule "hideAuxiliaryEq" (formula "77"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "109") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "83") (term "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "1") (term "1"))
      (rule "eqSymm" (formula "83"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqRigid" (formula "109") (term "0") (ifseqformula "83"))
      (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "83"))
      (rule "pullOutSelect" (formula "108") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")))
      (rule "replaceKnownSelect_taclet00_37" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_38" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "108") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "180")))
      (rule "replaceKnownSelect_taclet00_39" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_40" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "108") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "181")))
      (rule "replaceKnownSelect_taclet00_41" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_42" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "107") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "2,0"))
      (rule "pullOutSelect" (formula "107") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet00_43" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_44" (formula "1") (term "2,0"))
      (rule "pullOutSelect" (formula "107") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet00_45" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_46" (formula "1") (term "2,0"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfUnion" (formula "77") (term "0,0"))
      (rule "elementOfSingleton" (formula "77") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "77"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "pullOutSelect" (formula "78") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_1"))
      (rule "simplifySelectOfAnonEQ" (formula "78") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "78"))
      (rule "replaceKnownSelect_taclet00_51" (formula "78") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_52" (formula "78") (term "2,0"))
      (rule "eqSymm" (formula "79") (term "0"))
      (rule "pullOutSelect" (formula "79") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_1"))
      (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "79"))
      (rule "replaceKnownSelect_taclet00_49" (formula "79") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_50" (formula "79") (term "2,0"))
      (rule "eqSymm" (formula "80") (term "1"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfUnion" (formula "14") (term "0,0"))
      (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfUnion" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "85") (term "1,0") (inst "selectSK=java_util_Collection_seq_6"))
      (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "122")))
      (rule "elementOfSingleton" (formula "85") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "122")))
      (rule "ifthenelse_negated" (formula "85") (term "0"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfUnion" (formula "77") (term "0,0"))
      (rule "elementOfSingleton" (formula "77") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "77"))
      (rule "elementOfSingleton" (formula "77") (term "0,0"))
       (builtin "One Step Simplification" (formula "77"))
      (rule "hideAuxiliaryEq" (formula "77"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "113") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "79") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "79") (term "0,0"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "pullOutSelect" (formula "87") (term "1,0") (inst "selectSK=java_util_Collection_seq_7"))
      (rule "simplifySelectOfAnonEQ" (formula "87") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "120")))
      (rule "elementOfSingleton" (formula "87") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "120")))
      (rule "ifthenelse_negated" (formula "87") (term "0"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "pullOutSelect" (formula "80") (term "1,0") (inst "selectSK=java_util_Collection_seq_8"))
      (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "120")))
      (rule "elementOfSingleton" (formula "80") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "120")))
      (rule "ifthenelse_negated" (formula "80") (term "0"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "elementOfUnion" (formula "77") (term "0,0"))
      (rule "elementOfSingleton" (formula "77") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "77"))
      (rule "elementOfUnion" (formula "78") (term "0,0"))
      (rule "elementOfSingleton" (formula "78") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "78"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfUnion" (formula "14") (term "0,0"))
      (rule "elementOfSingleton" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "elementOfSingleton" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "187")))
      (rule "hideAuxiliaryEq" (formula "14"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_84" (formula "124") (term "0"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfUnion" (formula "13") (term "0,0"))
      (rule "elementOfSingleton" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "elementOfSingleton" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "185")))
      (rule "hideAuxiliaryEq" (formula "13"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_85" (formula "122") (term "0"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "183")))
      (rule "elementOfSingleton" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "hideAuxiliaryEq" (formula "12"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_86" (formula "120") (term "0"))
      (rule "elementOfUnion" (formula "11") (term "0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "181")))
      (rule "elementOfSingleton" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "118") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "82") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "81") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "81") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "81") (term "1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "82") (term "1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "82") (term "1,0,1,0,0"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "179")))
      (rule "elementOfSingleton" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "116") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "84") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "83") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "83") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "83") (term "1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "84") (term "1,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "84") (term "1,0,0,0,0"))
      (rule "elementOfUnion" (formula "9") (term "0,0"))
      (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfSingleton" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "177")))
      (rule "hideAuxiliaryEq" (formula "9"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "114") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "75") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "74") (term "1,2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "74") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "74") (term "1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "75") (term "1,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "75") (term "1,0,0,0,0"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "175")))
      (rule "elementOfSingleton" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "hideAuxiliaryEq" (formula "8"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_90" (formula "112") (term "0"))
      (rule "elementOfUnion" (formula "7") (term "0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "173")))
      (rule "elementOfSingleton" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "eqSymm" (formula "7"))
      (rule "elementOfUnion" (formula "6") (term "0,0"))
      (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "173")))
      (rule "elementOfSingleton" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "hideAuxiliaryEq" (formula "6"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_91" (formula "109") (term "0"))
      (rule "elementOfUnion" (formula "69") (term "0,0"))
      (rule "elementOfSingleton" (formula "69") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "elementOfUnion" (formula "70") (term "0,0"))
      (rule "elementOfSingleton" (formula "70") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "70"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "171")))
      (rule "elementOfSingleton" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_92" (formula "107") (term "0"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfSingleton" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "169")))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_93" (formula "105") (term "0"))
      (rule "elementOfUnion" (formula "3") (term "0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfSingleton" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "hideAuxiliaryEq" (formula "3"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_94" (formula "103") (term "0"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_95" (formula "101") (term "0"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_96" (formula "99") (term "0"))
      (rule "elementOfUnion" (formula "64") (term "0,0"))
      (rule "elementOfSingleton" (formula "64") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfSingleton" (formula "64") (term "0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "hideAuxiliaryEq" (formula "64"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_97" (formula "65") (term "1,0"))
      (rule "elementOfUnion" (formula "64") (term "0,0"))
      (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "elementOfSingleton" (formula "64") (term "0,0"))
       (builtin "One Step Simplification" (formula "64"))
      (rule "hideAuxiliaryEq" (formula "64"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_98" (formula "64") (term "1,1"))
      (rule "seqGetAlphaCast" (formula "24") (term "0"))
      (rule "castedGetAny" (formula "24") (term "0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "seqGetAlphaCast" (formula "18") (term "0"))
      (rule "castedGetAny" (formula "18") (term "0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "lenNonNegative" (formula "25") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "25"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "144"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "commute_and" (formula "96") (term "0,0"))
      (rule "shift_paren_and" (formula "45") (term "0,0"))
      (rule "commute_and" (formula "59") (term "0,0,1,1,0"))
      (rule "shift_paren_and" (formula "44") (term "0,0"))
      (rule "commute_and" (formula "96") (term "0,0,1,0"))
      (rule "lenNonNegative" (formula "57") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "57"))
      (rule "seqGetAlphaCast" (formula "59") (term "0"))
      (rule "castedGetAny" (formula "59") (term "0"))
       (builtin "One Step Simplification" (formula "59"))
      (rule "true_left" (formula "59"))
      (rule "commute_and" (formula "83") (term "1,0,0"))
      (rule "commute_and" (formula "82") (term "1,0,0"))
      (rule "commute_and" (formula "82") (term "0,0,0"))
      (rule "commute_and" (formula "83") (term "0,0,0"))
       (builtin "Use Operation Contract" (formula "159") (newnames "heapBefore_initPolyasVals,exc_69,heapAfter_initPolyasVals,anon_heap_initPolyasVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initPolyasVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
      (branch "Post (initPolyasVals)"
          (builtin "One Step Simplification" (formula "101"))
          (builtin "One Step Simplification" (formula "163"))
          (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "164")) (ifInst ""  (formula "134")) (ifInst ""  (formula "164")) (ifInst ""  (formula "134")))
          (builtin "One Step Simplification" (formula "100"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "1,1") (ifseqformula "65"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "1,0,1") (ifseqformula "65"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,1,1") (ifseqformula "35"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,1,0,1") (ifseqformula "35"))
         (rule "replaceKnownSelect_taclet00_60" (formula "102") (term "0,1,1,0,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_60" (formula "102") (term "0,0,1,1,0,1,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_19" (formula "102") (term "0,0,0,1,0,1,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_19" (formula "102") (term "0,1,1,0,0,1,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "102") (term "0,0,0,1,0,1,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "102") (term "0,1,1,0,0,1,0,1,1,1,0"))
         (rule "andLeft" (formula "100"))
         (rule "andLeft" (formula "103"))
         (rule "andLeft" (formula "104"))
         (rule "andLeft" (formula "103"))
         (rule "andLeft" (formula "105"))
         (rule "andLeft" (formula "104"))
         (rule "andLeft" (formula "105"))
         (rule "eqSymm" (formula "106") (term "1,0,1,0"))
         (rule "replace_known_left" (formula "109") (term "1,0") (ifseqformula "37"))
          (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "138")))
         (rule "true_left" (formula "109"))
         (rule "replace_known_left" (formula "108") (term "0,0") (ifseqformula "62"))
          (builtin "One Step Simplification" (formula "108"))
         (rule "true_left" (formula "108"))
         (rule "castedGetAny" (formula "106") (term "0,1,0,1,0"))
         (rule "castedGetAny" (formula "106") (term "1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0"))
         (rule "lenNonNegative" (formula "43") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "43"))
         (rule "lenNonNegative" (formula "55") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "55"))
         (rule "lenNonNegative" (formula "50") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "50"))
         (rule "seqGetAlphaCast" (formula "58") (term "0"))
         (rule "castedGetAny" (formula "58") (term "0"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "true_left" (formula "58"))
         (rule "seqGetAlphaCast" (formula "52") (term "0"))
         (rule "castedGetAny" (formula "52") (term "0"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "true_left" (formula "52"))
         (rule "commute_and" (formula "94") (term "0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "171"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "171"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "169") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "170"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "168") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "169"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "172") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "173"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "160") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "161"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "160") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "161"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "165") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "166"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "161") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "162"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "169") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "170"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "171") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "172"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "167") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "168"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "171") (term "0") (ifseqformula "14"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "172"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "175") (term "0") (ifseqformula "15"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "176"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "178") (term "0") (ifseqformula "16"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "179"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "178") (term "0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "179"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "lenNonNegative" (formula "70") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "70"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "166") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "167"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "165") (term "0") (ifseqformula "19"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "166"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "167") (term "0") (ifseqformula "20"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "168"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_or" (formula "107"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "118") (inst "iv=iv"))
         (rule "andLeft" (formula "118"))
         (rule "inEqSimp_commuteLeq" (formula "119") (term "0,0,0"))
         (rule "commute_and" (formula "112") (term "0,0"))
         (rule "commute_and" (formula "107") (term "0,0"))
         (rule "commuteUnion_2" (formula "124") (term "0,1,0"))
         (rule "commuteUnion_2" (formula "124") (term "1,0"))
         (rule "commuteUnion" (formula "124") (term "0,0,1,0"))
         (rule "commute_and" (formula "100") (term "0,0"))
         (rule "commute_and" (formula "97") (term "0,0"))
         (rule "commute_and" (formula "92") (term "0,0"))
         (rule "lenNonNegative" (formula "116") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "116"))
         (rule "seqGetAlphaCast" (formula "118") (term "0"))
         (rule "castedGetAny" (formula "118") (term "0"))
          (builtin "One Step Simplification" (formula "118"))
         (rule "true_left" (formula "118"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "115") (inst "iv=iv"))
         (rule "andLeft" (formula "115"))
         (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0,0"))
         (rule "lenNonNegative" (formula "110") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "110"))
         (rule "seqGetAlphaCast" (formula "112") (term "0"))
         (rule "castedGetAny" (formula "112") (term "0"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "true_left" (formula "112"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "109") (inst "iv=iv"))
         (rule "andLeft" (formula "109"))
         (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0"))
         (rule "lenNonNegative" (formula "102") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "102"))
         (rule "lenNonNegative" (formula "94") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "94"))
         (rule "seqGetAlphaCast" (formula "105") (term "0"))
         (rule "castedGetAny" (formula "105") (term "0"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "true_left" (formula "105"))
         (rule "seqGetAlphaCast" (formula "105") (term "1"))
         (rule "castedGetAny" (formula "105") (term "0"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "true_left" (formula "105"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "135") (inst "i=i") (inst "i_0=i_0"))
         (rule "replaceKnownSelect_taclet00_17" (formula "135") (term "0,1,0,0"))
         (rule "replaceKnownSelect_taclet00_19" (formula "135") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "135") (term "0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "135") (term "0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_17" (formula "135") (term "0,0,0,0,1,0,1"))
         (rule "replaceKnownSelect_taclet00_17" (formula "135") (term "0,1,1,0,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "135") (term "0,0,0,0,1,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "135") (term "0,1,1,0,0,0,1"))
         (rule "replaceKnownSelect_taclet00_19" (formula "135") (term "0,1,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_19" (formula "135") (term "0,0,0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "135") (term "0,1,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "135") (term "0,0,0,0,1,0,1,0"))
         (rule "expand_inInt" (formula "135") (term "1,0,0,1,0"))
         (rule "expand_inInt" (formula "135") (term "1,0,0,1"))
         (rule "replace_int_MAX" (formula "135") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "135") (term "0,1,1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "135") (term "1,0,1,0,0,1"))
         (rule "replace_int_MIN" (formula "135") (term "0,1,1,0,0,1"))
         (rule "andLeft" (formula "135"))
         (rule "andLeft" (formula "135"))
         (rule "eqSymm" (formula "135"))
         (rule "castedGetAny" (formula "136") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "135") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "136") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "135") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "135") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "137"))
         (rule "replaceKnownSelect_taclet00_53" (formula "137") (term "0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_54" (formula "137") (term "0,0,1"))
         (rule "replaceKnownSelect_taclet00_57" (formula "137") (term "0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_55" (formula "137") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_58" (formula "137") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_56" (formula "137") (term "0,0,0,0"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "notLeft" (formula "139"))
         (rule "notLeft" (formula "137"))
         (rule "notLeft" (formula "137"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "137") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
         (rule "replaceKnownSelect_taclet00_70" (formula "137") (term "1,1,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "137") (term "1,1,0,1"))
         (rule "replaceKnownSelect_taclet00_60" (formula "137") (term "0,0,0,1,0,1"))
         (rule "replaceKnownSelect_taclet00_60" (formula "137") (term "0,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet00_59" (formula "137") (term "0,1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_70" (formula "137") (term "1,1,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "137") (term "1,1,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet00_79" (formula "137") (term "1,1,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_62" (formula "137") (term "0,0,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_59" (formula "137") (term "0,0,0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet00_78" (formula "137") (term "1,0,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_62" (formula "137") (term "0,1,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_60" (formula "137") (term "0,1,1,0,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_98" (formula "137") (term "1,1,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "137") (term "0,0,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_63" (formula "137") (term "0,0,1,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_61" (formula "137") (term "0,1,1,0,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet00_60" (formula "137") (term "0,0,0,0,1,0,1,0,0"))
         (rule "replaceKnownSelect_taclet00_61" (formula "137") (term "0,0,0,1,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_97" (formula "137") (term "1,0,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "137") (term "0,1,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_64" (formula "137") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_61" (formula "137") (term "0,1,1,0,0,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_84" (formula "137") (term "0,0,1,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_61" (formula "137") (term "0,0,0,0,1,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_65" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_66" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_85" (formula "137") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_67" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_86" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_68" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_69" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_70" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_72" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_73" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_90" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_74" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_62" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_91" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_92" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_93" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_75" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_77" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_76" (formula "137") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "insert_constant_string_value" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "137") (ifInst ""  (formula "148")) (ifInst ""  (formula "149")) (ifInst ""  (formula "150")) (ifInst ""  (formula "151")) (ifInst ""  (formula "153")) (ifInst ""  (formula "154")) (ifInst ""  (formula "155")) (ifInst ""  (formula "156")) (ifInst ""  (formula "157")) (ifInst ""  (formula "158")) (ifInst ""  (formula "159")))
         (rule "insert_constant_string_value" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "insert_constant_string_value" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_94" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_95" (formula "137") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_96" (formula "137") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "castDel" (formula "137") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
         (rule "castDel" (formula "137") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "castDel" (formula "137") (term "0,0,0,1,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "notLeft" (formula "139"))
         (rule "andLeft" (formula "137"))
         (rule "notLeft" (formula "139"))
         (rule "andLeft" (formula "137"))
         (rule "notLeft" (formula "139"))
         (rule "notLeft" (formula "138"))
         (rule "andLeft" (formula "137"))
         (rule "andLeft" (formula "137"))
         (rule "notLeft" (formula "139"))
         (rule "notLeft" (formula "137"))
         (rule "notLeft" (formula "137"))
         (rule "exLeft" (formula "142") (inst "sk=i_6"))
         (rule "andLeft" (formula "142"))
         (rule "andLeft" (formula "142"))
         (rule "exLeft" (formula "139") (inst "sk=i_2_4"))
         (rule "andLeft" (formula "139"))
         (rule "andLeft" (formula "139"))
         (rule "castedGetAny" (formula "143") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "142") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "138") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "146") (term "0"))
         (rule "eqSymm" (formula "146"))
         (rule "castedGetAny" (formula "141") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "143") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "142") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "138") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "144"))
         (rule "inEqSimp_commuteLeq" (formula "139"))
         (rule "applyEqRigid" (formula "105") (term "0") (ifseqformula "146"))
         (rule "applyEqRigid" (formula "141") (term "1") (ifseqformula "146"))
         (rule "applyEqRigid" (formula "149") (term "0") (ifseqformula "146"))
         (rule "applyEqRigid" (formula "146") (term "1") (ifseqformula "105"))
         (rule "applyEqRigid" (formula "141") (term "1") (ifseqformula "105"))
         (rule "applyEqRigid" (formula "149") (term "0") (ifseqformula "105"))
         (rule "commute_and_2" (formula "65") (term "0,0,0"))
         (rule "commute_and_2" (formula "64") (term "0,0,0"))
         (rule "commute_and_2" (formula "129") (term "0,1,0"))
         (rule "commute_and_2" (formula "83") (term "0,1,1,0"))
         (rule "commute_and" (formula "147") (term "0,0"))
         (rule "shift_paren_and" (formula "107") (term "0,0"))
         (rule "shift_paren_and" (formula "108") (term "0,0"))
         (rule "commute_and" (formula "147") (term "0,0,1,0"))
         (rule "methodCallEmpty" (formula "209") (term "1"))
         (rule "commute_and" (formula "127") (term "0,0"))
         (rule "commute_and" (formula "121") (term "0,0"))
         (rule "commute_and" (formula "112") (term "0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "96") (inst "iv=iv"))
         (rule "andLeft" (formula "96"))
         (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "99") (inst "iv=iv"))
         (rule "andLeft" (formula "99"))
         (rule "inEqSimp_commuteLeq" (formula "100") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "103") (inst "iv=iv"))
         (rule "andLeft" (formula "103"))
         (rule "inEqSimp_commuteLeq" (formula "104") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "106") (inst "iv=iv"))
         (rule "andLeft" (formula "106"))
         (rule "inEqSimp_commuteLeq" (formula "107") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "90") (inst "iv=iv"))
         (rule "andLeft" (formula "90"))
         (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "93") (inst "iv=iv"))
         (rule "andLeft" (formula "93"))
         (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0"))
         (rule "commute_or" (formula "149"))
         (rule "commute_and" (formula "148") (term "0,0,0"))
         (rule "commute_and" (formula "148") (term "1,0,0"))
         (rule "commute_and" (formula "147") (term "0,0,0"))
         (rule "commute_and" (formula "147") (term "1,0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "194") (term "0") (ifseqformula "21"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "195"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "196") (term "0") (ifseqformula "22"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "197"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "1,1") (ifseqformula "23"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "23"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "197") (term "0") (ifseqformula "23"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "198"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "lenNonNegative" (formula "146") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "146"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "1,0,1,0") (ifseqformula "89"))
         (rule "replace_known_right" (formula "88") (term "0") (ifseqformula "179"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "199") (term "0") (ifseqformula "58"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "200"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "197") (term "1,0") (ifseqformula "59"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "199"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0,0") (ifseqformula "60"))
         (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "197"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "191") (term "0") (ifseqformula "93"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "192"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "194") (term "0") (ifseqformula "94"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "195"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "197") (term "0") (ifseqformula "95"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "198"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "197") (term "0") (ifseqformula "96"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "198"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "196") (term "0") (ifseqformula "97"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "197"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "169") (term "0,0"))
         (rule "commute_and" (formula "168") (term "0,0"))
         (rule "commute_and" (formula "164") (term "0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "192") (term "0") (ifseqformula "65"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "193"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "182") (term "0") (ifseqformula "99"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "183"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "184") (term "0") (ifseqformula "100"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "185"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "186") (term "0") (ifseqformula "101"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "187"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "183") (term "0") (ifseqformula "102"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "184"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "191") (term "0") (ifseqformula "103"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "192"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "143") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "replace_known_left" (formula "114") (term "0,0,0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "145") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "145"))
         (rule "hideAuxiliaryEq" (formula "145"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "145") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "145") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "143") (term "0,1"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "true_left" (formula "143"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "145") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "143") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "141") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_100" (formula "141") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "110") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "replace_known_left" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "113"))
         (rule "replace_known_left" (formula "112") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "hideAuxiliaryEq" (formula "112"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "112") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "114") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "110") (term "0,1"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "true_left" (formula "110"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "112") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "110") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_101" (formula "112") (term "0,1,1,0,0"))
         (rule "replace_known_left" (formula "140") (term "0,0,1,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "1")))
         (rule "true_left" (formula "140"))
         (rule "replace_known_left" (formula "110") (term "0,0,1,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "1")))
         (rule "true_left" (formula "110"))
         (rule "replace_known_left" (formula "112") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "hideAuxiliaryEq" (formula "112"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "166") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "115") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "162") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "114") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "110") (term "0,1"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "true_left" (formula "110"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "161") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "110") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "true_left" (formula "110"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "110") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_102" (formula "110") (term "0,0,0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "180") (term "0") (ifseqformula "104"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "181"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "146") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "146"))
         (rule "replace_known_left" (formula "123") (term "0,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "123"))
         (rule "replace_known_left" (formula "147") (term "0,0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "147") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "124") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "121") (term "0,0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "125") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "125"))
         (rule "hideAuxiliaryEq" (formula "125"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_103" (formula "123") (term "0,1"))
          (builtin "One Step Simplification" (formula "123"))
         (rule "true_left" (formula "123"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_103" (formula "123") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "123"))
         (rule "true_left" (formula "123"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_103" (formula "123") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_103" (formula "123") (term "0,1,0,0,0"))
         (rule "replace_known_left" (formula "120") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "replace_known_left" (formula "145") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "145"))
         (rule "hideAuxiliaryEq" (formula "145"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "145") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "143") (term "0,1"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "true_left" (formula "143"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "143") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "true_left" (formula "143"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "143") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "135") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "135") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_104" (formula "142") (term "0,0,1,0,0,1,0"))
         (rule "replace_known_left" (formula "122") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "122"))
         (rule "hideAuxiliaryEq" (formula "122"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_105" (formula "120") (term "0,1"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "true_left" (formula "120"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_105" (formula "120") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "true_left" (formula "120"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_105" (formula "120") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_105" (formula "120") (term "0,1,0,0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "171") (term "0") (ifseqformula "105"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "172"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "174") (term "0") (ifseqformula "106"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "175"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "174") (term "0") (ifseqformula "107"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "175"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "0") (ifseqformula "108"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "171"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "163") (term "0") (ifseqformula "109"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "164"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "167") (term "0") (ifseqformula "110"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "168"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "176") (term "0") (ifseqformula "111"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "177"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "140") (term "0,0,1,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "122") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "122"))
         (rule "hideAuxiliaryEq" (formula "122"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "120") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "124") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "122") (term "1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "121") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "123") (term "1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_106" (formula "123") (term "1,0,1,1,0,0"))
         (rule "replace_known_left" (formula "138") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "138"))
         (rule "replace_known_left" (formula "121") (term "0,0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "1")))
         (rule "true_left" (formula "121"))
         (rule "replace_known_left" (formula "139") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "139"))
         (rule "hideAuxiliaryEq" (formula "139"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "140") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "139") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "137") (term "0,1"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "true_left" (formula "137"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "139") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "137") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "true_left" (formula "137"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "135") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_107" (formula "135") (term "0,1,0,0,0"))
         (rule "replace_known_left" (formula "122") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "120") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "true_left" (formula "120"))
         (rule "replace_known_left" (formula "120") (term "0,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "replace_known_left" (formula "122") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "122"))
         (rule "hideAuxiliaryEq" (formula "122"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "149") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "146") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "125") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "124") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "125") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "152") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "125") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "120") (term "0,1"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "true_left" (formula "120"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "146") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "44") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "120") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "true_left" (formula "120"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "120") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "147") (term "0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "120") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_108" (formula "146") (term "0,0,1,0,1,0"))
         (rule "eqSymm" (formula "145"))
         (rule "eqSymm" (formula "142"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "154") (term "0") (ifseqformula "112"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "155"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "153") (term "0") (ifseqformula "113"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "154"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "152") (term "0") (ifseqformula "114"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "153"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "1,0") (ifseqformula "115"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "1,1") (ifseqformula "116"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "156") (term "0") (ifseqformula "117"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "157"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and_2" (formula "130") (term "0,0,0"))
         (rule "commute_and_2" (formula "130") (term "0,0,0"))
         (rule "charLiteral_to_int" (formula "117") (term "1,0,0,0,1,1,0"))
         (rule "tryEmpty" (formula "212") (term "1"))
         (rule "shift_paren_and" (formula "143") (term "0,0"))
         (rule "shift_paren_and" (formula "142") (term "0,0"))
         (rule "commute_and_2" (formula "150") (term "0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "152") (term "0") (ifseqformula "121"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "153"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and_2" (formula "144") (term "0,0,0"))
         (rule "commute_and_2" (formula "143") (term "0,0,0"))
         (rule "emptyModality" (formula "211") (term "1"))
          (opengoal "!(  wellFormed(heapAtPre<<anonHeapFunction>>)   & heap = heapAtPre<<anonHeapFunction>>   & !self_53 = null   &   boolean::select(heap,                       self_53,                       java.lang.Object::<created>)     = TRUE   &   de.polyas.core3.open.cred.CredTool::exactInstance(self_53)     = TRUE   & (  ((  record_7 = null          |   boolean::select(heapAtPre<<anonHeapFunction>>,                              record_7,                              java.lang.Object::<created>)            = TRUE)<<SC>>)      & ((  password_7 = null          |   boolean::select(heapAtPre<<anonHeapFunction>>,                              password_7,                              java.lang.Object::<created>)            = TRUE)<<SC>>))   & ((  java.math.BigInteger::<$inv>(heapAtPre<<anonHeapFunction>>)       & ((  de.polyas.core3.open.cred.CredentialGenerator::<$inv>(heapAtPre<<anonHeapFunction>>)           & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre<<anonHeapFunction>>)               & ((  java.lang.Object::<inv>(heapAtPre<<anonHeapFunction>>,                                             record_7)                   & ((  java.lang.Object::<inv>(heapAtPre<<anonHeapFunction>>,                                                 self_53)                       & ((  (\\forall int j;                                ((   (  leq(Z(0(#)), j)<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>                                      & lt(j,                                           seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                              java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,                                                                                          self_53,                                                                                          de.polyas.core3.open.cred.CredTool::$inputColsForDist),                                                              java.util.Collection::$seq)))<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>)<<SC,                                                                                                                                                         origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>                                  -> (\\exists int i;                                        ((  (leq(Z(0(#)),                                                 i)<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>                                          & lt(i,                                               seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                  record_7,                                                                  org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>)<<SC,                                                                                                                                                                             origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>                                          & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                          record_7,                                                                                          org.apache.commons.csv.CSVRecord::$key_seq),                                                                              i))                                             = (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                          java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,                                                                                                                      self_53,                                                                                                                      de.polyas.core3.open.cred.CredTool::$inputColsForDist),                                                                                          java.util.Collection::$seq),                                                                              j)))<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>)<<SC,                                                                                                                                                origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 194\",\"[]\")>>                           & ((  (\\forall int j;                                    ((   (  leq(Z(0(#)),                                                j)<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>                                          & lt(j,                                               seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                  java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,                                                                                              self_53,                                                                                              de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),                                                                  java.util.Collection::$seq)))<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>)<<SC,                                                                                                                                                             origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>                                      -> (\\exists int i;                                            ((  (leq(Z(0(#)),                                                     i)<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>                                              & lt(i,                                                   seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                      record_7,                                                                      org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>)<<SC,                                                                                                                                                                                 origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>                                              & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                              record_7,                                                                                              org.apache.commons.csv.CSVRecord::$key_seq),                                                                                  i))                                                 = (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                              java.util.ArrayList::select(heapAtPre<<anonHeapFunction>>,                                                                                                                          self_53,                                                                                                                          de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),                                                                                              java.util.Collection::$seq),                                                                                  j)))<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>)<<SC,                                                                                                                                                    origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 198\",\"[]\")>>                               & ((  (\\exists int i;                                        ((  (leq(Z(0(#)),                                                 i)<<origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>                                          & lt(i,                                               seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                  record_7,                                                                  org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>)<<SC,                                                                                                                                                                             origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>                                          & (  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                          record_7,                                                                                          org.apache.commons.csv.CSVRecord::$key_seq),                                                                              i))                                             = java.lang.String::select(heapAtPre<<anonHeapFunction>>,                                                                        self_53,                                                                        de.polyas.core3.open.cred.CredTool::$idCol))<<origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>)<<SC,                                                                                                                                                                                  origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 202\",\"[]\")>>                                   & ((  (\\forall int i;                                            ((   (  leq(Z(0(#)),                                                        i)<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                                  & lt(i,                                                       seqLen(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                          record_7,                                                                          org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>)<<SC,                                                                                                                                                                                     origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                              -> ((  (java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                                record_7,                                                                                                org.apache.commons.csv.CSVRecord::$key_seq),                                                                                    i))                                                   = java.lang.String::select(heapAtPre<<anonHeapFunction>>,                                                                              self_53,                                                                              de.polyas.core3.open.cred.CredTool::$idCol))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                              -> (\\exists int j;                                                    ((  (leq(Z(0(#)),                                                             j)<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                                      & lt(j,                                                           seqLen(strContent((java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                                                        record_7,                                                                                                                        org.apache.commons.csv.CSVRecord::$value_seq),                                                                                                            i)))))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>)<<SC,                                                                                                                                                                                origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                                      & gt((int)(any::seqGet(strContent((java.lang.String)(any::seqGet(Seq::select(heapAtPre<<anonHeapFunction>>,                                                                                                                                   record_7,                                                                                                                                   org.apache.commons.csv.CSVRecord::$value_seq),                                                                                                                       i))),                                                                             j)),                                                           C(2(3(#))))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>)<<SC,                                                                                                                                    origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 205\",\"[]\")>>                                       & ((  (!(  record_7                                                = null)<<origin(\"requires @ file CredTool.java @ line 216\",\"[]\")>>)<<impl,                                                                                                                     origin(\"requires @ file CredTool.java @ line 216\",\"[]\")>>                                           & (!(  password_7                                                = null)<<origin(\"requires @ file CredTool.java @ line 216\",\"[]\")>>)<<impl,                                                                                                                     origin(\"requires @ file CredTool.java @ line 216\",\"[]\")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>)   & {_record_7:=record_7 || _password_7:=password_7}       \\[{           exc_66=null;try {             self_53.processCSVRecord(_record_7,_password_7)@de.polyas.core3.open.cred.CredTool;           }   catch (java.lang.Throwable e) {             exc_66=e;           }         }\\] (  selfAtPost_53 = self_53              & excAtPost_66 = exc_66              & heapAtPost = heap)) ")
      )
      (branch "Exceptional Post (initPolyasVals)"
          (builtin "One Step Simplification" (formula "161"))
          (builtin "One Step Simplification" (formula "100"))
         (rule "andLeft" (formula "100"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0") (ifseqformula "100"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,0") (ifseqformula "65"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1,0") (ifseqformula "35"))
         (rule "andLeft" (formula "101"))
         (rule "andLeft" (formula "101"))
         (rule "notLeft" (formula "101"))
         (rule "close" (formula "103") (ifseqformula "102"))
      )
      (branch "Pre (initPolyasVals)"
          (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "160")) (ifInst ""  (formula "130")) (ifInst ""  (formula "160")) (ifInst ""  (formula "130")))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "159") (term "0,1,1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "159") (term "0,1,0") (userinteraction))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "159") (term "0,0") (inst "i=i") (inst "i_0=i_0") (userinteraction))
         (rule "andRight" (formula "159"))
         (branch "Case 1"
            (rule "andRight" (formula "159"))
            (branch "Case 1"
               (rule "andRight" (formula "159"))
               (branch "Case 1"
                  (rule "andRight" (formula "159"))
                  (branch
                     (rule "replaceKnownSelect_taclet00_19" (formula "159") (term "0,0"))
                     (rule "replaceKnownSelect_taclet00_17" (formula "159") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "159") (term "0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "159") (term "0,1"))
                     (rule "eqSymm" (formula "159"))
                     (rule "close" (formula "159") (ifseqformula "43"))
                  )
                  (branch "Case 2"
                     (rule "replaceKnownSelect_taclet00_19" (formula "159") (term "0,0,0,0,1,0"))
                     (rule "replaceKnownSelect_taclet00_19" (formula "159") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "159") (term "0,0,0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "159") (term "0,1,1,0,0,0"))
                     (rule "expand_inInt" (formula "159") (term "1,0,0"))
                     (rule "replace_int_MIN" (formula "159") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "159") (term "1,0,1,0,0"))
                     (rule "allRight" (formula "159") (inst "sk=i_0_0"))
                     (rule "impRight" (formula "159"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "161"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "2"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "59"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "59") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "93"))
                     (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "93") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "63"))
                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "63") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "76"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "76") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "38") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "99"))
                     (rule "polySimp_mulComm0" (formula "99") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "99") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "54"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "84"))
                     (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "96") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "84") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "5"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "156") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "92") (term "0") (ifseqformula "72"))
                     (rule "applyEqReverse" (formula "94") (term "0,0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "93") (term "0,0,1,0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,1,0,0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0") (ifseqformula "92"))
                     (rule "hideAuxiliaryEq" (formula "92"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "24") (term "0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "137") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "149") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "38") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "157") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "30") (term "0,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "136") (term "0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "28") (term "0,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "138") (term "0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "38") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "159") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "155") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "147") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "31") (term "0,0,0,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "8"))
                     (rule "eqSymm" (formula "15"))
                     (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "153") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "86") (term "5") (ifseqformula "71"))
                     (rule "applyEq" (formula "32") (term "0,0,1,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "104") (term "0") (ifseqformula "6"))
                     (rule "applyEq" (formula "150") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "31") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "84") (term "1") (ifseqformula "6"))
                     (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "145") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "8"))
                     (rule "eqSymm" (formula "17") (term "0"))
                     (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "37") (term "0,1,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "76") (term "0") (ifseqformula "96"))
                     (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "76"))
                     (rule "hideAuxiliaryEq" (formula "76"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "145") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "132") (term "0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "77") (term "0") (ifseqformula "97"))
                     (rule "applyEqReverse" (formula "78") (term "1,0") (ifseqformula "77"))
                     (rule "hideAuxiliaryEq" (formula "77"))
                     (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "21") (term "0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "34") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "applyEq" (formula "130") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "31") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "126") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "131") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "130") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "38") (term "6") (ifseqformula "33"))
                     (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "78") (term "0,1,0,0,0,0,0,0") (ifseqformula "40"))
                     (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                     (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "14") (term "0"))
                     (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "38"))
                     (rule "applyEq" (formula "11") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                     (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                     (rule "polySimp_elimOne" (formula "52") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "81") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                     (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                     (rule "polySimp_elimOne" (formula "65") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                     (rule "polySimp_elimOne" (formula "85") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                     (rule "polySimp_elimOne" (formula "43") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "69") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "82") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "88") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                     (rule "polySimp_elimOne" (formula "71") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                     (rule "polySimp_elimOne" (formula "79") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "77") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "nnf_imp2or" (formula "80") (term "0"))
                     (rule "commute_or" (formula "75"))
                     (rule "nnf_imp2or" (formula "66") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "40") (term "0"))
                     (rule "nnf_imp2or" (formula "73") (term "0"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_imp2or" (formula "37") (term "0"))
                     (rule "nnf_imp2or" (formula "62") (term "0"))
                     (rule "nnf_imp2or" (formula "68") (term "0"))
                     (rule "nnf_imp2or" (formula "80") (term "0"))
                     (rule "nnf_imp2or" (formula "86") (term "0"))
                     (rule "nnf_imp2or" (formula "53") (term "0"))
                     (rule "nnf_imp2or" (formula "75") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "74") (term "0"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_notAnd" (formula "79") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                     (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                     (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "66") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "66") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0"))
                     (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "66") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                     (rule "mul_literals" (formula "66") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "40") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                     (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "73") (term "0,0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "37") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "62") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "62") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "62") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                     (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "62") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                     (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "68") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "68") (term "0,0,0"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "68") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                     (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "68") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "68") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "80") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0"))
                     (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "80") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                     (rule "mul_literals" (formula "80") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "80") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "86") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                     (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                     (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "53") (term "1,0"))
                     (rule "nnf_notAnd" (formula "53") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                     (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                     (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "75") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "75") (term "0,0,0"))
                     (rule "mul_literals" (formula "75") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "75") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                     (rule "mul_literals" (formula "75") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "75") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "75") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "75") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "75") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "75") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "75") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "26") (term "1,0"))
                     (rule "nnf_notAnd" (formula "74") (term "0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                     (rule "ifthenelse_split" (formula "82") (term "0"))
                     (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "79") (term "0,0,0,1,0") (ifseqformula "83"))
                        (rule "applyEqReverse" (formula "85") (term "0,0") (ifseqformula "83"))
                        (rule "applyEqReverse" (formula "79") (term "0,1,1,0,0") (ifseqformula "83"))
                        (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "83"))
                        (rule "applyEqReverse" (formula "84") (term "0,0") (ifseqformula "83"))
                        (rule "hideAuxiliaryEq" (formula "83"))
                        (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "applyEqReverse" (formula "70") (term "0,0") (ifseqformula "65"))
                        (rule "applyEqReverse" (formula "66") (term "0,1,1,0,0") (ifseqformula "65"))
                        (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "65"))
                        (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0") (ifseqformula "65"))
                        (rule "hideAuxiliaryEq" (formula "65"))
                        (rule "ifthenelse_split" (formula "83") (term "0"))
                        (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "85") (term "0,0,1,0,1,0") (ifseqformula "84"))
                           (rule "applyEqReverse" (formula "85") (term "0,1,0,0,0") (ifseqformula "84"))
                           (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "84"))
                           (rule "applyEqReverse" (formula "78") (term "0,1,1,0,0") (ifseqformula "84"))
                           (rule "applyEqReverse" (formula "78") (term "0,0,0,1,0") (ifseqformula "84"))
                           (rule "hideAuxiliaryEq" (formula "84"))
                           (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0") (ifseqformula "65"))
                           (rule "applyEqReverse" (formula "66") (term "0,1,1,0,0") (ifseqformula "65"))
                           (rule "hideAuxiliaryEq" (formula "65"))
                           (rule "ifthenelse_split" (formula "60") (term "0"))
                           (branch "self_53.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "72") (term "0,1,1,0,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "75") (term "0,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "72") (term "0,0,0,1,0") (ifseqformula "61"))
                              (rule "hideAuxiliaryEq" (formula "61"))
                              (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "60"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "applyEqReverse" (formula "62") (term "0,0,0,1,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "62") (term "0,1,1,0,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "63") (term "0,0") (ifseqformula "61"))
                              (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "61"))
                              (rule "hideAuxiliaryEq" (formula "61"))
                              (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                              (rule "cut_direct" (formula "39") (term "1"))
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "applyEq" (formula "89") (term "0") (ifseqformula "39"))
                                 (rule "lenNonNegative" (formula "36") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                 (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                 (rule "castedGetAny" (formula "43") (term "0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                 (rule "castedGetAny" (formula "48") (term "0"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                 (rule "castedGetAny" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "lenNonNegative" (formula "12") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                 (rule "castedGetAny" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "21") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "19") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "16") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "commute_or" (formula "53") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_and" (formula "53") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or" (formula "80") (term "0,0"))
                                 (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "67") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or" (formula "68") (term "0,0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or" (formula "69") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "21") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "shift_paren_or" (formula "67") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "65") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "65") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "9")))
                                 (rule "true_left" (formula "65"))
                                 (rule "commute_or" (formula "65") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "65") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "10")))
                                 (rule "true_left" (formula "65"))
                                 (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                 (rule "castedGetAny" (formula "71") (term "0"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "true_left" (formula "71"))
                                 (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
                                 (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                 (rule "castedGetAny" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                 (rule "castedGetAny" (formula "67") (term "0"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "true_left" (formula "67"))
                                 (rule "seqGetAlphaCast" (formula "63") (term "0"))
                                 (rule "castedGetAny" (formula "63") (term "0"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "true_left" (formula "63"))
                                 (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                                 (rule "charLiteral_to_int" (formula "51") (term "1,1,1,0,1,1,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "51"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "1,0") (ifseqformula "52"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "53"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "54"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "55"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "1") (ifseqformula "56"))
                                 (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "29")))
                                 (rule "true_left" (formula "51"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "33"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "58"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0,0") (ifseqformula "59"))
                                 (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "77"))
                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "97")))
                                 (rule "true_left" (formula "54"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "35"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "60"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0,0") (ifseqformula "37"))
                                 (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "98"))
                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "69")))
                                 (rule "true_left" (formula "52"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "63"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "64"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "65"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "41"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "67"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "68"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "69"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "70"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "71"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "72"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "73"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ex_pull_out3" (formula "43") (term "0"))
                                 (rule "ex_pull_out3" (formula "42") (term "0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                 (rule "allLeft" (formula "31") (inst "t=i_0_0"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "31") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "25"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "31"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0"))
                                 (rule "add_zero_right" (formula "31") (term "0"))
                                 (rule "leq_literals" (formula "31"))
                                 (rule "closeFalse" (formula "31"))
                              )
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEq" (formula "90") (term "0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "82") (term "0") (ifseqformula "39"))
                                 (rule "eqSymm" (formula "82"))
                                 (rule "lenNonNegative" (formula "36") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                 (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                 (rule "castedGetAny" (formula "43") (term "0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                 (rule "castedGetAny" (formula "48") (term "0"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                 (rule "castedGetAny" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "lenNonNegative" (formula "12") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                 (rule "castedGetAny" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "21") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "19") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "lenNonNegative" (formula "16") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "commute_or" (formula "53") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_and" (formula "53") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or" (formula "80") (term "0,0"))
                                 (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "67") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "shift_paren_or" (formula "68") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or" (formula "72") (term "0,0"))
                                 (rule "commute_or" (formula "72") (term "0,0"))
                                 (rule "commute_or" (formula "68") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_and_2" (formula "76") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "21") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0"))
                                 (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "65") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "65") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "9")))
                                 (rule "true_left" (formula "65"))
                                 (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                 (rule "castedGetAny" (formula "71") (term "0"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "true_left" (formula "71"))
                                 (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
                                 (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                 (rule "castedGetAny" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                 (rule "castedGetAny" (formula "67") (term "0"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "true_left" (formula "67"))
                                 (rule "seqGetAlphaCast" (formula "63") (term "0"))
                                 (rule "castedGetAny" (formula "63") (term "0"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "true_left" (formula "63"))
                                 (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                                 (rule "charLiteral_to_int" (formula "51") (term "1,1,1,0,1,1,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "51"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "1,0") (ifseqformula "28"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "53"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "54"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "54"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "55"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "1,0") (ifseqformula "57"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "34"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "60"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "61"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "1,0,0") (ifseqformula "63"))
                                 (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "102"))
                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "81")))
                                 (rule "true_left" (formula "58"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "63"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "64"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "65"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "42"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "121"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "67"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "68"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "69"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "69"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "70"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "71"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "75"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "73"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "74"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                 (rule "true_left" (formula "1"))
                                 (rule "ex_pull_out3" (formula "44") (term "0"))
                                 (rule "ex_pull_out3" (formula "43") (term "0"))
                                 (rule "cnf_rightDist" (formula "44") (term "0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "32") (inst "t=i_0_0"))
                                 (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "26"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "32"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                           )
                           (branch "self_53.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "84") (ifseqformula "98"))
                              (rule "close" (formula "84") (ifseqformula "54"))
                           )
                        )
                        (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "86") (ifseqformula "101"))
                           (rule "close" (formula "86") (ifseqformula "54"))
                        )
                     )
                     (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "88") (ifseqformula "104"))
                        (rule "close" (formula "88") (ifseqformula "54"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "replaceKnownSelect_taclet00_17" (formula "159") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet00_17" (formula "159") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "159") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "159") (term "0,1,1,0,0,0"))
                  (rule "expand_inInt" (formula "159") (term "1,0,0"))
                  (rule "replace_int_MIN" (formula "159") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "159") (term "1,0,1,0,0"))
                  (rule "allRight" (formula "159") (inst "sk=i_6"))
                  (rule "impRight" (formula "159"))
                  (rule "notRight" (formula "160"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "2"))
                  (rule "castedGetAny" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "76"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "76") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "99"))
                  (rule "polySimp_mulComm0" (formula "99") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "99") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "54"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "54") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "95") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "96") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "84"))
                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "93"))
                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "38") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "63") (term "0"))
                  (rule "polySimp_addComm1" (formula "84") (term "0"))
                  (rule "polySimp_addComm1" (formula "93") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addComm1" (formula "59") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "applyEq" (formula "137") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "137") (term "0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "79") (term "0") (ifseqformula "100"))
                  (rule "applyEqReverse" (formula "80") (term "1,0") (ifseqformula "79"))
                  (rule "hideAuxiliaryEq" (formula "79"))
                  (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "140") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "153") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "37") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "147") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "135") (term "0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "135") (term "0,1,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "142") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "37") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "153") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "84") (term "5") (ifseqformula "70"))
                  (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "8"))
                  (rule "eqSymm" (formula "17") (term "1"))
                  (rule "applyEq" (formula "154") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "21") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "30") (term "0,0,1,1,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "23") (term "0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "31") (term "0,0,1,1,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                  (rule "applyEq" (formula "36") (term "0,0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "75") (term "0") (ifseqformula "95"))
                  (rule "applyEqReverse" (formula "76") (term "1,0") (ifseqformula "75"))
                  (rule "hideAuxiliaryEq" (formula "75"))
                  (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "81") (term "1") (ifseqformula "6"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "44") (term "6") (ifseqformula "39"))
                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "137") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "26") (term "0,1,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "35") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "86") (term "0") (ifseqformula "68"))
                  (rule "applyEqReverse" (formula "84") (term "0,0,1,0,0,1,0,0") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "88") (term "0,0") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "84") (term "0,0,0,1,0") (ifseqformula "86"))
                  (rule "applyEqReverse" (formula "87") (term "0,0,1,0") (ifseqformula "86"))
                  (rule "hideAuxiliaryEq" (formula "86"))
                  (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "24") (term "0,1,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "131") (term "0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "34") (term "0,1,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "93") (term "0") (ifseqformula "6"))
                  (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "77") (term "0,1,0,0,0,0,0,0") (ifseqformula "39"))
                  (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "7"))
                  (rule "eqSymm" (formula "13") (term "1"))
                  (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "10"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                  (rule "polySimp_elimOne" (formula "65") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                  (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                  (rule "polySimp_elimOne" (formula "85") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "88") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "69") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                  (rule "polySimp_elimOne" (formula "43") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "67") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                  (rule "polySimp_elimOne" (formula "52") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                  (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                  (rule "polySimp_elimOne" (formula "71") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                  (rule "polySimp_elimOne" (formula "79") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "nnf_imp2or" (formula "45") (term "0"))
                  (rule "commute_or" (formula "75"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "40") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "68") (term "0"))
                  (rule "nnf_imp2or" (formula "73") (term "0"))
                  (rule "nnf_imp2or" (formula "79") (term "0"))
                  (rule "nnf_imp2or" (formula "53") (term "0"))
                  (rule "nnf_imp2or" (formula "86") (term "0"))
                  (rule "nnf_imp2or" (formula "80") (term "0"))
                  (rule "nnf_imp2or" (formula "66") (term "0"))
                  (rule "nnf_imp2or" (formula "62") (term "0"))
                  (rule "nnf_imp2or" (formula "26") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "75") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "nnf_imp2or" (formula "74") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "45") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "68") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "68") (term "0,0,0"))
                  (rule "mul_literals" (formula "68") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "68") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                  (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "68") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "68") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0"))
                  (rule "nnf_notAnd" (formula "79") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                  (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                  (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                  (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                  (rule "nnf_imp2or" (formula "53") (term "1,0"))
                  (rule "nnf_notAnd" (formula "86") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                  (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "80") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0"))
                  (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "80") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                  (rule "mul_literals" (formula "80") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "80") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "80") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "66") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "66") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                  (rule "mul_literals" (formula "66") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "62") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                  (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "26") (term "1,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "75") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "75") (term "0,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "75") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                  (rule "mul_literals" (formula "75") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "75") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "75") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "75") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "75") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "75") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "75") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "74") (term "0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                  (rule "ifthenelse_split" (formula "82") (term "0"))
                  (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "84") (term "0,0") (ifseqformula "83"))
                     (rule "applyEqReverse" (formula "79") (term "0,1,1,0,0") (ifseqformula "83"))
                     (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "83"))
                     (rule "applyEqReverse" (formula "85") (term "0,0") (ifseqformula "83"))
                     (rule "applyEqReverse" (formula "79") (term "0,0,0,1,0") (ifseqformula "83"))
                     (rule "hideAuxiliaryEq" (formula "83"))
                     (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "65"))
                     (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "65"))
                     (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0") (ifseqformula "65"))
                     (rule "applyEqReverse" (formula "66") (term "0,1,1,0,0") (ifseqformula "65"))
                     (rule "applyEqReverse" (formula "69") (term "0,0") (ifseqformula "65"))
                     (rule "hideAuxiliaryEq" (formula "65"))
                     (rule "ifthenelse_split" (formula "60") (term "0"))
                     (branch "self_53.inputCols.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "77") (term "0,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "74") (term "0,0,0,1,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "74") (term "0,1,1,0,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "76") (term "0,0") (ifseqformula "61"))
                        (rule "hideAuxiliaryEq" (formula "61"))
                        (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "applyEqReverse" (formula "62") (term "0,1,1,0,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "69") (term "0,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "62") (term "0,0,0,1,0") (ifseqformula "61"))
                        (rule "applyEqReverse" (formula "63") (term "0,0") (ifseqformula "61"))
                        (rule "hideAuxiliaryEq" (formula "61"))
                        (rule "ifthenelse_split" (formula "81") (term "0"))
                        (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "83") (term "0,1,0,0,0") (ifseqformula "82"))
                           (rule "applyEqReverse" (formula "76") (term "0,0,0,1,0") (ifseqformula "82"))
                           (rule "applyEqReverse" (formula "83") (term "0,0,1,0,1,0") (ifseqformula "82"))
                           (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "82"))
                           (rule "applyEqReverse" (formula "76") (term "0,1,1,0,0") (ifseqformula "82"))
                           (rule "hideAuxiliaryEq" (formula "82"))
                           (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "81"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "applyEqReverse" (formula "64") (term "0,0,0,1,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "64") (term "0,1,1,0,0") (ifseqformula "63"))
                           (rule "hideAuxiliaryEq" (formula "63"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                           (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                           (rule "cut_direct" (formula "39") (term "1"))
                           (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "applyEq" (formula "89") (term "0") (ifseqformula "39"))
                              (rule "seqGetAlphaCast" (formula "48") (term "0"))
                              (rule "castedGetAny" (formula "48") (term "0"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "seqGetAlphaCast" (formula "43") (term "0"))
                              (rule "castedGetAny" (formula "43") (term "0"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "lenNonNegative" (formula "36") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "36"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                              (rule "seqGetAlphaCast" (formula "25") (term "0"))
                              (rule "castedGetAny" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "seqGetAlphaCast" (formula "14") (term "0"))
                              (rule "castedGetAny" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "lenNonNegative" (formula "16") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "seqGetAlphaCast" (formula "18") (term "0"))
                              (rule "castedGetAny" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "commute_and" (formula "80") (term "0,0,1,0"))
                              (rule "lenNonNegative" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "commute_and" (formula "21") (term "0,0,1,0"))
                              (rule "commute_and" (formula "20") (term "0,0,1,0"))
                              (rule "lenNonNegative" (formula "19") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "commute_or" (formula "53") (term "0,0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_or" (formula "21") (term "0,0"))
                              (rule "commute_and" (formula "53") (term "0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0"))
                              (rule "commute_or_2" (formula "73") (term "0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or_2" (formula "74") (term "0"))
                              (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                              (rule "commute_or" (formula "80") (term "0,0"))
                              (rule "shift_paren_or" (formula "67") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "shift_paren_or" (formula "67") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or" (formula "71") (term "0,0"))
                              (rule "commute_or" (formula "67") (term "0,0"))
                              (rule "commute_or" (formula "70") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0,0"))
                              (rule "commute_or_2" (formula "10") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "commute_and_2" (formula "75") (term "0,1,0"))
                              (rule "commute_and_2" (formula "21") (term "0,1,0"))
                              (rule "commute_and_2" (formula "20") (term "0,1,0"))
                              (rule "commute_or" (formula "9") (term "0,0,0"))
                              (rule "commute_or_2" (formula "9") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0"))
                              (rule "commute_or" (formula "10") (term "0,0,0"))
                              (rule "commute_or_2" (formula "10") (term "0,0"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "commute_or_2" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                              (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "commute_or_2" (formula "38") (term "0,0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0"))
                              (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "commute_or" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_or" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                              (rule "seqGetAlphaCast" (formula "71") (term "0"))
                              (rule "castedGetAny" (formula "71") (term "0"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "true_left" (formula "71"))
                              (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
                              (rule "commute_and" (formula "73") (term "0,0,1,0"))
                              (rule "seqGetAlphaCast" (formula "5") (term "0"))
                              (rule "castedGetAny" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "seqGetAlphaCast" (formula "67") (term "0"))
                              (rule "castedGetAny" (formula "67") (term "0"))
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "true_left" (formula "67"))
                              (rule "seqGetAlphaCast" (formula "63") (term "0"))
                              (rule "castedGetAny" (formula "63") (term "0"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "true_left" (formula "63"))
                              (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                              (rule "charLiteral_to_int" (formula "51") (term "1,1,1,0,1,1,0"))
                              (rule "add_literals" (formula "51") (term "1,1,0,1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "1,0") (ifseqformula "51"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "28"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "1,0") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "54"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "55"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "76"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "58"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "56"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "33"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "58"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "59"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1") (ifseqformula "60"))
                              (rule "replace_known_left" (formula "79") (term "1") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "94")))
                              (rule "true_left" (formula "79"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "60"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "61"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "62"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "63"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "64"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "65"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "66"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "67"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "67"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "44"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "69"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "70"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "71"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "72"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "49"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "ex_pull_out3" (formula "44") (term "0"))
                              (rule "ex_pull_out3" (formula "43") (term "0"))
                              (rule "cnf_rightDist" (formula "44") (term "0,0"))
                              (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
                              (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "44") (term "1,0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "49") (term "1,0"))
                              (rule "cnf_rightDist" (formula "49") (term "0,1,0"))
                              (rule "commute_or" (formula "49") (term "1,0,1,0"))
                              (rule "allLeft" (formula "33") (inst "t=i_6"))
                              (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_literals" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "33") (term "0,1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "33"))
                              (rule "leq_literals" (formula "27") (term "0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "32") (term "0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "closeFalse" (formula "32"))
                           )
                           (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "applyEq" (formula "90") (term "0") (ifseqformula "39"))
                              (rule "applyEq" (formula "82") (term "0") (ifseqformula "39"))
                              (rule "eqSymm" (formula "82"))
                              (rule "seqGetAlphaCast" (formula "43") (term "0"))
                              (rule "castedGetAny" (formula "43") (term "0"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "seqGetAlphaCast" (formula "48") (term "0"))
                              (rule "castedGetAny" (formula "48") (term "0"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "lenNonNegative" (formula "36") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "36"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                              (rule "seqGetAlphaCast" (formula "25") (term "0"))
                              (rule "castedGetAny" (formula "25") (term "0"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "seqGetAlphaCast" (formula "14") (term "0"))
                              (rule "castedGetAny" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "lenNonNegative" (formula "16") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                              (rule "seqGetAlphaCast" (formula "18") (term "0"))
                              (rule "castedGetAny" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "commute_and" (formula "80") (term "0,0,1,0"))
                              (rule "lenNonNegative" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "commute_and" (formula "21") (term "0,0,1,0"))
                              (rule "commute_and" (formula "20") (term "0,0,1,0"))
                              (rule "lenNonNegative" (formula "19") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "19"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0"))
                              (rule "commute_or" (formula "53") (term "0,0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_or" (formula "21") (term "0,0"))
                              (rule "commute_and" (formula "53") (term "0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0"))
                              (rule "commute_or_2" (formula "73") (term "0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or_2" (formula "74") (term "0"))
                              (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                              (rule "commute_or" (formula "80") (term "0,0"))
                              (rule "shift_paren_or" (formula "67") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "shift_paren_or" (formula "67") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "commute_or" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or" (formula "71") (term "0,0"))
                              (rule "commute_or" (formula "67") (term "0,0"))
                              (rule "commute_or" (formula "70") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0,0"))
                              (rule "commute_or_2" (formula "10") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "commute_and_2" (formula "75") (term "0,1,0"))
                              (rule "commute_and_2" (formula "21") (term "0,1,0"))
                              (rule "commute_and_2" (formula "20") (term "0,1,0"))
                              (rule "commute_or" (formula "9") (term "0,0,0"))
                              (rule "commute_or_2" (formula "9") (term "0,0"))
                              (rule "commute_or_2" (formula "9") (term "0"))
                              (rule "commute_or" (formula "10") (term "0,0,0"))
                              (rule "commute_or_2" (formula "10") (term "0,0"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "commute_or_2" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                              (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "commute_or_2" (formula "38") (term "0,0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "38") (term "0,0"))
                              (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "commute_or" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_or" (formula "37") (term "0,0,0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                              (rule "seqGetAlphaCast" (formula "71") (term "0"))
                              (rule "castedGetAny" (formula "71") (term "0"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "true_left" (formula "71"))
                              (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
                              (rule "commute_and" (formula "73") (term "0,0,1,0"))
                              (rule "seqGetAlphaCast" (formula "5") (term "0"))
                              (rule "castedGetAny" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "seqGetAlphaCast" (formula "67") (term "0"))
                              (rule "castedGetAny" (formula "67") (term "0"))
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "true_left" (formula "67"))
                              (rule "seqGetAlphaCast" (formula "63") (term "0"))
                              (rule "castedGetAny" (formula "63") (term "0"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "true_left" (formula "63"))
                              (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
                              (rule "charLiteral_to_int" (formula "51") (term "1,1,1,0,1,1,0"))
                              (rule "add_literals" (formula "51") (term "1,1,0,1,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "51"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "1") (ifseqformula "52"))
                              (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "87")))
                              (rule "true_left" (formula "42"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "1,0") (ifseqformula "52"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "29"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "1,1,0") (ifseqformula "54"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "31"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "56"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "33"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "58"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "58"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "59"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "60"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "1,0,0") (ifseqformula "61"))
                              (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "68")))
                              (rule "true_left" (formula "51"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "61"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "62"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "63"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "1,0") (ifseqformula "64"))
                              (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "112"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "65"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "41"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "121"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "67"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "68"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "68"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "69"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "73"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "71"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "72"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "73"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "ex_pull_out3" (formula "43") (term "0"))
                              (rule "ex_pull_out3" (formula "42") (term "0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "42") (term "0,0"))
                              (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "48") (term "1,0"))
                              (rule "cnf_rightDist" (formula "48") (term "0,1,0"))
                              (rule "commute_or" (formula "48") (term "1,0,1,0"))
                              (rule "allLeft" (formula "32") (inst "t=i_6"))
                              (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "32") (term "0,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "25"))
                              (rule "andLeft" (formula "32"))
                              (rule "inEqSimp_homoInEq1" (formula "32"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                              (rule "add_literals" (formula "32") (term "1,1,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0"))
                              (rule "add_literals" (formula "32") (term "0"))
                              (rule "leq_literals" (formula "32"))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                        (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "84") (ifseqformula "99"))
                           (rule "close" (formula "84") (ifseqformula "54"))
                        )
                     )
                     (branch "self_53.inputCols.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "86") (ifseqformula "100"))
                        (rule "close" (formula "86") (ifseqformula "54"))
                     )
                  )
                  (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                     (rule "referencedObjectIsCreatedRight" (formula "88") (ifseqformula "104"))
                     (rule "close" (formula "88") (ifseqformula "54"))
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "159"))
               (branch
                  (rule "andRight" (formula "159"))
                  (branch
                     (rule "andRight" (formula "159"))
                     (branch
                        (rule "replaceKnownSelect_taclet00_55" (formula "159") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_56" (formula "159") (term "0,0"))
                        (rule "notRight" (formula "159"))
                        (rule "close" (formula "120") (ifseqformula "1"))
                     )
                     (branch
                        (rule "replaceKnownSelect_taclet00_57" (formula "159") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_58" (formula "159") (term "0,0"))
                        (rule "notRight" (formula "159"))
                        (rule "close" (formula "127") (ifseqformula "1"))
                     )
                  )
                  (branch
                     (rule "replaceKnownSelect_taclet00_53" (formula "159") (term "0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_54" (formula "159") (term "0,0"))
                     (rule "notRight" (formula "159"))
                     (rule "close" (formula "130") (ifseqformula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "159"))
                  (branch "Case 1"
                     (rule "andRight" (formula "159"))
                     (branch "Case 1"
                        (rule "andRight" (formula "159"))
                        (branch "Case 1"
                           (rule "andRight" (formula "159"))
                           (branch "Case 1"
                              (rule "andRight" (formula "159"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "159"))
                                 (branch
                                    (rule "andRight" (formula "159"))
                                    (branch
                                       (rule "andRight" (formula "159"))
                                       (branch
                                          (rule "andRight" (formula "159"))
                                          (branch
                                             (rule "andRight" (formula "159"))
                                             (branch
                                                (rule "andRight" (formula "159"))
                                                (branch
                                                   (rule "andRight" (formula "159"))
                                                   (branch
                                                      (rule "andRight" (formula "159"))
                                                      (branch
                                                         (rule "andRight" (formula "159"))
                                                         (branch
                                                            (rule "andRight" (formula "159"))
                                                            (branch
                                                               (rule "andRight" (formula "159"))
                                                               (branch
                                                                  (rule "andRight" (formula "159"))
                                                                  (branch
                                                                     (rule "andRight" (formula "159"))
                                                                     (branch
                                                                        (rule "andRight" (formula "159"))
                                                                        (branch
                                                                           (rule "andRight" (formula "159"))
                                                                           (branch
                                                                              (rule "andRight" (formula "159"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "159"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "159"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "159"))
                                                                                       (branch
                                                                                          (rule "replaceKnownSelect_taclet00_76" (formula "159") (term "0,0"))
                                                                                          (rule "replaceKnownAuxiliaryConstant_taclet00_95" (formula "159") (term "0,0"))
                                                                                          (rule "notRight" (formula "159"))
                                                                                          (rule "close" (formula "100") (ifseqformula "1"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "replaceKnownSelect_taclet00_77" (formula "159") (term "0,0"))
                                                                                          (rule "replaceKnownAuxiliaryConstant_taclet00_96" (formula "159") (term "0,0"))
                                                                                          (rule "notRight" (formula "159"))
                                                                                          (rule "close" (formula "105") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "replaceKnownSelect_taclet00_75" (formula "159") (term "0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet00_94" (formula "159") (term "0,0"))
                                                                                       (rule "notRight" (formula "159"))
                                                                                       (rule "close" (formula "132") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "insert_constant_string_value" (formula "159") (term "0,0") (ifseqformula "61"))
                                                                                     (builtin "One Step Simplification" (formula "159"))
                                                                                    (rule "castDel" (formula "159") (term "0,0,0"))
                                                                                    (rule "notRight" (formula "159"))
                                                                                    (rule "close" (formula "139") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "insert_constant_string_value" (formula "159") (term "0,0") (ifseqformula "61"))
                                                                                  (builtin "One Step Simplification" (formula "159"))
                                                                                 (rule "castDel" (formula "159") (term "0,0,0"))
                                                                                 (rule "notRight" (formula "159"))
                                                                                 (rule "close" (formula "140") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "insert_constant_string_value" (formula "159") (term "0,0") (ifseqformula "61"))
                                                                               (builtin "One Step Simplification" (formula "159"))
                                                                              (rule "castDel" (formula "159") (term "0,0,0"))
                                                                              (rule "notRight" (formula "159"))
                                                                              (rule "close" (formula "141") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "replaceKnownSelect_taclet00_62" (formula "159") (term "0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "159") (term "0,0"))
                                                                           (rule "notRight" (formula "159"))
                                                                           (rule "close" (formula "108") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "replaceKnownSelect_taclet00_74" (formula "159") (term "0,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet00_93" (formula "159") (term "0,0"))
                                                                        (rule "notRight" (formula "159"))
                                                                        (rule "close" (formula "109") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "replaceKnownSelect_taclet00_73" (formula "159") (term "0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet00_92" (formula "159") (term "0,0"))
                                                                     (rule "notRight" (formula "159"))
                                                                     (rule "close" (formula "110") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "replaceKnownSelect_taclet00_72" (formula "159") (term "0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet00_91" (formula "159") (term "0,0"))
                                                                  (rule "notRight" (formula "159"))
                                                                  (rule "close" (formula "111") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "replaceKnownSelect_taclet00_70" (formula "159") (term "0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "159") (term "0,0"))
                                                               (rule "notRight" (formula "159"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "89"))
                                                               (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "89") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "72"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "61") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "95"))
                                                               (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "95") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "34") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "80"))
                                                               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "80") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "34") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "26") (term "0,1,0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "134") (term "0,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "11"))
                                                               (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                                               (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "81"))
                                                               (rule "close" (formula "101") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "replaceKnownSelect_taclet00_69" (formula "159") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00_90" (formula "159") (term "0,0"))
                                                            (rule "notRight" (formula "159"))
                                                            (rule "close" (formula "113") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "replaceKnownSelect_taclet00_68" (formula "159") (term "0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet00_89" (formula "159") (term "0,0"))
                                                         (rule "notRight" (formula "159"))
                                                         (rule "close" (formula "114") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "replaceKnownSelect_taclet00_67" (formula "159") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00_88" (formula "159") (term "0,0"))
                                                      (rule "notRight" (formula "159"))
                                                      (rule "close" (formula "115") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "replaceKnownSelect_taclet00_66" (formula "159") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00_87" (formula "159") (term "0,0"))
                                                   (rule "notRight" (formula "159"))
                                                   (rule "close" (formula "116") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "replaceKnownSelect_taclet00_65" (formula "159") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_86" (formula "159") (term "0,0"))
                                                (rule "notRight" (formula "159"))
                                                (rule "close" (formula "117") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "replaceKnownSelect_taclet00_64" (formula "159") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_85" (formula "159") (term "0,0"))
                                             (rule "notRight" (formula "159"))
                                             (rule "close" (formula "118") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "replaceKnownSelect_taclet00_63" (formula "159") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_84" (formula "159") (term "0,0"))
                                          (rule "notRight" (formula "159"))
                                          (rule "close" (formula "119") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "159"))
                                       (rule "replaceKnownSelect_taclet00_62" (formula "160") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_79" (formula "160") (term "1"))
                                       (rule "replaceKnownSelect_taclet00_62" (formula "159") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_78" (formula "159") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "160") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_98" (formula "160") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_81" (formula "159") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_97" (formula "159") (term "1"))
                                       (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "160"))
                                        (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "159")))
                                       (rule "closeFalse" (formula "46"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "replaceKnownSelect_taclet00_61" (formula "159") (term "0,1,1,0,0"))
                                    (rule "replaceKnownSelect_taclet00_61" (formula "159") (term "0,0,0,0,1,0"))
                                    (rule "allRight" (formula "159") (inst "sk=i_3_0"))
                                    (rule "impRight" (formula "159"))
                                    (rule "notRight" (formula "160"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "97"))
                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "97") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "74") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "91"))
                                    (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "91") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "82"))
                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "82") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "137") (term "0,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "75") (term "0") (ifseqformula "96"))
                                    (rule "applyEqReverse" (formula "76") (term "1,0") (ifseqformula "75"))
                                    (rule "hideAuxiliaryEq" (formula "75"))
                                    (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "150") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "150") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "102") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "144") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "6"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "36") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "89") (term "0") (ifseqformula "70"))
                                    (rule "applyEqReverse" (formula "91") (term "0,0") (ifseqformula "89"))
                                    (rule "applyEqReverse" (formula "90") (term "0,0,1,0") (ifseqformula "89"))
                                    (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,1,0,0") (ifseqformula "89"))
                                    (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0") (ifseqformula "89"))
                                    (rule "hideAuxiliaryEq" (formula "89"))
                                    (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "36") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "149") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "83") (term "5") (ifseqformula "69"))
                                    (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "33") (term "0,0,0,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "96"))
                                    (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "76"))
                                    (rule "hideAuxiliaryEq" (formula "76"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "34") (term "0,1,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "129") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "40") (term "6") (ifseqformula "35"))
                                    (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "77") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "125") (term "0,1,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "16") (term "0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "123") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "76") (term "0,1,0,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "10") (term "0"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                    (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                    (rule "polySimp_elimOne" (formula "83") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "86") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                    (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                    (rule "polySimp_elimOne" (formula "77") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "74"))
                                    (rule "nnf_imp2or" (formula "78") (term "0"))
                                    (rule "nnf_imp2or" (formula "72") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "79") (term "0"))
                                    (rule "nnf_imp2or" (formula "52") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "85") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "74") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "8") (term "0"))
                                    (rule "nnf_imp2or" (formula "9") (term "0"))
                                    (rule "nnf_imp2or" (formula "52") (term "0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "78") (term "0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "78") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "78") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "65") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                                    (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                                    (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                                    (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "85") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                                    (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "74") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "74") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "72") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "72") (term "1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "72") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "72") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,1,1,0,0"))
                                    (rule "ifthenelse_split" (formula "59") (term "0"))
                                    (branch "self_53.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "75") (term "0,1,1,0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "78") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "75") (term "0,0,0,1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "77") (term "0,0") (ifseqformula "60"))
                                       (rule "hideAuxiliaryEq" (formula "60"))
                                       (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "applyEqReverse" (formula "61") (term "0,1,1,0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "70") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "62") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "60"))
                                       (rule "hideAuxiliaryEq" (formula "60"))
                                       (rule "ifthenelse_split" (formula "82") (term "0"))
                                       (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "84") (term "0,0,1,0,1,0") (ifseqformula "83"))
                                          (rule "applyEqReverse" (formula "77") (term "0,1,1,0,0") (ifseqformula "83"))
                                          (rule "applyEqReverse" (formula "77") (term "0,0,0,1,0") (ifseqformula "83"))
                                          (rule "applyEqReverse" (formula "84") (term "0,1,0,0,0") (ifseqformula "83"))
                                          (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "83"))
                                          (rule "hideAuxiliaryEq" (formula "83"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "82"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "ifthenelse_split" (formula "77") (term "0"))
                                          (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "74") (term "0,0,0,1,0") (ifseqformula "78"))
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "78"))
                                             (rule "applyEqReverse" (formula "74") (term "0,1,1,0,0") (ifseqformula "78"))
                                             (rule "applyEqReverse" (formula "79") (term "0,0") (ifseqformula "78"))
                                             (rule "applyEqReverse" (formula "80") (term "0,0") (ifseqformula "78"))
                                             (rule "hideAuxiliaryEq" (formula "78"))
                                             (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "77"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,0,1,0") (ifseqformula "62"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "62"))
                                             (rule "applyEqReverse" (formula "65") (term "0,0") (ifseqformula "62"))
                                             (rule "applyEqReverse" (formula "63") (term "0,1,1,0,0") (ifseqformula "62"))
                                             (rule "hideAuxiliaryEq" (formula "62"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "cut_direct" (formula "38") (term "1"))
                                             (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "applyEq" (formula "88") (term "0") (ifseqformula "38"))
                                                (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                                (rule "castedGetAny" (formula "42") (term "0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "lenNonNegative" (formula "35") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                                (rule "castedGetAny" (formula "47") (term "0"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                (rule "castedGetAny" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "lenNonNegative" (formula "18") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "lenNonNegative" (formula "15") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "lenNonNegative" (formula "11") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11"))
                                                (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                                (rule "castedGetAny" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0"))
                                                (rule "commute_or_2" (formula "68") (term "0"))
                                                (rule "commute_or_2" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "66") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or" (formula "79") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "shift_paren_or" (formula "67") (term "0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "commute_or" (formula "67") (term "0,0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or_2" (formula "66") (term "0,0"))
                                                (rule "commute_or" (formula "70") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0,0"))
                                                (rule "commute_and_2" (formula "75") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                                (rule "commute_or" (formula "8") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                                (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                                (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "commute_or" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "65") (term "0"))
                                                (rule "commute_or_2" (formula "65") (term "0,0"))
                                                (rule "commute_or" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                                (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "8")))
                                                (rule "true_left" (formula "64"))
                                                (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                                (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                                (rule "castedGetAny" (formula "66") (term "0"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                                (rule "castedGetAny" (formula "62") (term "0"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "true_left" (formula "62"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                                (rule "castedGetAny" (formula "70") (term "0"))
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                                (rule "castedGetAny" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "1,0") (ifseqformula "26"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,0") (ifseqformula "51"))
                                                (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "87")))
                                                (rule "true_left" (formula "41"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "51"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "1") (ifseqformula "52"))
                                                (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "86"))
                                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "25")))
                                                (rule "true_left" (formula "67"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "52"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "29"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "30"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "55"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "56"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "1,0") (ifseqformula "57"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "1,0,0") (ifseqformula "58"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "96")))
                                                (rule "true_left" (formula "53"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "58"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "62"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "60"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "61"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "62"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "63"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "64"))
                                                (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")))
                                                (rule "true_left" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0") (ifseqformula "64"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "65"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "66"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "67"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "68"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "69"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "70"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "47"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "72"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ex_pull_out3" (formula "42") (term "0"))
                                                (rule "ex_pull_out3" (formula "43") (term "0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "43") (term "0,0"))
                                                (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                                                (rule "allLeft" (formula "60") (inst "t=i_3_0"))
                                                (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                (rule "leq_literals" (formula "60") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "60"))
                                                (rule "qeq_literals" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "closeFalse" (formula "25"))
                                             )
                                             (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "89") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "81") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "81"))
                                                (rule "lenNonNegative" (formula "35") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                                (rule "castedGetAny" (formula "47") (term "0"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                                (rule "castedGetAny" (formula "42") (term "0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                (rule "castedGetAny" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "lenNonNegative" (formula "18") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "lenNonNegative" (formula "15") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "lenNonNegative" (formula "11") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11"))
                                                (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                                (rule "castedGetAny" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                                (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0"))
                                                (rule "commute_or_2" (formula "68") (term "0"))
                                                (rule "commute_or_2" (formula "73") (term "0"))
                                                (rule "commute_or" (formula "66") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or" (formula "79") (term "0,0"))
                                                (rule "commute_or" (formula "25") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "shift_paren_or" (formula "67") (term "0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0"))
                                                (rule "commute_or" (formula "39") (term "0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "commute_or_2" (formula "39") (term "0"))
                                                (rule "commute_or" (formula "67") (term "0,0"))
                                                (rule "commute_or" (formula "71") (term "0,0"))
                                                (rule "commute_or_2" (formula "66") (term "0,0"))
                                                (rule "commute_or" (formula "70") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0,0"))
                                                (rule "commute_and_2" (formula "75") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                                (rule "commute_or" (formula "8") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                                (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "37") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                                (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "commute_or" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "65") (term "0"))
                                                (rule "commute_or_2" (formula "65") (term "0,0"))
                                                (rule "commute_or" (formula "36") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0,0"))
                                                (rule "commute_or_2" (formula "36") (term "0"))
                                                (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                                (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                                (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "8")))
                                                (rule "true_left" (formula "64"))
                                                (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                                (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                                (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                                (rule "castedGetAny" (formula "66") (term "0"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                                (rule "castedGetAny" (formula "62") (term "0"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "true_left" (formula "62"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                                (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                                (rule "castedGetAny" (formula "70") (term "0"))
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                                (rule "castedGetAny" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "50"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "1,0,0") (ifseqformula "51"))
                                                (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "69"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "90")))
                                                (rule "true_left" (formula "46"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "51"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "52"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "53"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "1,0") (ifseqformula "30"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "1,0") (ifseqformula "55"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "56"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "57"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "58"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "1,0,0") (ifseqformula "59"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "96")))
                                                (rule "true_left" (formula "49"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "59"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "95")))
                                                (rule "true_left" (formula "14"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "60"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "37"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "62"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0,0") (ifseqformula "39"))
                                                (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "113"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "64"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "65"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "66"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "67"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "68"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "69"))
                                                (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "90"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                                (rule "true_left" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "44"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "70"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "71"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "75"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ex_pull_out3" (formula "41") (term "0"))
                                                (rule "ex_pull_out3" (formula "42") (term "0"))
                                                (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                (rule "shift_paren_or" (formula "41") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                                (rule "allLeft" (formula "60") (inst "t=i_3_0"))
                                                (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                (rule "leq_literals" (formula "60") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "60"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                          )
                                          (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "99"))
                                             (rule "close" (formula "83") (ifseqformula "53"))
                                          )
                                       )
                                       (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "100"))
                                          (rule "close" (formula "85") (ifseqformula "53"))
                                       )
                                    )
                                    (branch "self_53.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "87") (ifseqformula "101"))
                                       (rule "close" (formula "87") (ifseqformula "53"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "replaceKnownSelect_taclet00_70" (formula "159") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "159") (term "1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_61" (formula "159") (term "0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_61" (formula "159") (term "0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "159") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "79") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "60") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "88") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "94"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "94") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "159") (term "0,0,0"))
                                 (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "151") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "96") (term "0") (ifseqformula "75"))
                                 (rule "applyEqReverse" (formula "97") (term "0,0,1,0,0,0,0,0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "91") (term "0,0,1,0,0,1,0,0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "0,0,1,0,1,0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "91") (term "0,0,0,1,0") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "154") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "92") (term "0") (ifseqformula "71"))
                                 (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0") (ifseqformula "92"))
                                 (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,1,0,0") (ifseqformula "92"))
                                 (rule "applyEqReverse" (formula "94") (term "0,0") (ifseqformula "92"))
                                 (rule "applyEqReverse" (formula "93") (term "0,0,1,0") (ifseqformula "92"))
                                 (rule "hideAuxiliaryEq" (formula "92"))
                                 (rule "applyEq" (formula "40") (term "6") (ifseqformula "35"))
                                 (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "65") (term "0") (ifseqformula "85"))
                                 (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                 (rule "hideAuxiliaryEq" (formula "65"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "144") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "127") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "31") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "77") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "95") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "21") (term "0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "131") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "123") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "74") (term "5") (ifseqformula "60"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "121") (term "0,1,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "121") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "121") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "120") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "120") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "7") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "74") (term "0,1,0,0,0,0,0,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "124") (term "1,1,0") (ifseqformula "71"))
                                 (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "8") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "6") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "32"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                 (rule "polySimp_elimOne" (formula "76") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "121") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "121") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "78") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_and_subsumption3" (formula "6") (term "0,0,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "commute_or" (formula "72"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "70") (term "0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0"))
                                 (rule "nnf_ex2all" (formula "120"))
                                 (rule "nnf_imp2or" (formula "50") (term "0"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0"))
                                 (rule "nnf_imp2or" (formula "34") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "83") (term "0"))
                                 (rule "nnf_imp2or" (formula "79") (term "0"))
                                 (rule "nnf_imp2or" (formula "78") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "72") (term "0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "6") (term "0"))
                                 (rule "nnf_imp2or" (formula "7") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "66") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "63") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "50") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "83") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
                                 (rule "mul_literals" (formula "83") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "83") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
                                 (rule "mul_literals" (formula "83") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "78") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "78") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "78") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "78") (term "0,0,0"))
                                 (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "78") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                                 (rule "mul_literals" (formula "78") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "23") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "71") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "71") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "71") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "71") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "71") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,1,1,0,0"))
                                 (rule "ifthenelse_split" (formula "75") (term "0"))
                                 (branch "self_53.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0") (ifseqformula "76"))
                                    (rule "applyEqReverse" (formula "77") (term "0,0") (ifseqformula "76"))
                                    (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "76"))
                                    (rule "applyEqReverse" (formula "73") (term "0,1,1,0,0") (ifseqformula "76"))
                                    (rule "applyEqReverse" (formula "78") (term "0,0") (ifseqformula "76"))
                                    (rule "hideAuxiliaryEq" (formula "76"))
                                    (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "applyEqReverse" (formula "58") (term "0,0,0,1,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "58") (term "0,1,1,0,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "57"))
                                    (rule "hideAuxiliaryEq" (formula "57"))
                                    (rule "ifthenelse_split" (formula "62") (term "0"))
                                    (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "82") (term "0,0,1,0,1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "82") (term "0,1,0,0,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "78") (term "0,0,0,1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "78") (term "0,1,1,0,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "0,1,1,0,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "0,0,0,1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "ifthenelse_split" (formula "59") (term "0"))
                                       (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "75") (term "0,0,0,1,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "79") (term "0,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "78") (term "0,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "75") (term "0,1,1,0,0") (ifseqformula "60"))
                                          (rule "hideAuxiliaryEq" (formula "60"))
                                          (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqReverse" (formula "64") (term "0,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "61") (term "0,1,1,0,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "60"))
                                          (rule "hideAuxiliaryEq" (formula "60"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
                                          (rule "cut_direct" (formula "36") (term "1"))
                                          (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "applyEq" (formula "86") (term "0") (ifseqformula "36"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castedGetAny" (formula "45") (term "0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "lenNonNegative" (formula "33") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                             (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                             (rule "castedGetAny" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "66") (term "1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "66") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "66") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,1,0,0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castedGetAny" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "11") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "lenNonNegative" (formula "9") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9"))
                                             (rule "commute_or" (formula "50") (term "0,0"))
                                             (rule "commute_and" (formula "77") (term "0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,0,0,0,0"))
                                             (rule "commute_and" (formula "17") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "18") (term "0,0,1,0"))
                                             (rule "lenNonNegative" (formula "16") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16"))
                                             (rule "lenNonNegative" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "commute_and" (formula "50") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "73") (term "0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "72") (term "0"))
                                             (rule "commute_or" (formula "77") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or" (formula "67") (term "0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or" (formula "72") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or" (formula "71") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_and_2" (formula "74") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "17") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "18") (term "0,1,0"))
                                             (rule "commute_or" (formula "6") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0"))
                                             (rule "commute_or" (formula "7") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0"))
                                             (rule "qeq_literals" (formula "34") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "35") (term "0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "shift_paren_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "48") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "6")))
                                             (rule "true_left" (formula "63"))
                                             (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "7")))
                                             (rule "true_left" (formula "63"))
                                             (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
                                             (rule "commute_and" (formula "70") (term "0,0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                             (rule "castedGetAny" (formula "66") (term "0"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "true_left" (formula "66"))
                                             (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                             (rule "castedGetAny" (formula "61") (term "0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                             (rule "castedGetAny" (formula "69") (term "0"))
                                              (builtin "One Step Simplification" (formula "69"))
                                             (rule "true_left" (formula "69"))
                                             (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                             (rule "castedGetAny" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "charLiteral_to_int" (formula "48") (term "1,1,1,0,1,1,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0,0") (ifseqformula "24"))
                                             (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "1,0,0") (ifseqformula "49"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "85")))
                                             (rule "true_left" (formula "39"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1") (ifseqformula "49"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "83")))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "1,0") (ifseqformula "49"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "50"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "1,1,0") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "26"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "27"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "53"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "53"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "54"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "55"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0") (ifseqformula "56"))
                                             (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "103"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "1,0") (ifseqformula "31"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "58"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "59"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "60"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "61"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "62"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "63"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "64"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "65"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "66"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "67"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "68"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "72"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "70"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "ex_pull_out3" (formula "38") (term "0"))
                                             (rule "ex_pull_out3" (formula "39") (term "0"))
                                             (rule "allLeft" (formula "22") (inst "t=i_2_2"))
                                             (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "89"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                             (rule "allLeft" (formula "23") (inst "t=i_2_3"))
                                             (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                             (rule "allLeft" (formula "24") (inst "t=i_2_1"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "81"))
                                             (rule "qeq_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "89"))
                                             (rule "qeq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "64"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "82") (ifseqformula "23"))
                                             (rule "andLeft" (formula "82"))
                                             (rule "inEqSimp_homoInEq1" (formula "82"))
                                             (rule "polySimp_pullOutFactor1b" (formula "82") (term "0"))
                                             (rule "add_literals" (formula "82") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "82") (term "1,0"))
                                             (rule "add_zero_right" (formula "82") (term "0"))
                                             (rule "leq_literals" (formula "82"))
                                             (rule "closeFalse" (formula "82"))
                                          )
                                          (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEq" (formula "87") (term "0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "79") (term "0") (ifseqformula "36"))
                                             (rule "eqSymm" (formula "79"))
                                             (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                             (rule "castedGetAny" (formula "45") (term "0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "lenNonNegative" (formula "33") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                             (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                             (rule "castedGetAny" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "66") (term "1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "66") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "66") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "66") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "66") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                             (rule "castedGetAny" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "11") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "lenNonNegative" (formula "9") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9"))
                                             (rule "commute_or" (formula "50") (term "0,0"))
                                             (rule "commute_and" (formula "77") (term "0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,0,0,0,0"))
                                             (rule "commute_and" (formula "17") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "18") (term "0,0,1,0"))
                                             (rule "lenNonNegative" (formula "16") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16"))
                                             (rule "lenNonNegative" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "commute_and" (formula "50") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "73") (term "0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "72") (term "0"))
                                             (rule "commute_or" (formula "77") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "37") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or" (formula "67") (term "0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or" (formula "72") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or" (formula "71") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_and_2" (formula "74") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "17") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "18") (term "0,1,0"))
                                             (rule "commute_or" (formula "6") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0"))
                                             (rule "commute_or" (formula "7") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0"))
                                             (rule "qeq_literals" (formula "34") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "35") (term "0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "shift_paren_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "48") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "6")))
                                             (rule "true_left" (formula "63"))
                                             (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                             (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "7")))
                                             (rule "true_left" (formula "63"))
                                             (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
                                             (rule "commute_and" (formula "70") (term "0,0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                             (rule "castedGetAny" (formula "66") (term "0"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "true_left" (formula "66"))
                                             (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                             (rule "castedGetAny" (formula "61") (term "0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                             (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                             (rule "castedGetAny" (formula "69") (term "0"))
                                              (builtin "One Step Simplification" (formula "69"))
                                             (rule "true_left" (formula "69"))
                                             (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                             (rule "castedGetAny" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "charLiteral_to_int" (formula "48") (term "1,1,1,0,1,1,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "1") (ifseqformula "48"))
                                             (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "83")))
                                             (rule "true_left" (formula "43"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0") (ifseqformula "48"))
                                             (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "96"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "49"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "49"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "50"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "51"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "52"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "53"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "54"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "55"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "30"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "31"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "57"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "33"))
                                             (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "111"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "59"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "59"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "60"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "61"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "62"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "63"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "64"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "65"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "121"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "67"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "68"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "72"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "70"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "ex_pull_out3" (formula "38") (term "0"))
                                             (rule "ex_pull_out3" (formula "39") (term "0"))
                                             (rule "allLeft" (formula "22") (inst "t=i_2_2"))
                                             (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "89"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                             (rule "allLeft" (formula "23") (inst "t=i_2_3"))
                                             (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                             (rule "allLeft" (formula "24") (inst "t=i_2_1"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "81"))
                                             (rule "qeq_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "89"))
                                             (rule "qeq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "64"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "33"))
                                             (rule "qeq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq0" (formula "82") (ifseqformula "23"))
                                             (rule "andLeft" (formula "82"))
                                             (rule "inEqSimp_homoInEq1" (formula "82"))
                                             (rule "polySimp_pullOutFactor1b" (formula "82") (term "0"))
                                             (rule "add_literals" (formula "82") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "82") (term "1,0"))
                                             (rule "add_zero_right" (formula "82") (term "0"))
                                             (rule "leq_literals" (formula "82"))
                                             (rule "closeFalse" (formula "82"))
                                          )
                                       )
                                       (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "81") (ifseqformula "97"))
                                          (rule "close" (formula "81") (ifseqformula "51"))
                                       )
                                    )
                                    (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "98"))
                                       (rule "close" (formula "83") (ifseqformula "51"))
                                    )
                                 )
                                 (branch "self_53.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "99"))
                                    (rule "close" (formula "85") (ifseqformula "51"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,0,0,0,1,0"))
                              (rule "allRight" (formula "159") (inst "sk=i_1_0"))
                              (rule "impRight" (formula "159"))
                              (rule "notRight" (formula "160"))
                              (rule "andLeft" (formula "2"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "97"))
                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "97") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "74"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "74") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "57"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "57") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "91"))
                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "91") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "61"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "61") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "82"))
                              (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "82") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "137") (term "0,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "75") (term "0") (ifseqformula "96"))
                              (rule "applyEqReverse" (formula "76") (term "1,0") (ifseqformula "75"))
                              (rule "hideAuxiliaryEq" (formula "75"))
                              (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "150") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "150") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "102") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "144") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "13"))
                              (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "36") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "89") (term "0") (ifseqformula "70"))
                              (rule "applyEqReverse" (formula "91") (term "0,0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "90") (term "0,0,1,0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,1,0,0") (ifseqformula "89"))
                              (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0") (ifseqformula "89"))
                              (rule "hideAuxiliaryEq" (formula "89"))
                              (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "36") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "149") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "83") (term "5") (ifseqformula "69"))
                              (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "146") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "33") (term "0,0,0,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "76") (term "0") (ifseqformula "96"))
                              (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "76"))
                              (rule "hideAuxiliaryEq" (formula "76"))
                              (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "29") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "34") (term "0,1,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "129") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "14") (term "0"))
                              (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "40") (term "6") (ifseqformula "35"))
                              (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "77") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "125") (term "0,1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "16") (term "0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "123") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "28") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "76") (term "0,1,0,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "9"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "10") (term "0"))
                              (rule "applyEq" (formula "9") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                              (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                              (rule "polySimp_elimOne" (formula "83") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                              (rule "polySimp_elimOne" (formula "63") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                              (rule "polySimp_elimOne" (formula "46") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                              (rule "polySimp_elimOne" (formula "50") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "86") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                              (rule "polySimp_elimOne" (formula "69") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                              (rule "polySimp_elimOne" (formula "41") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                              (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                              (rule "polySimp_elimOne" (formula "77") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "75") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                              (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "nnf_imp2or" (formula "43") (term "0"))
                              (rule "commute_or" (formula "74"))
                              (rule "nnf_imp2or" (formula "78") (term "0"))
                              (rule "nnf_imp2or" (formula "72") (term "0"))
                              (rule "nnf_imp2or" (formula "65") (term "0"))
                              (rule "nnf_imp2or" (formula "79") (term "0"))
                              (rule "nnf_imp2or" (formula "52") (term "1,0"))
                              (rule "nnf_imp2or" (formula "61") (term "0"))
                              (rule "nnf_imp2or" (formula "44") (term "0"))
                              (rule "nnf_imp2or" (formula "85") (term "0"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_imp2or" (formula "67") (term "0"))
                              (rule "nnf_imp2or" (formula "36") (term "0"))
                              (rule "nnf_imp2or" (formula "74") (term "0"))
                              (rule "nnf_imp2or" (formula "25") (term "1,0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "nnf_imp2or" (formula "37") (term "0"))
                              (rule "nnf_imp2or" (formula "73") (term "0"))
                              (rule "nnf_imp2or" (formula "8") (term "0"))
                              (rule "nnf_imp2or" (formula "9") (term "0"))
                              (rule "nnf_imp2or" (formula "52") (term "0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "78") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "78") (term "0,0,0"))
                              (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "78") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                              (rule "mul_literals" (formula "78") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "78") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "78") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "78") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "72") (term "0,0"))
                              (rule "nnf_notAnd" (formula "65") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "65") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0"))
                              (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "65") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "25") (term "0"))
                              (rule "nnf_notAnd" (formula "79") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                              (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                              (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "61") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0"))
                              (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "61") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "44") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                              (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                              (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "85") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                              (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "85") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                              (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "67") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "67") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0"))
                              (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "67") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "36") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                              (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                              (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "74") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "74") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0"))
                              (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "74") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                              (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                              (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "73") (term "0,0"))
                              (rule "nnf_notAnd" (formula "8") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "9") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "52") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                              (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "72") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "72") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "72") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "72") (term "1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "72") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "72") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,0,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "72") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "72") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,1,1,0,0"))
                              (rule "ifthenelse_split" (formula "81") (term "0"))
                              (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "83") (term "0,0") (ifseqformula "82"))
                                 (rule "applyEqReverse" (formula "78") (term "0,1,1,0,0") (ifseqformula "82"))
                                 (rule "applyEqReverse" (formula "78") (term "0,0,0,1,0") (ifseqformula "82"))
                                 (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "82"))
                                 (rule "applyEqReverse" (formula "84") (term "0,0") (ifseqformula "82"))
                                 (rule "hideAuxiliaryEq" (formula "82"))
                                 (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "64"))
                                 (rule "hideAuxiliaryEq" (formula "64"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "82") (term "0"))
                                 (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "77") (term "0,0,0,1,0") (ifseqformula "83"))
                                    (rule "applyEqReverse" (formula "77") (term "0,1,1,0,0") (ifseqformula "83"))
                                    (rule "applyEqReverse" (formula "84") (term "0,1,0,0,0") (ifseqformula "83"))
                                    (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "83"))
                                    (rule "applyEqReverse" (formula "84") (term "0,0,1,0,1,0") (ifseqformula "83"))
                                    (rule "hideAuxiliaryEq" (formula "83"))
                                    (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0") (ifseqformula "64"))
                                    (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0") (ifseqformula "64"))
                                    (rule "hideAuxiliaryEq" (formula "64"))
                                    (rule "ifthenelse_split" (formula "59") (term "0"))
                                    (branch "self_53.inputCols.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "71") (term "0,0,0,1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "73") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "71") (term "0,1,1,0,0") (ifseqformula "60"))
                                       (rule "hideAuxiliaryEq" (formula "60"))
                                       (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "applyEqReverse" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "61") (term "0,1,1,0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "62") (term "0,0") (ifseqformula "60"))
                                       (rule "applyEqReverse" (formula "65") (term "0,0") (ifseqformula "60"))
                                       (rule "hideAuxiliaryEq" (formula "60"))
                                       (rule "cut_direct" (formula "38") (term "1"))
                                       (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "applyEq" (formula "88") (term "0") (ifseqformula "38"))
                                          (rule "lenNonNegative" (formula "35") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                          (rule "castedGetAny" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                          (rule "castedGetAny" (formula "47") (term "0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                          (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                          (rule "castedGetAny" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "lenNonNegative" (formula "18") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "lenNonNegative" (formula "15") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "lenNonNegative" (formula "11") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                          (rule "castedGetAny" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "commute_or" (formula "52") (term "0,0"))
                                          (rule "commute_or_2" (formula "72") (term "0"))
                                          (rule "commute_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "73") (term "0"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or" (formula "79") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (rule "commute_or" (formula "67") (term "0,0,0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_or" (formula "72") (term "0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "72") (term "0,0"))
                                          (rule "commute_or" (formula "68") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "commute_or_2" (formula "67") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_and_2" (formula "76") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                          (rule "commute_or" (formula "8") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0"))
                                          (rule "commute_or" (formula "9") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                          (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "50") (term "0,1,1,0"))
                                          (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "8")))
                                          (rule "true_left" (formula "64"))
                                          (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "9")))
                                          (rule "true_left" (formula "64"))
                                          (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                          (rule "castedGetAny" (formula "70") (term "0"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                          (rule "castedGetAny" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                          (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                          (rule "castedGetAny" (formula "66") (term "0"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "true_left" (formula "66"))
                                          (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                          (rule "castedGetAny" (formula "62") (term "0"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "26"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "51"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1,0") (ifseqformula "52"))
                                          (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1") (ifseqformula "53"))
                                          (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "26")))
                                          (rule "true_left" (formula "6"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "53"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0") (ifseqformula "54"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "1,0,0") (ifseqformula "55"))
                                          (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "62")))
                                          (rule "true_left" (formula "45"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "58"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "31"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "57"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "58"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "59"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "60"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "61"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "62"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "63"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "65"))
                                          (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "83"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "103")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "65"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "67"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "68"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "68"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "69"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "70"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "71"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "72"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "ex_pull_out3" (formula "41") (term "0"))
                                          (rule "ex_pull_out3" (formula "42") (term "0"))
                                          (rule "allLeft" (formula "64") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "64") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (ifseqformula "25"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "inEqSimp_homoInEq1" (formula "64"))
                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0"))
                                          (rule "add_literals" (formula "64") (term "0"))
                                          (rule "leq_literals" (formula "64"))
                                          (rule "closeFalse" (formula "64"))
                                       )
                                       (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEq" (formula "89") (term "0") (ifseqformula "38"))
                                          (rule "applyEq" (formula "81") (term "0") (ifseqformula "38"))
                                          (rule "eqSymm" (formula "81"))
                                          (rule "lenNonNegative" (formula "35") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                          (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                          (rule "castedGetAny" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                          (rule "castedGetAny" (formula "47") (term "0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                          (rule "castedGetAny" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "lenNonNegative" (formula "18") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "lenNonNegative" (formula "15") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "lenNonNegative" (formula "11") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                          (rule "castedGetAny" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "commute_or" (formula "52") (term "0,0"))
                                          (rule "commute_or_2" (formula "72") (term "0"))
                                          (rule "commute_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "73") (term "0"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or" (formula "79") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (rule "commute_or" (formula "67") (term "0,0,0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_or" (formula "72") (term "0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "72") (term "0,0"))
                                          (rule "commute_or" (formula "68") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "commute_or_2" (formula "67") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_and_2" (formula "76") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                          (rule "commute_or" (formula "8") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0"))
                                          (rule "commute_or" (formula "9") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                          (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "66") (term "0"))
                                          (rule "commute_or_2" (formula "66") (term "0,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "50") (term "0,1,1,0"))
                                          (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "8")))
                                          (rule "true_left" (formula "64"))
                                          (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "9")))
                                          (rule "true_left" (formula "64"))
                                          (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "70") (term "0"))
                                          (rule "castedGetAny" (formula "70") (term "0"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                          (rule "castedGetAny" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                          (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                          (rule "castedGetAny" (formula "66") (term "0"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "true_left" (formula "66"))
                                          (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                          (rule "castedGetAny" (formula "62") (term "0"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "1") (ifseqformula "50"))
                                          (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "85")))
                                          (rule "true_left" (formula "69"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "50"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "50"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "51"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "1,0") (ifseqformula "28"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "53"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "1,0,0") (ifseqformula "54"))
                                          (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "72"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "93")))
                                          (rule "true_left" (formula "49"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "54"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "55"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "32"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "33"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "58"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "1,1,0") (ifseqformula "59"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "60"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "61"))
                                          (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "82"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "61"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "62"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "1,0") (ifseqformula "63"))
                                          (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "111"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "68"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "66"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "67"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "68"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "69"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "70"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "71"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "72"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "ex_pull_out3" (formula "41") (term "0"))
                                          (rule "ex_pull_out3" (formula "42") (term "0"))
                                          (rule "allLeft" (formula "64") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "64") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (ifseqformula "25"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "inEqSimp_homoInEq1" (formula "64"))
                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0"))
                                          (rule "add_literals" (formula "64") (term "0"))
                                          (rule "leq_literals" (formula "64"))
                                          (rule "closeFalse" (formula "64"))
                                       )
                                    )
                                    (branch "self_53.inputCols.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "97"))
                                       (rule "close" (formula "83") (ifseqformula "53"))
                                    )
                                 )
                                 (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "100"))
                                    (rule "close" (formula "85") (ifseqformula "53"))
                                 )
                              )
                              (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "87") (ifseqformula "103"))
                                 (rule "close" (formula "87") (ifseqformula "53"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "replaceKnownSelect_taclet00_59" (formula "159") (term "0,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet00_59" (formula "159") (term "0,0,0,0,1,0"))
                           (rule "allRight" (formula "159") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "159"))
                           (rule "notRight" (formula "160"))
                           (rule "andLeft" (formula "2"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "97"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "97") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "74") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "57") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "91"))
                           (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "91") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "63") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "82"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "82") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "33") (term "0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "75") (term "0") (ifseqformula "96"))
                           (rule "applyEqReverse" (formula "76") (term "1,0") (ifseqformula "75"))
                           (rule "hideAuxiliaryEq" (formula "75"))
                           (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "98") (term "0") (ifseqformula "77"))
                           (rule "applyEqReverse" (formula "99") (term "0,0,1,0,1,0") (ifseqformula "98"))
                           (rule "applyEqReverse" (formula "93") (term "0,0,0,1,0") (ifseqformula "98"))
                           (rule "applyEqReverse" (formula "93") (term "0,0,1,0,0,1,0,0") (ifseqformula "98"))
                           (rule "applyEqReverse" (formula "99") (term "0,0,1,0,0,0,0,0") (ifseqformula "98"))
                           (rule "hideAuxiliaryEq" (formula "98"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "132") (term "0,1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "81") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "88") (term "0") (ifseqformula "69"))
                           (rule "applyEqReverse" (formula "86") (term "0,0,1,0,0,1,0,0") (ifseqformula "88"))
                           (rule "applyEqReverse" (formula "86") (term "0,0,0,1,0") (ifseqformula "88"))
                           (rule "applyEqReverse" (formula "90") (term "0,0") (ifseqformula "88"))
                           (rule "applyEqReverse" (formula "89") (term "0,0,1,0") (ifseqformula "88"))
                           (rule "hideAuxiliaryEq" (formula "88"))
                           (rule "applyEq" (formula "82") (term "5") (ifseqformula "68"))
                           (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "144") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "99") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "6"))
                           (rule "eqSymm" (formula "15") (term "1"))
                           (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,0,1,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "0,1,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "34") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "142") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "28") (term "0,0,1,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "6"))
                           (rule "eqSymm" (formula "15") (term "0"))
                           (rule "applyEq" (formula "130") (term "0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "127") (term "0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "127") (term "0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "137") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "131") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "131") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "35") (term "6") (ifseqformula "30"))
                           (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "76") (term "0,1,0,0,0,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
                           (rule "eqSymm" (formula "11") (term "1"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "37"))
                           (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "10") (term "0"))
                           (rule "applyEq" (formula "9") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "84"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                           (rule "polySimp_elimOne" (formula "84") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                           (rule "polySimp_elimOne" (formula "63") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                           (rule "polySimp_elimOne" (formula "70") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "76") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                           (rule "polySimp_elimOne" (formula "78") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "nnf_imp2or" (formula "43") (term "0"))
                           (rule "commute_or" (formula "75"))
                           (rule "nnf_imp2or" (formula "79") (term "0"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_imp2or" (formula "61") (term "0"))
                           (rule "nnf_imp2or" (formula "52") (term "1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0"))
                           (rule "nnf_imp2or" (formula "68") (term "0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_imp2or" (formula "80") (term "0"))
                           (rule "nnf_imp2or" (formula "85") (term "0"))
                           (rule "nnf_imp2or" (formula "75") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "74") (term "0"))
                           (rule "nnf_imp2or" (formula "37") (term "0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "65") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "65") (term "0,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "61") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "61") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "68") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "68") (term "0,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "68") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "68") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "68") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "80") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "80") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "80") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "80") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "85") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                           (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "85") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                           (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "75") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "75") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "75") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "75") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "75") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "75") (term "0,0,0"))
                           (rule "mul_literals" (formula "75") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "75") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                           (rule "mul_literals" (formula "75") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "25") (term "1,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "74") (term "0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,1,1,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,1,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "73") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "82") (term "0"))
                           (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "85") (term "0,0") (ifseqformula "83"))
                              (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "83"))
                              (rule "applyEqReverse" (formula "79") (term "0,1,1,0,0") (ifseqformula "83"))
                              (rule "applyEqReverse" (formula "84") (term "0,0") (ifseqformula "83"))
                              (rule "applyEqReverse" (formula "79") (term "0,0,0,1,0") (ifseqformula "83"))
                              (rule "hideAuxiliaryEq" (formula "83"))
                              (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "82"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "64"))
                              (rule "applyEqReverse" (formula "70") (term "0,0") (ifseqformula "64"))
                              (rule "applyEqReverse" (formula "65") (term "0,1,1,0,0") (ifseqformula "64"))
                              (rule "applyEqReverse" (formula "65") (term "0,0,0,1,0") (ifseqformula "64"))
                              (rule "hideAuxiliaryEq" (formula "64"))
                              (rule "ifthenelse_split" (formula "64") (term "0"))
                              (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "79") (term "0,0,0,1,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "84") (term "0,1,0,0,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "84") (term "0,0,1,0,1,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "79") (term "0,1,1,0,0") (ifseqformula "65"))
                                 (rule "hideAuxiliaryEq" (formula "65"))
                                 (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "66") (term "0,1,1,0,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "66") (term "0,0,0,1,0") (ifseqformula "65"))
                                 (rule "hideAuxiliaryEq" (formula "65"))
                                 (rule "ifthenelse_split" (formula "59") (term "0"))
                                 (branch "self_53.inputCols.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "72") (term "0,1,1,0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "72") (term "0,0,0,1,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "75") (term "0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                                    (rule "hideAuxiliaryEq" (formula "60"))
                                    (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "59"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "applyEqReverse" (formula "67") (term "0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "61") (term "0,1,1,0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "63") (term "0,0") (ifseqformula "60"))
                                    (rule "applyEqReverse" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                                    (rule "hideAuxiliaryEq" (formula "60"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "cut_direct" (formula "38") (term "0"))
                                    (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "applyEq" (formula "88") (term "0") (ifseqformula "38"))
                                       (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                       (rule "castedGetAny" (formula "47") (term "0"))
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "lenNonNegative" (formula "35") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "35"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                       (rule "castedGetAny" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                                       (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                       (rule "castedGetAny" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "18") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0"))
                                       (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "73") (term "0"))
                                       (rule "commute_or_2" (formula "74") (term "0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or" (formula "79") (term "0,0"))
                                       (rule "commute_or" (formula "67") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or" (formula "68") (term "0,0,0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or" (formula "73") (term "0,0"))
                                       (rule "commute_or" (formula "73") (term "0,0"))
                                       (rule "commute_or" (formula "69") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "68") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "commute_and_2" (formula "76") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                       (rule "commute_or" (formula "8") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or" (formula "9") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                       (rule "shift_paren_or" (formula "66") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "shift_paren_or" (formula "67") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0,0"))
                                       (rule "commute_or" (formula "65") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "65") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "8")))
                                       (rule "true_left" (formula "65"))
                                       (rule "commute_or" (formula "65") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "65") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "9")))
                                       (rule "true_left" (formula "65"))
                                       (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                       (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                       (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                       (rule "castedGetAny" (formula "71") (term "0"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "true_left" (formula "71"))
                                       (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                       (rule "castedGetAny" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                       (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                       (rule "castedGetAny" (formula "66") (term "0"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "true_left" (formula "66"))
                                       (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                       (rule "castedGetAny" (formula "62") (term "0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "true_left" (formula "62"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "50"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1") (ifseqformula "51"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "24")))
                                       (rule "true_left" (formula "50"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "1,1,0") (ifseqformula "51"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "52"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "29"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0,0") (ifseqformula "30"))
                                       (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "103"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "55"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "56"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "1,0") (ifseqformula "57"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "58"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "34"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "60"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "61"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0,0") (ifseqformula "37"))
                                       (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "114"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "63"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0,0") (ifseqformula "64"))
                                       (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "71"))
                                        (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "100")))
                                       (rule "true_left" (formula "54"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "64"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "65"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "69"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "0") (ifseqformula "67"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "1,0,0") (ifseqformula "68"))
                                       (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "106"))
                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "87")))
                                       (rule "true_left" (formula "63"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "68"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "69"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "70"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "71"))
                                       (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "81"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "71"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "72"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ex_pull_out3" (formula "41") (term "0"))
                                       (rule "ex_pull_out3" (formula "40") (term "0"))
                                       (rule "allLeft" (formula "65") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                       (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "65") (term "0,0,1"))
                                       (rule "leq_literals" (formula "65") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "65"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                    (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEq" (formula "89") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "38"))
                                       (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                       (rule "castedGetAny" (formula "47") (term "0"))
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                       (rule "castedGetAny" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "lenNonNegative" (formula "35") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "35"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "nnf_notAnd" (formula "68") (term "1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "68") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "68") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                       (rule "castedGetAny" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "18") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0"))
                                       (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                       (rule "commute_or_2" (formula "73") (term "0"))
                                       (rule "commute_or_2" (formula "74") (term "0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or" (formula "79") (term "0,0"))
                                       (rule "shift_paren_or" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "shift_paren_or" (formula "67") (term "0,0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or" (formula "71") (term "0,0"))
                                       (rule "commute_or" (formula "71") (term "0,0"))
                                       (rule "commute_or" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "commute_and_2" (formula "74") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                       (rule "commute_or" (formula "8") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or" (formula "9") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_and_2" (formula "51") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                       (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                       (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                       (rule "castedGetAny" (formula "71") (term "0"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "true_left" (formula "71"))
                                       (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                       (rule "castedGetAny" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                       (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                       (rule "castedGetAny" (formula "66") (term "0"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "true_left" (formula "66"))
                                       (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                       (rule "castedGetAny" (formula "62") (term "0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "true_left" (formula "62"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "50"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "1") (ifseqformula "51"))
                                       (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "86")))
                                       (rule "true_left" (formula "67"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0,0") (ifseqformula "27"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "52"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "52"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "53"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "54"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "30"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "56"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "57"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "1,0") (ifseqformula "33"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "59"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "60"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0") (ifseqformula "61"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "107"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "65"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "63"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0,0") (ifseqformula "64"))
                                       (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "71"))
                                        (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "101")))
                                       (rule "true_left" (formula "54"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "64"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "40"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "66"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "67"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "68"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "68"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "69"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "70"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "71"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "118") (term "0") (ifseqformula "72"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "119"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ex_pull_out3" (formula "42") (term "0"))
                                       (rule "ex_pull_out3" (formula "41") (term "0"))
                                       (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                       (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                       (rule "shift_paren_or" (formula "41") (term "1,0,0"))
                                       (rule "allLeft" (formula "65") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "65") (term "0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "65") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_contradInEq1" (formula "65") (ifseqformula "25"))
                                       (rule "andLeft" (formula "65"))
                                       (rule "inEqSimp_homoInEq1" (formula "65"))
                                       (rule "polySimp_pullOutFactor1b" (formula "65") (term "0"))
                                       (rule "add_literals" (formula "65") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "65") (term "1,0"))
                                       (rule "add_zero_right" (formula "65") (term "0"))
                                       (rule "leq_literals" (formula "65"))
                                       (rule "closeFalse" (formula "65"))
                                    )
                                 )
                                 (branch "self_53.inputCols.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "97"))
                                    (rule "close" (formula "83") (ifseqformula "53"))
                                 )
                              )
                              (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "100"))
                                 (rule "close" (formula "85") (ifseqformula "53"))
                              )
                           )
                           (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "87") (ifseqformula "103"))
                              (rule "close" (formula "87") (ifseqformula "53"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replaceKnownSelect_taclet00_70" (formula "159") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_71" (formula "159") (term "1,1,0"))
                        (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,1,1,0,0"))
                        (rule "castedGetAny" (formula "159") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "79"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "71"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "33") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "60") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "58"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "58") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "88"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "88") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "94"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "94") (term "0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "159") (term "0,0,0"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "151") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "96") (term "0") (ifseqformula "75"))
                        (rule "applyEqReverse" (formula "97") (term "0,0,1,0,0,0,0,0") (ifseqformula "96"))
                        (rule "applyEqReverse" (formula "91") (term "0,0,1,0,0,1,0,0") (ifseqformula "96"))
                        (rule "applyEqReverse" (formula "97") (term "0,0,1,0,1,0") (ifseqformula "96"))
                        (rule "applyEqReverse" (formula "91") (term "0,0,0,1,0") (ifseqformula "96"))
                        (rule "hideAuxiliaryEq" (formula "96"))
                        (rule "applyEq" (formula "136") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "154") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "92") (term "0") (ifseqformula "71"))
                        (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0") (ifseqformula "92"))
                        (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,1,0,0") (ifseqformula "92"))
                        (rule "applyEqReverse" (formula "94") (term "0,0") (ifseqformula "92"))
                        (rule "applyEqReverse" (formula "93") (term "0,0,1,0") (ifseqformula "92"))
                        (rule "hideAuxiliaryEq" (formula "92"))
                        (rule "applyEq" (formula "40") (term "6") (ifseqformula "35"))
                        (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "65") (term "0") (ifseqformula "85"))
                        (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                        (rule "hideAuxiliaryEq" (formula "65"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "148") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "3"))
                        (rule "eqSymm" (formula "11") (term "1"))
                        (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "143") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "8"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "144") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "127") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "31") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "138") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "77") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "95") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "131") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "123") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "74") (term "5") (ifseqformula "60"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "121") (term "0,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "13") (term "0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "127") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "121") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "121") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "120") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "120") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "74") (term "0,1,0,0,0,0,0,0") (ifseqformula "35"))
                        (rule "applyEq" (formula "37") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                        (rule "applyEq" (formula "124") (term "1,1,0") (ifseqformula "71"))
                        (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "6"))
                        (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                        (rule "eqSymm" (formula "8") (term "1"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "33"))
                        (rule "applyEq" (formula "6") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "32"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                        (rule "polySimp_elimOne" (formula "67") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                        (rule "polySimp_elimOne" (formula "47") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                        (rule "polySimp_elimOne" (formula "43") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "121") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "121") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "121") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "121") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "121") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "121") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                        (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                        (rule "polySimp_elimOne" (formula "81") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                        (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_and_subsumption3" (formula "6") (term "0,0,0"))
                        (rule "leq_literals" (formula "6") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "commute_or" (formula "72"))
                        (rule "nnf_imp2or" (formula "65") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "0"))
                        (rule "nnf_ex2all" (formula "120"))
                        (rule "nnf_imp2or" (formula "50") (term "0"))
                        (rule "nnf_imp2or" (formula "73") (term "0"))
                        (rule "nnf_imp2or" (formula "58") (term "0"))
                        (rule "nnf_imp2or" (formula "37") (term "0"))
                        (rule "nnf_imp2or" (formula "34") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_imp2or" (formula "83") (term "0"))
                        (rule "nnf_imp2or" (formula "79") (term "0"))
                        (rule "nnf_imp2or" (formula "78") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "72") (term "0"))
                        (rule "nnf_imp2or" (formula "35") (term "0"))
                        (rule "nnf_imp2or" (formula "6") (term "0"))
                        (rule "nnf_imp2or" (formula "7") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "66") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0"))
                        (rule "nnf_notAnd" (formula "63") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "63") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "50") (term "1,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "73") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "73") (term "0,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "73") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "73") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "58") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "58") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "34") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "83") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
                        (rule "mul_literals" (formula "83") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "83") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
                        (rule "mul_literals" (formula "83") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "78") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "78") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "78") (term "0,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "78") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "23") (term "1,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "72") (term "0,0"))
                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "6") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "7") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "71") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,1,1,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,1,0,0"))
                        (rule "ifthenelse_split" (formula "75") (term "0"))
                        (branch "self_53.inputCols.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0") (ifseqformula "76"))
                           (rule "applyEqReverse" (formula "77") (term "0,0") (ifseqformula "76"))
                           (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "76"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,0,0") (ifseqformula "76"))
                           (rule "applyEqReverse" (formula "78") (term "0,0") (ifseqformula "76"))
                           (rule "hideAuxiliaryEq" (formula "76"))
                           (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "applyEqReverse" (formula "58") (term "0,0,0,1,0") (ifseqformula "57"))
                           (rule "applyEqReverse" (formula "69") (term "0,0") (ifseqformula "57"))
                           (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "57"))
                           (rule "applyEqReverse" (formula "58") (term "0,1,1,0,0") (ifseqformula "57"))
                           (rule "hideAuxiliaryEq" (formula "57"))
                           (rule "ifthenelse_split" (formula "59") (term "0"))
                           (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "77") (term "0,1,1,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "81") (term "0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "80") (term "0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "77") (term "0,0,0,1,0") (ifseqformula "60"))
                              (rule "hideAuxiliaryEq" (formula "60"))
                              (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "59"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "61") (term "0,0,0,1,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "61") (term "0,1,1,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "60"))
                              (rule "hideAuxiliaryEq" (formula "60"))
                              (rule "ifthenelse_split" (formula "60") (term "0"))
                              (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "76") (term "0,0,0,1,0") (ifseqformula "61"))
                                 (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                 (rule "applyEqReverse" (formula "80") (term "0,0,1,0,1,0") (ifseqformula "61"))
                                 (rule "applyEqReverse" (formula "80") (term "0,1,0,0,0") (ifseqformula "61"))
                                 (rule "applyEqReverse" (formula "76") (term "0,1,1,0,0") (ifseqformula "61"))
                                 (rule "hideAuxiliaryEq" (formula "61"))
                                 (rule "replace_known_left" (formula "61") (term "0,0,0") (ifseqformula "60"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "applyEqReverse" (formula "62") (term "0,1,1,0,0") (ifseqformula "61"))
                                 (rule "applyEqReverse" (formula "62") (term "0,0,0,1,0") (ifseqformula "61"))
                                 (rule "hideAuxiliaryEq" (formula "61"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,0,0,0"))
                                 (rule "cut_direct" (formula "36") (term "0"))
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "applyEq" (formula "86") (term "0") (ifseqformula "36"))
                                    (rule "lenNonNegative" (formula "33") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castedGetAny" (formula "45") (term "0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                    (rule "castedGetAny" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,1,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                    (rule "castedGetAny" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "seqGetAlphaCast" (formula "11") (term "0"))
                                    (rule "castedGetAny" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "lenNonNegative" (formula "9") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_and" (formula "77") (term "0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,0,0,0"))
                                    (rule "commute_and" (formula "17") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "18") (term "0,0,1,0"))
                                    (rule "lenNonNegative" (formula "16") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "lenNonNegative" (formula "13") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "commute_and" (formula "50") (term "0,0,1,1,0"))
                                    (rule "commute_or" (formula "17") (term "0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "commute_or" (formula "77") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_and_2" (formula "74") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "17") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "18") (term "0,1,0"))
                                    (rule "commute_or" (formula "6") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "commute_or" (formula "7") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0"))
                                    (rule "qeq_literals" (formula "34") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "48") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "6")))
                                    (rule "true_left" (formula "63"))
                                    (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "7")))
                                    (rule "true_left" (formula "63"))
                                    (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
                                    (rule "commute_and" (formula "70") (term "0,0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                    (rule "castedGetAny" (formula "66") (term "0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "true_left" (formula "66"))
                                    (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                    (rule "castedGetAny" (formula "61") (term "0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                    (rule "castedGetAny" (formula "69") (term "0"))
                                     (builtin "One Step Simplification" (formula "69"))
                                    (rule "true_left" (formula "69"))
                                    (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                    (rule "castedGetAny" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                    (rule "charLiteral_to_int" (formula "48") (term "1,1,1,0,1,1,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "1,0") (ifseqformula "48"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "25"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1") (ifseqformula "50"))
                                    (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "84")))
                                    (rule "true_left" (formula "40"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "50"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "1,0") (ifseqformula "51"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1,0") (ifseqformula "52"))
                                    (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "53"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "54"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,0") (ifseqformula "30"))
                                    (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "107"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "56"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "1,0") (ifseqformula "31"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "58"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "62"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "60"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "61"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "62"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "63"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "64"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0,0") (ifseqformula "65"))
                                    (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "81")))
                                    (rule "true_left" (formula "55"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "65"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "66"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "41"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "68"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "1,0,0") (ifseqformula "69"))
                                    (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "107")))
                                    (rule "true_left" (formula "64"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "69"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "69"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "70"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "ex_pull_out3" (formula "38") (term "0"))
                                    (rule "ex_pull_out3" (formula "39") (term "0"))
                                    (rule "cnf_rightDist" (formula "38") (term "0,0"))
                                    (rule "shift_paren_or" (formula "38") (term "1,0,0"))
                                    (rule "allLeft" (formula "22") (inst "t=i_4"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                    (rule "allLeft" (formula "23") (inst "t=i_3"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "allLeft" (formula "24") (inst "t=i_1"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "allLeft" (formula "25") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "68"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "94"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                    (rule "leq_literals" (formula "24") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "86"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "69") (ifseqformula "23"))
                                    (rule "andLeft" (formula "69"))
                                    (rule "inEqSimp_homoInEq1" (formula "69"))
                                    (rule "polySimp_pullOutFactor1b" (formula "69") (term "0"))
                                    (rule "add_literals" (formula "69") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0"))
                                    (rule "add_zero_right" (formula "69") (term "0"))
                                    (rule "leq_literals" (formula "69"))
                                    (rule "closeFalse" (formula "69"))
                                 )
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "applyEq" (formula "87") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "79") (term "0") (ifseqformula "36"))
                                    (rule "lenNonNegative" (formula "33") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castedGetAny" (formula "45") (term "0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                    (rule "castedGetAny" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "nnf_notAnd" (formula "66") (term "1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                    (rule "castedGetAny" (formula "22") (term "0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "seqGetAlphaCast" (formula "11") (term "0"))
                                    (rule "castedGetAny" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "lenNonNegative" (formula "9") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_and" (formula "77") (term "0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,0,0,0"))
                                    (rule "commute_and" (formula "17") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "18") (term "0,0,1,0"))
                                    (rule "lenNonNegative" (formula "16") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "lenNonNegative" (formula "13") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "commute_and" (formula "50") (term "0,0,1,1,0"))
                                    (rule "commute_or" (formula "17") (term "0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "commute_or" (formula "77") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "commute_or_2" (formula "7") (term "0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_and_2" (formula "74") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "17") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "18") (term "0,1,0"))
                                    (rule "commute_or" (formula "6") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "commute_or" (formula "7") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0"))
                                    (rule "qeq_literals" (formula "34") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "48") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "6")))
                                    (rule "true_left" (formula "63"))
                                    (rule "commute_or" (formula "63") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "63") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "7")))
                                    (rule "true_left" (formula "63"))
                                    (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
                                    (rule "commute_and" (formula "70") (term "0,0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "66") (term "0"))
                                    (rule "castedGetAny" (formula "66") (term "0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "true_left" (formula "66"))
                                    (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                    (rule "castedGetAny" (formula "61") (term "0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "seqGetAlphaCast" (formula "69") (term "0"))
                                    (rule "castedGetAny" (formula "69") (term "0"))
                                     (builtin "One Step Simplification" (formula "69"))
                                    (rule "true_left" (formula "69"))
                                    (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                    (rule "castedGetAny" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                                    (rule "charLiteral_to_int" (formula "48") (term "1,1,1,0,1,1,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "48"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "1") (ifseqformula "49"))
                                    (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "22")))
                                    (rule "true_left" (formula "39"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "49"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "26"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,0") (ifseqformula "51"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "88"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "67")))
                                    (rule "true_left" (formula "41"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "51"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "52"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "53"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "54"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "55"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "56"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "57"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "1,0") (ifseqformula "58"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0,0") (ifseqformula "35"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "60"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "61"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "64"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "62"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "38"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "64"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "65"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "1,0,0") (ifseqformula "66"))
                                    (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "105")))
                                    (rule "true_left" (formula "61"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "66"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "67"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "68"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "44"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "70"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "ex_pull_out3" (formula "39") (term "0"))
                                    (rule "ex_pull_out3" (formula "40") (term "0"))
                                    (rule "cnf_rightDist" (formula "39") (term "0,0"))
                                    (rule "shift_paren_or" (formula "39") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "40") (term "0,0"))
                                    (rule "shift_paren_or" (formula "40") (term "1,0,0"))
                                    (rule "allLeft" (formula "23") (inst "t=i_4"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "allLeft" (formula "24") (inst "t=i_3"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "allLeft" (formula "25") (inst "t=i_1"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "allLeft" (formula "26") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "68"))
                                    (rule "qeq_literals" (formula "24") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "38"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "94"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,1"))
                                    (rule "leq_literals" (formula "23") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "85"))
                                    (rule "qeq_literals" (formula "26") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "69") (ifseqformula "24"))
                                    (rule "andLeft" (formula "69"))
                                    (rule "inEqSimp_homoInEq1" (formula "69"))
                                    (rule "polySimp_pullOutFactor1b" (formula "69") (term "0"))
                                    (rule "add_literals" (formula "69") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0"))
                                    (rule "add_zero_right" (formula "69") (term "0"))
                                    (rule "leq_literals" (formula "69"))
                                    (rule "closeFalse" (formula "69"))
                                 )
                              )
                              (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "81") (ifseqformula "96"))
                                 (rule "close" (formula "81") (ifseqformula "51"))
                              )
                           )
                           (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "99"))
                              (rule "close" (formula "83") (ifseqformula "51"))
                           )
                        )
                        (branch "self_53.inputCols.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "99"))
                           (rule "close" (formula "85") (ifseqformula "51"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet00_60" (formula "159") (term "0,0,1,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet00_19" (formula "159") (term "0,0,0,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet00_19" (formula "159") (term "0,1,1,0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "159") (term "0,0,0,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00_20" (formula "159") (term "0,1,1,0,0,1,0"))
                     (rule "allRight" (formula "159") (inst "sk=j_0"))
                     (rule "impRight" (formula "159"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "161") (term "0,1,0"))
                     (rule "castedGetAny" (formula "161") (term "1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "73"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "73") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "96"))
                     (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "96") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "56"))
                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "56") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "85") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "81"))
                     (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "81") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "62") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "60"))
                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "60") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "51"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "90"))
                     (rule "polySimp_mulComm0" (formula "90") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "161") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "161") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "51") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "90") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "161") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "applyEq" (formula "149") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "69") (term "0") (ifseqformula "89"))
                     (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                     (rule "hideAuxiliaryEq" (formula "69"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "29") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "142") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "155") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "133") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "26") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "28") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "97") (term "0") (ifseqformula "76"))
                     (rule "applyEqReverse" (formula "98") (term "0,0,1,0,0,0,0,0") (ifseqformula "97"))
                     (rule "applyEqReverse" (formula "98") (term "0,0,1,0,1,0") (ifseqformula "97"))
                     (rule "applyEqReverse" (formula "92") (term "0,0,0,1,0") (ifseqformula "97"))
                     (rule "applyEqReverse" (formula "92") (term "0,0,1,0,0,1,0,0") (ifseqformula "97"))
                     (rule "hideAuxiliaryEq" (formula "97"))
                     (rule "applyEq" (formula "43") (term "6") (ifseqformula "38"))
                     (rule "applyEq" (formula "35") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "81") (term "1") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "135") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                     (rule "eqSymm" (formula "14") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "139") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "11"))
                     (rule "applyEq" (formula "141") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "140") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "130") (term "0,1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "71") (term "0") (ifseqformula "92"))
                     (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "71"))
                     (rule "hideAuxiliaryEq" (formula "71"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "79") (term "5") (ifseqformula "66"))
                     (rule "applyEq" (formula "131") (term "0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "130") (term "0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "132") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "94") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "122") (term "0,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "128") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "125") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "126") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "75") (term "0,1,0,0,0,0,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "8"))
                     (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "4"))
                     (rule "eqSymm" (formula "10") (term "1"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "8") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "34"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                     (rule "polySimp_elimOne" (formula "61") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                     (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                     (rule "polySimp_elimOne" (formula "83") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "51") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "51") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "63") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                     (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                     (rule "polySimp_elimOne" (formula "68") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                     (rule "polySimp_elimOne" (formula "49") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "85") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "123") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "123") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "123") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "123") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                     (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                     (rule "polySimp_elimOne" (formula "77") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_and_subsumption3" (formula "7") (term "0,0,0"))
                     (rule "leq_literals" (formula "7") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_and_subsumption3" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "nnf_imp2or" (formula "74") (term "0"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "commute_or" (formula "73"))
                     (rule "nnf_imp2or" (formula "63") (term "0"))
                     (rule "nnf_ex2all" (formula "122"))
                     (rule "nnf_imp2or" (formula "43") (term "0"))
                     (rule "nnf_imp2or" (formula "52") (term "0"))
                     (rule "nnf_imp2or" (formula "79") (term "0"))
                     (rule "nnf_imp2or" (formula "39") (term "0"))
                     (rule "nnf_imp2or" (formula "72") (term "0"))
                     (rule "nnf_imp2or" (formula "67") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "60") (term "0"))
                     (rule "nnf_imp2or" (formula "85") (term "0"))
                     (rule "nnf_imp2or" (formula "80") (term "0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "37") (term "0"))
                     (rule "nnf_imp2or" (formula "73") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "74") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "74") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "74") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "74") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                     (rule "mul_literals" (formula "74") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "64") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "64") (term "0,0,0"))
                     (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                     (rule "mul_literals" (formula "64") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "64") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "64") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "52") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                     (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                     (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "52") (term "1,0"))
                     (rule "nnf_notAnd" (formula "79") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
                     (rule "times_zero_1" (formula "79") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                     (rule "mul_literals" (formula "79") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "39") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "72") (term "0,0"))
                     (rule "nnf_notAnd" (formula "67") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "67") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "67") (term "0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "67") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                     (rule "mul_literals" (formula "67") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "60") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "60") (term "0,0,0"))
                     (rule "mul_literals" (formula "60") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "60") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                     (rule "mul_literals" (formula "60") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "60") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "60") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "85") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                     (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                     (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "80") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0"))
                     (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                     (rule "mul_literals" (formula "80") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "80") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "25") (term "1,0"))
                     (rule "nnf_notAnd" (formula "37") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                     (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "73") (term "0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                     (rule "ifthenelse_split" (formula "65") (term "0"))
                     (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "81") (term "0,0,0,1,0") (ifseqformula "66"))
                        (rule "applyEqReverse" (formula "81") (term "0,1,1,0,0") (ifseqformula "66"))
                        (rule "applyEqReverse" (formula "86") (term "0,0,1,0,1,0") (ifseqformula "66"))
                        (rule "applyEqReverse" (formula "86") (term "0,1,0,0,0") (ifseqformula "66"))
                        (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "66"))
                        (rule "hideAuxiliaryEq" (formula "66"))
                        (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0") (ifseqformula "66"))
                        (rule "applyEqReverse" (formula "67") (term "0,1,1,0,0") (ifseqformula "66"))
                        (rule "hideAuxiliaryEq" (formula "66"))
                        (rule "ifthenelse_split" (formula "80") (term "0"))
                        (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "82") (term "0,0") (ifseqformula "81"))
                           (rule "applyEqReverse" (formula "77") (term "0,0,0,1,0") (ifseqformula "81"))
                           (rule "applyEqReverse" (formula "83") (term "0,0") (ifseqformula "81"))
                           (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "81"))
                           (rule "applyEqReverse" (formula "77") (term "0,1,1,0,0") (ifseqformula "81"))
                           (rule "hideAuxiliaryEq" (formula "81"))
                           (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "80"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "64") (term "0,0,0,1,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "64") (term "0,1,1,0,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "63"))
                           (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "63"))
                           (rule "hideAuxiliaryEq" (formula "63"))
                           (rule "ifthenelse_split" (formula "72") (term "0"))
                           (branch "self_53.inputCols.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "70") (term "0,1,1,0,0") (ifseqformula "73"))
                              (rule "applyEqReverse" (formula "74") (term "0,0") (ifseqformula "73"))
                              (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "73"))
                              (rule "applyEqReverse" (formula "70") (term "0,0,0,1,0") (ifseqformula "73"))
                              (rule "applyEqReverse" (formula "75") (term "0,0") (ifseqformula "73"))
                              (rule "hideAuxiliaryEq" (formula "73"))
                              (rule "replace_known_left" (formula "59") (term "0,0,0") (ifseqformula "72"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "applyEqReverse" (formula "60") (term "0,0,0,1,0") (ifseqformula "59"))
                              (rule "applyEqReverse" (formula "60") (term "0,1,1,0,0") (ifseqformula "59"))
                              (rule "applyEqReverse" (formula "65") (term "0,0") (ifseqformula "59"))
                              (rule "applyEqReverse" (formula "61") (term "0,0") (ifseqformula "59"))
                              (rule "hideAuxiliaryEq" (formula "59"))
                              (rule "nnf_notAnd" (formula "66") (term "1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,1,1,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                              (rule "cut_direct" (formula "38") (term "0"))
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "applyEq" (formula "88") (term "0") (ifseqformula "38"))
                                 (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                 (rule "castedGetAny" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                 (rule "castedGetAny" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "lenNonNegative" (formula "35") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "lenNonNegative" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castedGetAny" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "lenNonNegative" (formula "18") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                 (rule "castedGetAny" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "commute_or" (formula "52") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                 (rule "castedGetAny" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "15") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "79") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                 (rule "shift_paren_or" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "commute_or" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or" (formula "72") (term "0,0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_and_2" (formula "75") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                 (rule "commute_or" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "50") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "9")))
                                 (rule "true_left" (formula "64"))
                                 (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                 (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                 (rule "castedGetAny" (formula "71") (term "0"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "true_left" (formula "71"))
                                 (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                 (rule "castedGetAny" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                 (rule "castedGetAny" (formula "67") (term "0"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "true_left" (formula "67"))
                                 (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                 (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                 (rule "castedGetAny" (formula "62") (term "0"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "50"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "1,0") (ifseqformula "51"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "55"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "53"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "101") (term "0") (ifseqformula "29"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "1,0") (ifseqformula "54"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1,0,0") (ifseqformula "55"))
                                 (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "74"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "93")))
                                 (rule "true_left" (formula "50"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "55"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "32"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "57"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "66"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "57"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "58"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "60"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "1,0,0") (ifseqformula "61"))
                                 (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "76")))
                                 (rule "true_left" (formula "51"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "61"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0,0") (ifseqformula "38"))
                                 (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "114"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "63"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "64"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "65"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "41"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "67"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "68"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "69"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "70"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "71"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "72"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ex_pull_out3" (formula "42") (term "0"))
                                 (rule "ex_pull_out3" (formula "41") (term "0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "47") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,1,0"))
                                 (rule "commute_or" (formula "47") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "47") (term "1,0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "23") (term "1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "ex_pull_out3" (formula "47") (term "0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "47") (term "1,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "1,0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "1") (ifseqformula "73"))
                                 (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "74"))
                                 (rule "applyEq" (formula "60") (term "1,0,1") (ifseqformula "61"))
                                 (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "59"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "true_left" (formula "60"))
                                 (rule "allLeft" (formula "23") (inst "t=i_2"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "74"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "71"))
                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "73"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "allLeft" (formula "23") (inst "t=i_0"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "47"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "allLeft" (formula "61") (inst "t=i_2_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                 (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "91"))
                                 (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "true_left" (formula "61"))
                                 (rule "allLeft" (formula "61") (inst "t=i_2_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                 (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "65"))
                                 (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "true_left" (formula "61"))
                                 (rule "allLeft" (formula "61") (inst "t=i_2_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                 (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "86"))
                                 (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "true_left" (formula "61"))
                                 (rule "allLeft" (formula "61") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                 (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "35"))
                                 (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "true_left" (formula "61"))
                                 (rule "allLeft" (formula "65") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "95"))
                                 (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "true_left" (formula "65"))
                                 (rule "allLeft" (formula "65") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "70"))
                                 (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "true_left" (formula "65"))
                                 (rule "allLeft" (formula "65") (inst "t=i_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "39"))
                                 (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "true_left" (formula "65"))
                                 (rule "allLeft" (formula "65") (inst "t=i_5"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "26"))
                                 (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "true_left" (formula "65"))
                                 (rule "allLeft" (formula "65") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                 (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "65") (term "0,0,1"))
                                 (rule "leq_literals" (formula "65") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "notLeft" (formula "65"))
                                 (rule "commute_and" (formula "42") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "47") (term "0,0"))
                                 (rule "commute_and" (formula "41") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "42") (term "0,0"))
                                 (rule "commute_and_2" (formula "41") (term "0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=i_4"))
                                 (rule "exLeft" (formula "42") (inst "sk=i_6"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                 (rule "applyEq" (formula "44") (term "0,0,0") (ifseqformula "97"))
                                 (rule "eqSymm" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "94"))
                                 (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "96"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                 (rule "leq_literals" (formula "44") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "96"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "96"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "leq_literals" (formula "43") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "94"))
                                 (rule "qeq_literals" (formula "44") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "94"))
                                 (rule "qeq_literals" (formula "42") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "allLeft" (formula "45") (inst "t=i_1"))
                                 (rule "exLeft" (formula "45") (inst "sk=i_7"))
                                 (rule "andLeft" (formula "45"))
                                 (rule "andLeft" (formula "45"))
                                 (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                 (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "39"))
                                 (rule "eqSymm" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "36"))
                                 (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "36"))
                                 (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "36"))
                                 (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                 (rule "leq_literals" (formula "45") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "46") (term "0,0,1"))
                                 (rule "leq_literals" (formula "46") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                 (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "47") (term "0,0,1"))
                                 (rule "leq_literals" (formula "47") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "allLeft" (formula "53") (inst "t=i_2"))
                                 (rule "exLeft" (formula "53") (inst "sk=j_1"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,1"))
                                 (rule "mul_literals" (formula "55") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "79"))
                                 (rule "qeq_literals" (formula "55") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "81"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "53") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "79"))
                                 (rule "qeq_literals" (formula "54") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "81"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                 (rule "leq_literals" (formula "55") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "79"))
                                 (rule "qeq_literals" (formula "53") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "81"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "allLeft" (formula "56") (inst "t=i_0"))
                                 (rule "exLeft" (formula "56") (inst "sk=j_2"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "52"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                 (rule "mul_literals" (formula "58") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "49"))
                                 (rule "qeq_literals" (formula "57") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0") (ifseqformula "49"))
                                 (rule "qeq_literals" (formula "58") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "50"))
                                 (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "56") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "50"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "50"))
                                 (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                 (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                 (rule "leq_literals" (formula "57") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "49"))
                                 (rule "qeq_literals" (formula "56") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "allLeft" (formula "48") (inst "t=j_0"))
                                 (rule "exLeft" (formula "48") (inst "sk=i_8"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                 (rule "leq_literals" (formula "50") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "50") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "applyEq" (formula "112") (term "0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "111") (term "0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "50"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "48") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "allLeft" (formula "51") (inst "t=i_3"))
                                 (rule "exLeft" (formula "51") (inst "sk=i_9"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "andLeft" (formula "51"))
                                 (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "52") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "87"))
                                 (rule "eqSymm" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "85"))
                                 (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "85"))
                                 (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "85"))
                                 (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "86"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "53") (term "0,0,1"))
                                 (rule "leq_literals" (formula "53") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "86"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "51") (term "0,0,1"))
                                 (rule "leq_literals" (formula "51") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "86"))
                                 (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "52") (term "0,0,1"))
                                 (rule "leq_literals" (formula "52") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "54") (inst "t=i_5"))
                                 (rule "exLeft" (formula "54") (inst "sk=i_10"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                                 (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "104"))
                                 (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "104"))
                                 (rule "qeq_literals" (formula "55") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "104"))
                                 (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "105"))
                                 (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                 (rule "leq_literals" (formula "56") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "105"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "54") (term "0,0,1"))
                                 (rule "leq_literals" (formula "54") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "54"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "105"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                 (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "68") (inst "t=i_6"))
                                 (rule "exLeft" (formula "68") (inst "sk=j_3"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "replace_known_left" (formula "69") (term "0,0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "replace_known_left" (formula "70") (term "0,0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "70") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "70") (term "1"))
                                 (rule "polySimp_addComm1" (formula "70") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1"))
                                 (rule "mul_literals" (formula "70") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "68") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "69") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0") (ifseqformula "42"))
                                 (rule "qeq_literals" (formula "70") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "43"))
                                 (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0"))
                                 (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "69") (term "0,0,0"))
                                 (rule "leq_literals" (formula "69") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "43"))
                                 (rule "inEqSimp_homoInEq1" (formula "68") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0"))
                                 (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0"))
                                 (rule "leq_literals" (formula "68") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "68"))
                                 (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "43"))
                                 (rule "inEqSimp_homoInEq1" (formula "70") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,0"))
                                 (rule "add_literals" (formula "70") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "70") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "70") (term "0,0,0"))
                                 (rule "leq_literals" (formula "70") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "allLeft" (formula "30") (inst "t=i_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "98"))
                                 (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "134"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "allLeft" (formula "30") (inst "t=i_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "134"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                 (rule "castedGetAny" (formula "44") (term "0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                 (rule "castedGetAny" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "seqGetAlphaCast" (formula "64") (term "0,0,0"))
                                 (rule "castedGetAny" (formula "64") (term "0"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "true_left" (formula "64"))
                                 (rule "lenNonNegative" (formula "64") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "64"))
                                 (rule "seqGetAlphaCast" (formula "63") (term "0"))
                                 (rule "castedGetAny" (formula "63") (term "0"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "true_left" (formula "63"))
                                 (rule "allLeft" (formula "23") (inst "t=i_8"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "50"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "49"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "applyEq" (formula "81") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "89") (term "0") (ifseqformula "38"))
                                 (rule "lenNonNegative" (formula "35") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                 (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                 (rule "castedGetAny" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "seqGetAlphaCast" (formula "47") (term "0"))
                                 (rule "castedGetAny" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                 (rule "lenNonNegative" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castedGetAny" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "lenNonNegative" (formula "18") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                 (rule "castedGetAny" (formula "13") (term "0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                 (rule "castedGetAny" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "commute_or" (formula "52") (term "0,0"))
                                 (rule "commute_and" (formula "79") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "20") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "19") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "15") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_and" (formula "52") (term "0,0,1,1,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or" (formula "79") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                 (rule "shift_paren_or" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or" (formula "72") (term "0,0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_and_2" (formula "75") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "20") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "19") (term "0,1,0"))
                                 (rule "commute_or" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "36") (term "0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "shift_paren_or" (formula "65") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "50") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "64") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "64") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "9")))
                                 (rule "true_left" (formula "64"))
                                 (rule "commute_and" (formula "25") (term "0,0,1,1,0"))
                                 (rule "commute_and" (formula "72") (term "0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "71") (term "0"))
                                 (rule "castedGetAny" (formula "71") (term "0"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "true_left" (formula "71"))
                                 (rule "seqGetAlphaCast" (formula "4") (term "0"))
                                 (rule "castedGetAny" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                 (rule "castedGetAny" (formula "67") (term "0"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "true_left" (formula "67"))
                                 (rule "commute_and_2" (formula "25") (term "0,1,1,0"))
                                 (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                 (rule "castedGetAny" (formula "62") (term "0"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "charLiteral_to_int" (formula "50") (term "1,1,1,0,1,1,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1") (ifseqformula "50"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "85")))
                                 (rule "true_left" (formula "40"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "50"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "65"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "50"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "51"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "51"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "1,0") (ifseqformula "28"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "102"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "53"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "54"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0,0") (ifseqformula "31"))
                                 (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "108"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "56"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "57"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "105") (term "0") (ifseqformula "58"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "106"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "60"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "61"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "97") (term "0") (ifseqformula "62"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "98"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "63"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "67"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "65"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "66"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "67"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "68"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "69"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "70"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "46"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "72"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "47"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ex_pull_out3" (formula "42") (term "0"))
                                 (rule "ex_pull_out3" (formula "41") (term "0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "47") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,1,0"))
                                 (rule "commute_or" (formula "47") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "47") (term "1,0,0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "23") (term "1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "ex_pull_out3" (formula "47") (term "0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "47") (term "1,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "1,0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "73"))
                                 (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "60"))
                                 (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "104"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "60"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "74"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "60"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "1") (ifseqformula "74"))
                                 (rule "allLeft" (formula "62") (inst "t=i_2_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                 (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "92"))
                                 (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "allLeft" (formula "62") (inst "t=i_2_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                 (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "66"))
                                 (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "allLeft" (formula "62") (inst "t=i_2_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                 (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "87"))
                                 (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "allLeft" (formula "62") (inst "t=i_2_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                                 (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "36"))
                                 (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "true_left" (formula "62"))
                                 (rule "allLeft" (formula "66") (inst "t=i_4"))
                                 (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                 (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "96"))
                                 (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "true_left" (formula "66"))
                                 (rule "allLeft" (formula "66") (inst "t=i_3"))
                                 (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                 (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "71"))
                                 (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "true_left" (formula "66"))
                                 (rule "allLeft" (formula "66") (inst "t=i_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                 (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "40"))
                                 (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "true_left" (formula "66"))
                                 (rule "allLeft" (formula "66") (inst "t=i_5"))
                                 (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                 (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "true_left" (formula "66"))
                                 (rule "allLeft" (formula "66") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "26"))
                                 (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                                 (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "66") (term "0,0,1"))
                                 (rule "leq_literals" (formula "66") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "66") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "notLeft" (formula "66"))
                                 (rule "allLeft" (formula "24") (inst "t=i_0"))
                                 (rule "eqSymm" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "46"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "24") (term "0,0,1"))
                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "45"))
                                 (rule "qeq_literals" (formula "24") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "allLeft" (formula "24") (inst "t=i_2"))
                                 (rule "eqSymm" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "75"))
                                 (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "98"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "commute_and" (formula "43") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "48") (term "0,0"))
                                 (rule "commute_and" (formula "42") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "43") (term "0,0"))
                                 (rule "commute_and_2" (formula "42") (term "0,0"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null TRUE"
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "99") (term "1") (ifseqformula "1"))
                                    (rule "allLeft" (formula "43") (inst "t=j_0"))
                                    (rule "exLeft" (formula "43") (inst "sk=i_6"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1"))
                                    (rule "leq_literals" (formula "43") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "44") (term "0,0,1"))
                                    (rule "leq_literals" (formula "44") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "43") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "45") (term "0,0,1"))
                                    (rule "leq_literals" (formula "45") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "101") (term "0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "100") (term "0") (ifseqformula "45"))
                                    (rule "allLeft" (formula "46") (inst "t=i_4"))
                                    (rule "exLeft" (formula "46") (inst "sk=i_7"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                    (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "101"))
                                    (rule "eqSymm" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                    (rule "leq_literals" (formula "48") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "46") (term "0,0,1"))
                                    (rule "leq_literals" (formula "46") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "48") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "47") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "allLeft" (formula "49") (inst "t=i_3"))
                                    (rule "exLeft" (formula "49") (inst "sk=i_8"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                    (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "79"))
                                    (rule "eqSymm" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "51") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "50") (term "0,0,1"))
                                    (rule "leq_literals" (formula "50") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "50") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                    (rule "leq_literals" (formula "51") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "49") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "allLeft" (formula "52") (inst "t=i_1"))
                                    (rule "exLeft" (formula "52") (inst "sk=i_9"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                    (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "54") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "52") (term "0,0,1"))
                                    (rule "leq_literals" (formula "52") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "54") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "52") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "allLeft" (formula "55") (inst "t=i_5"))
                                    (rule "exLeft" (formula "55") (inst "sk=i_10"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                    (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "27"))
                                    (rule "eqSymm" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "99"))
                                    (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "57") (term "0,0,1"))
                                    (rule "leq_literals" (formula "57") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                    (rule "leq_literals" (formula "55") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                    (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                    (rule "leq_literals" (formula "56") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "99"))
                                    (rule "qeq_literals" (formula "57") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "99"))
                                    (rule "qeq_literals" (formula "55") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "allLeft" (formula "63") (inst "t=i_2"))
                                    (rule "exLeft" (formula "63") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "63"))
                                    (rule "andLeft" (formula "63"))
                                    (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "92"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_commuteGeq" (formula "65") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "65") (term "1"))
                                    (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,1"))
                                    (rule "mul_literals" (formula "65") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "89"))
                                    (rule "qeq_literals" (formula "65") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_contradInEq1" (formula "63") (term "0,0") (ifseqformula "89"))
                                    (rule "qeq_literals" (formula "63") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "89"))
                                    (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "91"))
                                    (rule "inEqSimp_homoInEq1" (formula "64") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0"))
                                    (rule "leq_literals" (formula "64") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_contradInEq1" (formula "65") (term "0") (ifseqformula "91"))
                                    (rule "inEqSimp_homoInEq1" (formula "65") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,0"))
                                    (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0"))
                                    (rule "leq_literals" (formula "65") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_contradInEq1" (formula "63") (term "0") (ifseqformula "91"))
                                    (rule "inEqSimp_homoInEq1" (formula "63") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,0"))
                                    (rule "add_literals" (formula "63") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "63") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,0"))
                                    (rule "leq_literals" (formula "63") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "allLeft" (formula "66") (inst "t=i_0"))
                                    (rule "exLeft" (formula "66") (inst "sk=j_2"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "68") (term "1"))
                                    (rule "polySimp_addComm1" (formula "68") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,1"))
                                    (rule "mul_literals" (formula "68") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "59"))
                                    (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "59"))
                                    (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0") (ifseqformula "59"))
                                    (rule "qeq_literals" (formula "68") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "60"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0"))
                                    (rule "add_literals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "60"))
                                    (rule "inEqSimp_homoInEq1" (formula "66") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,0"))
                                    (rule "add_literals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0"))
                                    (rule "leq_literals" (formula "66") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "60"))
                                    (rule "inEqSimp_homoInEq1" (formula "68") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0"))
                                    (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0"))
                                    (rule "leq_literals" (formula "68") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "allLeft" (formula "24") (inst "t=i_6"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "44"))
                                    (rule "qeq_literals" (formula "24") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "24"))
                                    (rule "andLeft" (formula "45"))
                                    (rule "inEqSimp_homoInEq1" (formula "45"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0"))
                                    (rule "add_literals" (formula "45") (term "0"))
                                    (rule "leq_literals" (formula "45"))
                                    (rule "closeFalse" (formula "45"))
                                 )
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null FALSE"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "43") (inst "t=j_0"))
                                    (rule "exLeft" (formula "43") (inst "sk=i_6"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,1"))
                                    (rule "leq_literals" (formula "43") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "43") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "44") (term "0,0,1"))
                                    (rule "leq_literals" (formula "44") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "45") (term "0,0,1"))
                                    (rule "leq_literals" (formula "45") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEq" (formula "101") (term "0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "102") (term "0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "45"))
                                    (rule "allLeft" (formula "46") (inst "t=i_4"))
                                    (rule "exLeft" (formula "46") (inst "sk=i_7"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                    (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "101"))
                                    (rule "eqSymm" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                    (rule "leq_literals" (formula "48") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "100"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "46") (term "0,0,1"))
                                    (rule "leq_literals" (formula "46") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "48") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "allLeft" (formula "49") (inst "t=i_3"))
                                    (rule "exLeft" (formula "49") (inst "sk=i_8"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                    (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "79"))
                                    (rule "eqSymm" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "51") (term "0,0,1"))
                                    (rule "leq_literals" (formula "51") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                    (rule "leq_literals" (formula "50") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "51") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "78"))
                                    (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "49") (term "0,0,1"))
                                    (rule "leq_literals" (formula "49") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "77"))
                                    (rule "qeq_literals" (formula "50") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "allLeft" (formula "57") (inst "t=i_0"))
                                    (rule "exLeft" (formula "57") (inst "sk=j_1"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "59") (term "1"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                                    (rule "mul_literals" (formula "59") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0") (ifseqformula "53"))
                                    (rule "qeq_literals" (formula "58") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0") (ifseqformula "53"))
                                    (rule "qeq_literals" (formula "59") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "53"))
                                    (rule "qeq_literals" (formula "57") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                    (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "leq_literals" (formula "57") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "59") (term "0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                    (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0"))
                                    (rule "leq_literals" (formula "59") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "allLeft" (formula "52") (inst "t=i_1"))
                                    (rule "exLeft" (formula "52") (inst "sk=i_9"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                    (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "54") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "54") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "52") (term "0,0,1"))
                                    (rule "leq_literals" (formula "52") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "allLeft" (formula "55") (inst "t=i_5"))
                                    (rule "exLeft" (formula "55") (inst "sk=i_10"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                    (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "27"))
                                    (rule "eqSymm" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "102"))
                                    (rule "qeq_literals" (formula "56") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "103"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "55") (term "0,0,1"))
                                    (rule "leq_literals" (formula "55") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "103"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "57") (term "0,0,1"))
                                    (rule "leq_literals" (formula "57") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "102"))
                                    (rule "qeq_literals" (formula "57") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "103"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                                    (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "56") (term "0,0,1"))
                                    (rule "leq_literals" (formula "56") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "102"))
                                    (rule "qeq_literals" (formula "55") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "allLeft" (formula "66") (inst "t=i_2"))
                                    (rule "exLeft" (formula "66") (inst "sk=j_2"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "95"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "95"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "95"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "68") (term "1"))
                                    (rule "polySimp_addComm1" (formula "68") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,1"))
                                    (rule "mul_literals" (formula "68") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "92"))
                                    (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0") (ifseqformula "94"))
                                    (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "68") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "68") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "94"))
                                    (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "66") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "92"))
                                    (rule "qeq_literals" (formula "68") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "94"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0"))
                                    (rule "add_literals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "92"))
                                    (rule "qeq_literals" (formula "66") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "allLeft" (formula "24") (inst "t=i_6"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "45"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                    (rule "leq_literals" (formula "24") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "24"))
                                    (rule "qeq_literals" (formula "44") (term "0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "closeFalse" (formula "44"))
                                 )
                              )
                           )
                           (branch "self_53.inputCols.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "83") (ifseqformula "97"))
                              (rule "close" (formula "83") (ifseqformula "53"))
                           )
                        )
                        (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "85") (ifseqformula "101"))
                           (rule "close" (formula "85") (ifseqformula "53"))
                        )
                     )
                     (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRight" (formula "87") (ifseqformula "102"))
                        (rule "close" (formula "87") (ifseqformula "53"))
                     )
                  )
               )
            )
         )
         (branch
            (rule "andRight" (formula "159"))
            (branch
               (rule "andRight" (formula "159"))
               (branch
                  (rule "wellFormedAnonEQ" (formula "159") (ifseqformula "65"))
                  (rule "wellFormedAnonEQ" (formula "159") (term "0") (ifseqformula "35"))
                  (rule "replace_known_left" (formula "159") (term "1") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "61")) (ifInst ""  (formula "34")))
                  (rule "closeTrue" (formula "159"))
               )
               (branch
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (ifseqformula "65"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (term "0") (ifseqformula "35"))
                  (rule "orRight" (formula "159"))
                  (rule "orRight" (formula "159"))
                  (rule "close" (formula "159") (ifseqformula "62"))
               )
            )
            (branch
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (ifseqformula "65"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (term "0") (ifseqformula "35"))
               (rule "orRight" (formula "159"))
               (rule "orRight" (formula "159"))
               (rule "close" (formula "159") (ifseqformula "37"))
            )
         )
      )
   )
   (branch "Exceptional Post (initDistVals)"
       (builtin "One Step Simplification" (formula "120"))
       (builtin "One Step Simplification" (formula "61"))
      (rule "andLeft" (formula "61"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "1,0") (ifseqformula "61"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "0,1,0") (ifseqformula "32"))
      (rule "andLeft" (formula "62"))
      (rule "andLeft" (formula "62"))
      (rule "andLeft" (formula "64"))
      (rule "notLeft" (formula "62"))
      (rule "close" (formula "65") (ifseqformula "64"))
   )
   (branch "Pre (initDistVals)"
       (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "119")) (ifInst ""  (formula "89")) (ifInst ""  (formula "119")) (ifInst ""  (formula "89")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "1,1") (ifseqformula "32"))
      (rule "wellFormedAnonEQ" (formula "118") (term "0,0,1") (ifseqformula "32"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "1,0,1") (ifseqformula "32"))
      (rule "eqSymm" (formula "118") (term "1,0,1,0,1,1,1,0"))
      (rule "replace_known_left" (formula "118") (term "0,0,0,1") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "31")) (ifInst ""  (formula "58")) (ifInst ""  (formula "86")) (ifInst ""  (formula "34")))
      (rule "castedGetAny" (formula "118") (term "1,1,0,1,0,1,1,1"))
      (rule "castedGetAny" (formula "118") (term "0,1,0,1,0,1,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "56") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "46"))
      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "46") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "54"))
      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "54") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "28"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "51"))
      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "51") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "118") (term "1,0,0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1,0,0,1,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "118") (term "1,0,0,1,0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1,0,0,1,0,1,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0,1,0,1,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0,1,1,1"))
      (rule "applyEq" (formula "30") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "117") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "95") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "108") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "22") (term "0,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
      (rule "eqSymm" (formula "11") (term "0"))
      (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "93") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "99") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "91") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "101") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "100") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "37") (term "6") (ifseqformula "32"))
      (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "97") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "102") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "2"))
      (rule "applyEq" (formula "90") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "105") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "90") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "96") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
      (rule "eqSymm" (formula "6"))
      (rule "applyEq" (formula "98") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "90") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "13") (term "0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "99") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "26") (term "0,1,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "93") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "92") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "93") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "8") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "9") (term "0,0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "90") (term "0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "7") (term "0,0,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "85") (term "0,1,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "84") (term "0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0") (ifseqformula "33"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "33"))
      (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
      (rule "eqSymm" (formula "7") (term "0"))
      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
      (rule "eqSymm" (formula "4"))
      (rule "applyEq" (formula "5") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "30"))
      (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "46") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "46") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "36"))
      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
      (rule "polySimp_elimOne" (formula "36") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "44"))
      (rule "polySimp_mulLiterals" (formula "44") (term "0"))
      (rule "polySimp_elimOne" (formula "44") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "41"))
      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
      (rule "polySimp_elimOne" (formula "41") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
      (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,1,1"))
      (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,1,1"))
      (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,1,1"))
      (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,0,1,1,1"))
      (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,0,1,1,1"))
      (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,0,1,1,1"))
      (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,0,1,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
      (rule "pullOutSelect" (formula "85") (term "0,1,1,0,1,0,1,1,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "applyEq" (formula "86") (term "0,1,1,1,0,0,1,0,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "49")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
      (rule "applyEqReverse" (formula "86") (term "0,1,1,1,0,0,1,0,1,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "86") (term "0,1,1,0,1,0,1,1,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "85") (term "1,0,0,1,0,1,0,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
      (rule "applyEq" (formula "86") (term "1,0,1,1,1,0,0,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
      (rule "applyEqReverse" (formula "86") (term "1,0,1,1,1,0,0,1,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "86") (term "1,0,0,1,0,1,0,1,1,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "85") (term "0,1,1,1,0,0,1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
      (rule "applyEq" (formula "86") (term "0,0,1,0,1,0,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
      (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_and_subsumption3" (formula "6") (term "0,0,0"))
      (rule "leq_literals" (formula "6") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "nnf_imp2or" (formula "39") (term "0"))
      (rule "nnf_imp2or" (formula "47") (term "1,0"))
      (rule "nnf_imp2or" (formula "40") (term "0"))
      (rule "nnf_imp2or" (formula "32") (term "0"))
      (rule "nnf_imp2or" (formula "35") (term "0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "86") (term "0,1"))
      (rule "replaceKnownSelect_taclet0_3" (formula "86") (term "0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "86") (term "0,0,1,0,1"))
      (rule "replaceKnownSelect_taclet0_5" (formula "86") (term "0,0,1,0,0,1"))
      (rule "replaceKnownSelect_taclet0_7" (formula "86") (term "0,0,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "86") (term "0,0,1,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_8" (formula "86") (term "0,0,0,0,0,1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,1") (ifseqformula "76"))
       (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "69")) (ifInst ""  (formula "79")))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "33") (term "0"))
      (rule "nnf_imp2or" (formula "5") (term "0"))
      (rule "nnf_imp2or" (formula "6") (term "0"))
      (rule "nnf_imp2or" (formula "47") (term "0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
      (rule "mul_literals" (formula "39") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "40") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
      (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
      (rule "mul_literals" (formula "40") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "32") (term "0,0"))
      (rule "nnf_notAnd" (formula "35") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
      (rule "mul_literals" (formula "35") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "21") (term "1,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "33") (term "0,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
      (rule "mul_literals" (formula "5") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
      (rule "mul_literals" (formula "6") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "47") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
      (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
      (rule "mul_literals" (formula "47") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "86") (term "0,1,1"))
      (rule "nnf_notAnd" (formula "32") (term "1,0,0"))
      (rule "inEqSimp_notGeq" (formula "32") (term "0,1,0,0"))
      (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0"))
      (rule "mul_literals" (formula "32") (term "1,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "32") (term "1,1,0,0"))
      (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,1,0,0"))
      (rule "mul_literals" (formula "32") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
      (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "33") (term "1,0,0"))
      (rule "inEqSimp_notLeq" (formula "33") (term "1,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "33") (term "0,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0,0"))
      (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
      (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
      (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
      (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "86") (term "0,0,1,1"))
      (rule "inEqSimp_notGeq" (formula "86") (term "0,0,0,1,1"))
      (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0,1,1"))
      (rule "add_zero_right" (formula "86") (term "0,0,0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,1,1"))
      (rule "mul_literals" (formula "86") (term "1,0,0,0,1,1"))
      (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0,1,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0,0,1,1"))
      (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0,0,1,1"))
      (rule "add_literals" (formula "86") (term "0,0,0,1,0,0,1,1"))
      (rule "add_zero_left" (formula "86") (term "0,0,1,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,1,1"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "86") (term "0,1") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
      (rule "replaceKnownSelect_taclet20_11" (formula "86") (term "1,0,1,1,0,0,1,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "86") (term "1,0,1,1,0,0,1,0,0,1"))
      (rule "replaceKnownSelect_taclet20_13" (formula "86") (term "0,1,1,0,0,1,0,0,1"))
      (rule "replaceKnownSelect_taclet20_11" (formula "86") (term "1,0,0,0,0,1,0,1,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "86") (term "1,0,0,0,0,1,0,1,0,0,1"))
      (rule "replaceKnownSelect_taclet20_13" (formula "86") (term "0,0,0,0,1,0,1,0,0,1"))
      (rule "replaceKnownSelect_taclet20_11" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "insert_constant_string_value" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "64")))
      (rule "insert_constant_string_value" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "insert_constant_string_value" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "replaceKnownSelect_taclet0_1" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "castDel" (formula "86") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "castDel" (formula "86") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "castDel" (formula "86") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "83"))
       (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "81")) (ifInst ""  (formula "82")) (ifInst ""  (formula "84")))
      (rule "castedGetAny" (formula "86") (term "0,0,1,0,1,0,0,0,0,0,1"))
      (rule "castedGetAny" (formula "86") (term "0,1,0,1,0,1"))
      (rule "castedGetAny" (formula "86") (term "0,0,1,0,1,0,0,1"))
      (rule "castedGetAny" (formula "86") (term "0,0,1,0,1,0,0,0,1"))
      (rule "castedGetAny" (formula "86") (term "0,1,0,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,0,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,1,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,0,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,0,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,0,0,0,0,0,1"))
      (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,0,0,1"))
      (rule "pullOutSelect" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "60"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "1,1,1,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,1") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
      (rule "applyEq" (formula "87") (term "0,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "0,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "87") (term "1,1,0,0,0,0,0,0,1"))
      (rule "eqSymm" (formula "87") (term "0,1,0,0,0,0,0,0,1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,1,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "86") (term "1,1,0,0,0,0,0,0,1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "1,0,1,1,1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
      (rule "applyEq" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,0,0,1,0,1,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,0,1,0,1,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "65"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "1,1,0,1,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
      (rule "applyEq" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,1,0,1,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "1,1,0,1,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,1,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "1,0,0,0,1,0,1,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
      (rule "applyEq" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,0,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
      (rule "applyEqReverse" (formula "87") (term "1,0,0,0,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "0,0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "87") (term "1,0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "86") (term "0,1,0,0,0,0,0,0,0,0,1") (ifseqformula "63"))
       (builtin "One Step Simplification" (formula "86"))
      (rule "pullOutSelect" (formula "86") (term "0,1,1,1,0,0,1,0,0,0,0,1") (inst "selectSK=java_util_Collection_seq_1"))
      (rule "applyEq" (formula "87") (term "0,1,1,1,0,0,1,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "0,0,1,0,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "87") (term "0,0,0,1,0,1,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "87") (term "0,1,1,1,0,0,1,0,0,0,1") (inst "selectSK=java_util_Collection_seq_2"))
      (rule "applyEq" (formula "88") (term "0,0,0,1,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "88") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "88") (term "0,0,1,0,1,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "88") (term "0,0,1,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "89") (term "0,1,0,0,0,0,0,0,1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "89") (term "1,0,1,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "88") (term "0,0,1,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
      (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "88") (term "0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "88"))
      (rule "pullOutSelect" (formula "88") (term "0,0,1,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "88") (term "0,1,0,0,0,0,0,0,0,0,0,1") (ifseqformula "56"))
       (builtin "One Step Simplification" (formula "88"))
      (rule "pullOutSelect" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "57"))
       (builtin "One Step Simplification" (formula "88"))
      (rule "pullOutSelect" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
      (rule "applyEqReverse" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "88") (term "0,0,0,0,0,0,0,0,0,1") (ifseqformula "64"))
       (builtin "One Step Simplification" (formula "88"))
      (rule "pullOutSelect" (formula "88") (term "0,0,0,0,0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
      (rule "applyEqReverse" (formula "89") (term "0,0,0,0,0,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "88") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "88"))
      (rule "lenNonNegative" (formula "33") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "33"))
      (rule "lenNonNegative" (formula "33") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "33"))
      (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
      (rule "cut_direct" (formula "36") (term "0"))
      (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
          (builtin "One Step Simplification" (formula "37"))
         (rule "true_left" (formula "37"))
         (rule "replace_known_left" (formula "88") (term "1,0,0,0,0,0,0,1") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "applyEq" (formula "59") (term "0") (ifseqformula "36"))
         (rule "seqGetAlphaCast" (formula "48") (term "0"))
         (rule "castedGetAny" (formula "48") (term "0"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "true_left" (formula "48"))
         (rule "seqGetAlphaCast" (formula "45") (term "0"))
         (rule "castedGetAny" (formula "45") (term "0"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "true_left" (formula "45"))
         (rule "seqGetAlphaCast" (formula "40") (term "0"))
         (rule "castedGetAny" (formula "40") (term "0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "commute_or_2" (formula "41") (term "0"))
         (rule "commute_or_2" (formula "42") (term "0"))
         (rule "commute_or_2" (formula "37") (term "0"))
         (rule "commute_or" (formula "23") (term "0,0"))
         (rule "seqGetAlphaCast" (formula "12") (term "0"))
         (rule "castedGetAny" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "commute_and" (formula "18") (term "0,0,1,0"))
         (rule "commute_and" (formula "17") (term "0,0,1,0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_and_2" (formula "49") (term "0,1,1,0"))
         (rule "seqGetAlphaCast" (formula "22") (term "0"))
         (rule "castedGetAny" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "lenNonNegative" (formula "10") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "lenNonNegative" (formula "14") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "commute_or" (formula "49") (term "0,0"))
         (rule "seqGetAlphaCast" (formula "16") (term "0"))
         (rule "castedGetAny" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
         (rule "commute_or" (formula "34") (term "0,0,0"))
         (rule "commute_or_2" (formula "7") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0"))
         (rule "commute_or" (formula "35") (term "0,0,0"))
         (rule "ifthenelse_split" (formula "3") (term "0"))
         (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "89") (term "0,0,1,0,1,0,1,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "89") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,1,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,1,0,0,1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,0,1"))
            (rule "nnf_imp2or" (formula "88") (term "0,0,0,0,0,0,1"))
            (rule "nnf_imp2or" (formula "88") (term "0,1,0,0,1"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,1,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,1"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,1,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0,0,0,1"))
            (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "88") (term "0,0,0,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,0,0,1"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "88") (term "0") (inst "i=i") (inst "i_0=i_0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "88") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "88") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "88") (term "0,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "88") (term "0,0,0,0,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "88") (term "0,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "88") (term "0,0,0,0,1,0,1,0,0"))
            (rule "expand_inInt" (formula "88") (term "1,0,0,1,0"))
            (rule "expand_inInt" (formula "88") (term "1,0,0,1,0,0"))
            (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,1,0,0"))
            (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,1,0,0"))
            (rule "eqSymm" (formula "88") (term "0,0,0"))
            (rule "castedGetAny" (formula "88") (term "0,0,1,0,1,0"))
            (rule "castedGetAny" (formula "88") (term "0,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "88") (term "0,1,1,0,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0,0,0,1,0,0"))
            (rule "pullOutSelect" (formula "88") (term "0,0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
            (rule "applyEq" (formula "89") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "89") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "52")))
            (rule "eqSymm" (formula "89") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
            (rule "applyEqReverse" (formula "89") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "89") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "88") (term "0,0,0"))
            (rule "replace_known_left" (formula "88") (term "0,0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "88"))
            (rule "applyEq" (formula "88") (term "1,1,1,0,0,0,1,0") (ifseqformula "33"))
            (rule "nnf_imp2or" (formula "88") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "88") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,0,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,1,0"))
            (rule "nnf_notAnd" (formula "88") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "88") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "88") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "88") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "88") (term "1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "88") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,1,1,0,0,1,0"))
            (rule "add_literals" (formula "88") (term "0,0,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "88") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "88") (term "0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "88") (term "1,0,1,0,0,1,0"))
            (rule "commute_or" (formula "41") (term "0,0"))
            (rule "commute_or" (formula "42") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or_2" (formula "34") (term "0,0"))
            (rule "commute_or_2" (formula "7") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0,0"))
            (rule "commute_or_2" (formula "35") (term "0,0"))
            (rule "commute_and_2" (formula "18") (term "0,1,0"))
            (rule "commute_and_2" (formula "17") (term "0,1,0"))
            (rule "charLiteral_to_int" (formula "49") (term "1,1,1,0,1,1,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,1,1,0"))
            (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
            (rule "ifthenelse_split" (formula "2") (term "0"))
            (branch "self_53.inputCols.<created> = TRUE TRUE"
               (rule "applyEqReverse" (formula "89") (term "0,0,1,0,1,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "89") (term "0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "89") (term "0,0,1,0,1,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "89") (term "0,0,0,1,0,1,0,0,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "89") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "89") (term "0,1,1,0,0,1,0,0,0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "42") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or" (formula "7") (term "0,0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0"))
                  (rule "commute_or_2" (formula "7") (term "0,0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "commute_or_2" (formula "8") (term "0,0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0"))
                  (rule "commute_or_2" (formula "34") (term "0,0"))
                  (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0"))
                  (rule "commute_or_2" (formula "35") (term "0,0,0"))
                  (rule "commute_or" (formula "34") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0,0"))
                  (rule "qeq_literals" (formula "34") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "7")))
                  (rule "true_left" (formula "34"))
                  (rule "commute_or" (formula "34") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0,0"))
                  (rule "qeq_literals" (formula "34") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "8")))
                  (rule "true_left" (formula "34"))
                  (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1,0") (ifseqformula "47"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "48"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "25"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "26"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "27"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "52"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "52"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "53"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1") (ifseqformula "54"))
                  (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,0") (ifseqformula "55"))
                  (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "56"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "56"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "57"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "58"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "59"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "60"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "61"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "62"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "63"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "64"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "65"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "66"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "67"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "68"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "68"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "43"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andRight" (formula "108"))
                  (branch
                     (rule "lenNonNegative" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "ex_pull_out3" (formula "40") (term "0"))
                     (rule "ex_pull_out3" (formula "39") (term "0"))
                     (rule "andRight" (formula "109"))
                     (branch
                        (rule "allRight" (formula "109") (inst "sk=i_0_0"))
                        (rule "orRight" (formula "109"))
                        (rule "notRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "112"))
                        (rule "inEqSimp_geqRight" (formula "111"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "111"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "112"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "113"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                        (rule "leq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ex_pull_out3" (formula "74") (term "1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                        (rule "allLeft" (formula "32") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                        (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "32") (term "0,0,1"))
                        (rule "leq_literals" (formula "32") (term "0,1"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "32") (term "0,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "closeFalse" (formula "32"))
                     )
                     (branch
                        (rule "allRight" (formula "109") (inst "sk=i_4"))
                        (rule "orRight" (formula "109"))
                        (rule "notRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "112"))
                        (rule "inEqSimp_geqRight" (formula "111"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "111"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "112"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "113"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                        (rule "leq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ex_pull_out3" (formula "74") (term "1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "74") (term "0,1,0"))
                        (rule "commute_or" (formula "74") (term "1,0,1,0"))
                        (rule "allLeft" (formula "33") (inst "t=i_4"))
                        (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "33") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "33") (term "0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                        (rule "andLeft" (formula "33"))
                        (rule "inEqSimp_homoInEq1" (formula "33"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                        (rule "add_literals" (formula "33") (term "1,1,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0"))
                        (rule "add_zero_right" (formula "33") (term "0"))
                        (rule "leq_literals" (formula "33"))
                        (rule "closeFalse" (formula "33"))
                     )
                  )
                  (branch
                     (rule "lenNonNegative" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "ex_pull_out3" (formula "40") (term "0"))
                     (rule "ex_pull_out3" (formula "39") (term "0"))
                     (rule "ex_pull_out3" (formula "70") (term "1,0"))
                     (rule "cnf_rightDist" (formula "40") (term "0,0"))
                     (rule "shift_paren_or" (formula "40") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "39") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "1,0,0"))
                     (rule "andRight" (formula "109"))
                     (branch
                        (rule "cnf_rightDist" (formula "70") (term "0,1,0"))
                        (rule "commute_or" (formula "70") (term "1,0,1,0"))
                        (rule "andRight" (formula "109"))
                        (branch
                           (rule "andRight" (formula "109"))
                           (branch
                              (rule "andRight" (formula "109"))
                              (branch
                                 (rule "andRight" (formula "109"))
                                 (branch
                                    (rule "allRight" (formula "109") (inst "sk=i_3_0"))
                                    (rule "orRight" (formula "109"))
                                    (rule "orRight" (formula "109"))
                                    (rule "notRight" (formula "111"))
                                    (rule "inEqSimp_geqRight" (formula "111"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "111"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "73") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "73") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "60") (inst "t=i_3_0"))
                                    (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "60") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "60") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "60"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch
                                    (rule "nnf_ex2all" (formula "109"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "40") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "71") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "71") (term "0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0"))
                                    (rule "commute_or_2" (formula "71") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "62"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "33"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "61") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "61") (term "0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "closeFalse" (formula "61"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "109") (inst "sk=i_1_0"))
                                 (rule "orRight" (formula "109"))
                                 (rule "orRight" (formula "109"))
                                 (rule "notRight" (formula "111"))
                                 (rule "inEqSimp_leqRight" (formula "110"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "111"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "64") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "64") (term "0,0,1"))
                                 (rule "leq_literals" (formula "64") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_contradInEq1" (formula "64") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "64") (term "0"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "closeFalse" (formula "64"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "109") (inst "sk=i_0_0"))
                              (rule "orRight" (formula "109"))
                              (rule "orRight" (formula "109"))
                              (rule "notRight" (formula "111"))
                              (rule "inEqSimp_geqRight" (formula "111"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "111"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                              (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "65") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                              (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                              (rule "add_literals" (formula "65") (term "0,0,1"))
                              (rule "leq_literals" (formula "65") (term "0,1"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "65"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch
                           (rule "nnf_ex2all" (formula "109"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                           (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                           (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                           (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                           (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "40") (term "1,0,0,0"))
                           (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0,1,0"))
                           (rule "commute_or" (formula "71") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "71") (term "0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0"))
                           (rule "commute_or_2" (formula "71") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                           (rule "commute_or_2" (formula "71") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "71") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_3"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "allLeft" (formula "2") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "67"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "37"))
                           (rule "qeq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "66") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "66") (term "0"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "closeFalse" (formula "66"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "109") (inst "sk=j_0"))
                        (rule "orRight" (formula "109"))
                        (rule "orRight" (formula "109"))
                        (rule "eqSymm" (formula "111") (term "1,0"))
                        (rule "inEqSimp_leqRight" (formula "109"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "110"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "nnf_ex2all" (formula "111"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,1,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                        (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                        (rule "commute_or" (formula "73") (term "1,0,1,0"))
                        (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                        (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0,1,0"))
                        (rule "commute_or" (formula "73") (term "1,0,0,1,0"))
                        (rule "ex_pull_out3" (formula "73") (term "0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0"))
                        (rule "commute_or_2" (formula "73") (term "1,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,1,0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,1,0,0,0"))
                        (rule "commute_or" (formula "73") (term "0,0,0,0,0,0"))
                        (rule "commute_and_2" (formula "73") (term "0,0"))
                        (rule "allLeft" (formula "60") (inst "t=i_2_1"))
                        (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                        (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "64"))
                        (rule "replace_known_right" (formula "60") (term "0,0,0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "allLeft" (formula "64") (inst "t=i_3"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "69"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "64") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                        (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "40"))
                        (rule "replace_known_right" (formula "64") (term "0,0,0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "allLeft" (formula "60") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                        (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "36"))
                        (rule "replace_known_right" (formula "60") (term "0,0,0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "allLeft" (formula "65") (inst "t=j_0"))
                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "65") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                        (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "65") (term "0,0,1"))
                        (rule "leq_literals" (formula "65") (term "0,1"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "notLeft" (formula "65"))
                        (rule "commute_and" (formula "43") (term "0,0,0"))
                        (rule "commute_and" (formula "42") (term "0,0,0"))
                        (rule "allLeft" (formula "1") (inst "t=i_2"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "73"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "70"))
                        (rule "qeq_literals" (formula "1") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "71"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "48"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_and_2" (formula "43") (term "0,0"))
                        (rule "commute_and_2" (formula "42") (term "0,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "74"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "75"))
                        (rule "applyEq" (formula "60") (term "1,0,1") (ifseqformula "61"))
                        (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "allLeft" (formula "74") (inst "t=i_0"))
                        (rule "exLeft" (formula "74") (inst "sk=j_1"))
                        (rule "andLeft" (formula "74"))
                        (rule "andLeft" (formula "74"))
                        (rule "replace_known_left" (formula "76") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "replace_known_left" (formula "74") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "74"))
                        (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "74") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "75") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "76") (term "1"))
                        (rule "polySimp_addComm1" (formula "76") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1"))
                        (rule "mul_literals" (formula "76") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "76") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "76") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "inEqSimp_contradInEq1" (formula "74") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "74") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "74"))
                        (rule "inEqSimp_contradInEq1" (formula "75") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "75") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "inEqSimp_contradInEq1" (formula "76") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0,0"))
                        (rule "leq_literals" (formula "76") (term "0,0"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "inEqSimp_contradInEq1" (formula "75") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,0"))
                        (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                        (rule "add_literals" (formula "75") (term "0,0,0"))
                        (rule "leq_literals" (formula "75") (term "0,0"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "inEqSimp_contradInEq1" (formula "74") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "74") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,0"))
                        (rule "add_literals" (formula "74") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "74") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0,0"))
                        (rule "leq_literals" (formula "74") (term "0,0"))
                         (builtin "One Step Simplification" (formula "74"))
                        (rule "allLeft" (formula "77") (inst "t=i_2"))
                        (rule "exLeft" (formula "77") (inst "sk=j_2"))
                        (rule "andLeft" (formula "77"))
                        (rule "andLeft" (formula "77"))
                        (rule "replace_known_left" (formula "78") (term "0,0,0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "replace_known_left" (formula "79") (term "0,0,0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "replace_known_left" (formula "77") (term "0,0,0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_commuteGeq" (formula "78") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "79") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "77") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "79") (term "1"))
                        (rule "polySimp_addComm1" (formula "79") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1"))
                        (rule "mul_literals" (formula "79") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "78") (term "0,0") (ifseqformula "70"))
                        (rule "qeq_literals" (formula "78") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "inEqSimp_contradInEq1" (formula "77") (term "0,0") (ifseqformula "70"))
                        (rule "qeq_literals" (formula "77") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_contradInEq1" (formula "79") (term "1,0") (ifseqformula "71"))
                        (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1,0"))
                        (rule "add_literals" (formula "79") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "79") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "79") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "79") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "71"))
                        (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                        (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "78") (term "0,0,0"))
                        (rule "leq_literals" (formula "78") (term "0,0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "inEqSimp_contradInEq1" (formula "77") (term "0") (ifseqformula "71"))
                        (rule "inEqSimp_homoInEq1" (formula "77") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0"))
                        (rule "leq_literals" (formula "77") (term "0,0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_contradInEq1" (formula "79") (term "0") (ifseqformula "70"))
                        (rule "qeq_literals" (formula "79") (term "0,0"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "seqGetAlphaCast" (formula "2") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "allLeft" (formula "43") (inst "t=j_0"))
                        (rule "exLeft" (formula "43") (inst "sk=i_4"))
                        (rule "andLeft" (formula "43"))
                        (rule "andLeft" (formula "43"))
                        (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                        (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "44") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                        (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "43") (term "0,0,1"))
                        (rule "leq_literals" (formula "43") (term "0,1"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                        (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "45") (term "0,0,1"))
                        (rule "leq_literals" (formula "45") (term "0,1"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                        (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "44") (term "0,0,1"))
                        (rule "leq_literals" (formula "44") (term "0,1"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "43") (term "0,1"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "45") (term "0,1"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEq" (formula "87") (term "0") (ifseqformula "45"))
                        (rule "applyEq" (formula "88") (term "0") (ifseqformula "45"))
                        (rule "allLeft" (formula "47") (inst "t=i_3"))
                        (rule "exLeft" (formula "47") (inst "sk=i_5"))
                        (rule "andLeft" (formula "47"))
                        (rule "andLeft" (formula "47"))
                        (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                        (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                        (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "75"))
                        (rule "eqSymm" (formula "49") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "73"))
                        (rule "qeq_literals" (formula "49") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "73"))
                        (rule "qeq_literals" (formula "48") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "74"))
                        (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                        (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "47") (term "0,0,1"))
                        (rule "leq_literals" (formula "47") (term "0,1"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "74"))
                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                        (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "49") (term "0,0,1"))
                        (rule "leq_literals" (formula "49") (term "0,1"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "73"))
                        (rule "qeq_literals" (formula "47") (term "0,1"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "74"))
                        (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                        (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                        (rule "add_literals" (formula "48") (term "0,0,1"))
                        (rule "leq_literals" (formula "48") (term "0,1"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "allLeft" (formula "50") (inst "t=i_1"))
                        (rule "exLeft" (formula "50") (inst "sk=i_6"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "50"))
                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                        (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                        (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "52") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "38"))
                        (rule "qeq_literals" (formula "50") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "40"))
                        (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                        (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                        (rule "add_literals" (formula "52") (term "0,0,1"))
                        (rule "leq_literals" (formula "52") (term "0,1"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "40"))
                        (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                        (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "51") (term "0,0,1"))
                        (rule "leq_literals" (formula "51") (term "0,1"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "40"))
                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                        (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "50") (term "0,0,1"))
                        (rule "leq_literals" (formula "50") (term "0,1"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "38"))
                        (rule "qeq_literals" (formula "52") (term "0,1"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "38"))
                        (rule "qeq_literals" (formula "51") (term "0,1"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "allLeft" (formula "32") (inst "t=i_2"))
                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                        (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "83"))
                        (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "106"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "allLeft" (formula "32") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                        (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "58"))
                        (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "106"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "seqGetAlphaCast" (formula "85") (term "0,0,0"))
                        (rule "castedGetAny" (formula "85") (term "0"))
                         (builtin "One Step Simplification" (formula "85"))
                        (rule "true_left" (formula "85"))
                        (rule "lenNonNegative" (formula "85") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "85"))
                        (rule "seqGetAlphaCast" (formula "84") (term "0"))
                        (rule "castedGetAny" (formula "84") (term "0"))
                         (builtin "One Step Simplification" (formula "84"))
                        (rule "true_left" (formula "84"))
                        (rule "allLeft" (formula "2") (inst "t=i_4"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "45"))
                        (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "leq_literals" (formula "2") (term "0,1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "44"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
               (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                  (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "68"))
                  (rule "close" (formula "53") (ifseqformula "50"))
               )
            )
            (branch "self_53.inputCols.<created> = TRUE FALSE"
               (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "66"))
               (rule "close" (formula "53") (ifseqformula "50"))
            )
         )
         (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "67"))
            (rule "close" (formula "53") (ifseqformula "50"))
         )
      )
      (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
          (builtin "One Step Simplification" (formula "36"))
         (rule "replace_known_left" (formula "89") (term "0,0,0,0,0,0,0,1") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "53")))
         (rule "applyEq" (formula "60") (term "0") (ifseqformula "36"))
         (rule "applyEq" (formula "53") (term "0") (ifseqformula "36"))
         (rule "seqGetAlphaCast" (formula "48") (term "0"))
         (rule "castedGetAny" (formula "48") (term "0"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "true_left" (formula "48"))
         (rule "seqGetAlphaCast" (formula "45") (term "0"))
         (rule "castedGetAny" (formula "45") (term "0"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "true_left" (formula "45"))
         (rule "seqGetAlphaCast" (formula "40") (term "0"))
         (rule "castedGetAny" (formula "40") (term "0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "commute_or_2" (formula "41") (term "0"))
         (rule "commute_or_2" (formula "42") (term "0"))
         (rule "commute_or_2" (formula "37") (term "0"))
         (rule "commute_or" (formula "23") (term "0,0"))
         (rule "seqGetAlphaCast" (formula "12") (term "0"))
         (rule "castedGetAny" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "commute_and" (formula "18") (term "0,0,1,0"))
         (rule "commute_and" (formula "17") (term "0,0,1,0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_and_2" (formula "49") (term "0,1,1,0"))
         (rule "seqGetAlphaCast" (formula "22") (term "0"))
         (rule "castedGetAny" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "lenNonNegative" (formula "10") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "lenNonNegative" (formula "14") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "commute_or" (formula "49") (term "0,0"))
         (rule "seqGetAlphaCast" (formula "16") (term "0"))
         (rule "castedGetAny" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
         (rule "commute_or" (formula "34") (term "0,0,0"))
         (rule "commute_or_2" (formula "7") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0"))
         (rule "shift_paren_or" (formula "35") (term "0,0"))
         (rule "ifthenelse_split" (formula "3") (term "0"))
         (branch "self_53.inputColsForDist.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "90") (term "0,1,1,0,0,1,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,0,0,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,1,0,0,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "90") (term "0,0,1,0,1,0,1,1") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,0,1"))
            (rule "nnf_imp2or" (formula "89") (term "0,0,0,0,0,0,1"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0,0,1"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,1"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0,0,1"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,0,1"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,1"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0,0,0,1"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "89") (term "0") (inst "i=i") (inst "i_0=i_0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "89") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "89") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "89") (term "0,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet20_9" (formula "89") (term "0,0,0,0,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "89") (term "0,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_10" (formula "89") (term "0,0,0,0,1,0,1,0,0"))
            (rule "expand_inInt" (formula "89") (term "1,0,0,1,0,0"))
            (rule "expand_inInt" (formula "89") (term "1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1,0,0"))
            (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1,0,0"))
            (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1,0"))
            (rule "eqSymm" (formula "89") (term "0,0,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0"))
            (rule "castedGetAny" (formula "89") (term "0,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "1,1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "89") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,1,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,0,1,0,0"))
            (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
            (rule "applyEq" (formula "90") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "90") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "52")))
            (rule "eqSymm" (formula "90") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
            (rule "applyEqReverse" (formula "90") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "89") (term "0,0,0"))
            (rule "replace_known_left" (formula "89") (term "0,0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "applyEq" (formula "89") (term "1,1,1,0,0,0,1,0") (ifseqformula "33"))
            (rule "nnf_imp2or" (formula "89") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "89") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,1,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "89") (term "1,0,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "89") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "89") (term "1,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "89") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "89") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,0,0,1,1,0,0,1,0"))
            (rule "add_literals" (formula "89") (term "0,0,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "89") (term "1,1,1,0,0,1,0"))
            (rule "commute_or" (formula "41") (term "0,0"))
            (rule "commute_or" (formula "42") (term "0,0"))
            (rule "commute_or" (formula "37") (term "0,0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "34") (term "0,0"))
            (rule "commute_or_2" (formula "7") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0,0"))
            (rule "commute_and_2" (formula "18") (term "0,1,0"))
            (rule "commute_and_2" (formula "17") (term "0,1,0"))
            (rule "charLiteral_to_int" (formula "49") (term "1,1,1,0,1,1,0"))
            (rule "add_literals" (formula "49") (term "1,1,0,1,1,0"))
            (rule "commute_and" (formula "23") (term "0,0,1,1,0"))
            (rule "ifthenelse_split" (formula "2") (term "0"))
            (branch "self_53.inputCols.<created> = TRUE TRUE"
               (rule "applyEqReverse" (formula "90") (term "0,0,1,0,1,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,0,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "90") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,0,0,0,0,1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "self_53.inputColsForPolyas.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "90") (term "0,1,1,0,0,1,0,0,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,1,0,0,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,1,0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or_2" (formula "42") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "commute_or" (formula "7") (term "0,0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0"))
                  (rule "commute_or_2" (formula "7") (term "0,0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "commute_or_2" (formula "8") (term "0,0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0"))
                  (rule "commute_or_2" (formula "34") (term "0,0"))
                  (rule "commute_or_2" (formula "35") (term "0,0,0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "inEqSimp_or_subsumption1" (formula "35") (term "0,0"))
                  (rule "qeq_literals" (formula "35") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0"))
                  (rule "commute_or" (formula "35") (term "0,0,0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "commute_or" (formula "34") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_or_subsumption1" (formula "34") (term "0,0,0"))
                  (rule "qeq_literals" (formula "34") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "7")))
                  (rule "true_left" (formula "34"))
                  (rule "commute_and_2" (formula "23") (term "0,1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1") (ifseqformula "47"))
                  (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "48"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "50"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "51"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "52"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "52"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0,0") (ifseqformula "28"))
                  (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "83"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "54"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "54"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "true_left" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "54"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "55"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "56"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "57"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "58"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "33"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "60"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "61"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "62"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "63"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "1,0") (ifseqformula "64"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "65"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "66"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "41"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "68"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "103") (term "0") (ifseqformula "43"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "104"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andRight" (formula "109"))
                  (branch
                     (rule "lenNonNegative" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "ex_pull_out3" (formula "40") (term "0"))
                     (rule "andRight" (formula "110"))
                     (branch
                        (rule "allRight" (formula "110") (inst "sk=i_0_0"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "notRight" (formula "112"))
                        (rule "orRight" (formula "112"))
                        (rule "orRight" (formula "111"))
                        (rule "inEqSimp_geqRight" (formula "113"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "114"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "114"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "114"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "ex_pull_out3" (formula "43") (term "0"))
                        (rule "ex_pull_out3" (formula "74") (term "1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "74") (term "0,1,0"))
                        (rule "commute_or" (formula "74") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
                        (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0,0"))
                        (rule "commute_or" (formula "44") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "32") (inst "t=i_0_0"))
                        (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                        (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                        (rule "add_literals" (formula "32") (term "0,0,1"))
                        (rule "leq_literals" (formula "32") (term "0,1"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "allRight" (formula "110") (inst "sk=i_4"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "notRight" (formula "112"))
                        (rule "orRight" (formula "112"))
                        (rule "orRight" (formula "111"))
                        (rule "inEqSimp_geqRight" (formula "113"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "114"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "114"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "114"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "ex_pull_out3" (formula "43") (term "0"))
                        (rule "ex_pull_out3" (formula "74") (term "1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "74") (term "0,1,0"))
                        (rule "commute_or" (formula "74") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
                        (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "1,0,0,0"))
                        (rule "commute_or" (formula "44") (term "0,0,0,0,0"))
                        (rule "allLeft" (formula "33") (inst "t=i_4"))
                        (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                        (rule "add_literals" (formula "33") (term "0,0,1"))
                        (rule "leq_literals" (formula "33") (term "0,1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "33") (term "0,1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "closeFalse" (formula "33"))
                     )
                  )
                  (branch
                     (rule "lenNonNegative" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "ex_pull_out3" (formula "40") (term "0"))
                     (rule "ex_pull_out3" (formula "39") (term "0"))
                     (rule "ex_pull_out3" (formula "70") (term "1,0"))
                     (rule "cnf_rightDist" (formula "40") (term "0,0"))
                     (rule "shift_paren_or" (formula "40") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "39") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "1,0,0"))
                     (rule "andRight" (formula "110"))
                     (branch
                        (rule "cnf_rightDist" (formula "70") (term "0,1,0"))
                        (rule "commute_or" (formula "70") (term "1,0,1,0"))
                        (rule "andRight" (formula "110"))
                        (branch
                           (rule "andRight" (formula "110"))
                           (branch
                              (rule "andRight" (formula "110"))
                              (branch
                                 (rule "andRight" (formula "110"))
                                 (branch
                                    (rule "allRight" (formula "110") (inst "sk=i_3_0"))
                                    (rule "orRight" (formula "110"))
                                    (rule "orRight" (formula "110"))
                                    (rule "notRight" (formula "112"))
                                    (rule "inEqSimp_leqRight" (formula "111"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "112"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "73") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "73") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "60") (inst "t=i_3_0"))
                                    (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                    (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "60") (term "0,0,1"))
                                    (rule "leq_literals" (formula "60") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_contradInEq1" (formula "60") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "60") (term "0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "closeFalse" (formula "60"))
                                 )
                                 (branch
                                    (rule "nnf_ex2all" (formula "110"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "40") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "71") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "71") (term "0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0"))
                                    (rule "commute_or_2" (formula "71") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "63"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "2") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "61"))
                                    (rule "qeq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "33"))
                                    (rule "qeq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "62") (ifseqformula "1"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "inEqSimp_homoInEq1" (formula "62"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0"))
                                    (rule "leq_literals" (formula "62"))
                                    (rule "closeFalse" (formula "62"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "110") (inst "sk=i_1_0"))
                                 (rule "orRight" (formula "110"))
                                 (rule "orRight" (formula "110"))
                                 (rule "notRight" (formula "112"))
                                 (rule "inEqSimp_geqRight" (formula "112"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "112"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "65") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                 (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "65") (term "0,0,1"))
                                 (rule "leq_literals" (formula "65") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "inEqSimp_contradInEq1" (formula "65") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "65") (term "0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "closeFalse" (formula "65"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "110") (inst "sk=i_0_0"))
                              (rule "orRight" (formula "110"))
                              (rule "orRight" (formula "110"))
                              (rule "notRight" (formula "112"))
                              (rule "inEqSimp_geqRight" (formula "112"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "112"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                              (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "73") (term "0,0,1,0"))
                              (rule "commute_or" (formula "73") (term "1,0,0,1,0"))
                              (rule "allLeft" (formula "66") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "66") (term "0,0"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "66"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_literals" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch
                           (rule "nnf_ex2all" (formula "110"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "cnf_rightDist" (formula "41") (term "0,0,0"))
                           (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                           (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                           (rule "commute_or_2" (formula "40") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "41") (term "1,0,0,0"))
                           (rule "commute_or" (formula "41") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "40") (term "1,0,0,0"))
                           (rule "commute_or" (formula "40") (term "0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0,1,0"))
                           (rule "commute_or" (formula "71") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "71") (term "0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0"))
                           (rule "commute_or_2" (formula "71") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                           (rule "commute_or_2" (formula "71") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "71") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "71") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_3"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "allLeft" (formula "2") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "67"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "37"))
                           (rule "qeq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "68") (ifseqformula "1"))
                           (rule "andLeft" (formula "68"))
                           (rule "inEqSimp_homoInEq1" (formula "68"))
                           (rule "polySimp_pullOutFactor1b" (formula "68") (term "0"))
                           (rule "add_literals" (formula "68") (term "1,1,0"))
                           (rule "times_zero_1" (formula "68") (term "1,0"))
                           (rule "add_zero_right" (formula "68") (term "0"))
                           (rule "leq_literals" (formula "68"))
                           (rule "closeFalse" (formula "68"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "110") (inst "sk=j_0"))
                        (rule "orRight" (formula "110"))
                        (rule "orRight" (formula "110"))
                        (rule "eqSymm" (formula "112") (term "1,0"))
                        (rule "inEqSimp_leqRight" (formula "110"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "111"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "nnf_ex2all" (formula "112"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,1,0"))
                        (rule "cnf_rightDist" (formula "43") (term "0,0,0"))
                        (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                        (rule "commute_or" (formula "73") (term "1,0,1,0"))
                        (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "42") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "42") (term "1,0,0,0"))
                        (rule "commute_or" (formula "43") (term "0,0,0,0,0"))
                        (rule "commute_or" (formula "42") (term "0,0,0,0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0,1,0"))
                        (rule "commute_or" (formula "73") (term "1,0,0,1,0"))
                        (rule "ex_pull_out3" (formula "73") (term "0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0"))
                        (rule "commute_or_2" (formula "73") (term "1,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,1,0,0"))
                        (rule "cnf_rightDist" (formula "73") (term "0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "1,0,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0,0,0"))
                        (rule "shift_paren_or" (formula "73") (term "0,1,0,0,0"))
                        (rule "commute_or" (formula "73") (term "0,0,0,0,0,0"))
                        (rule "commute_and_2" (formula "73") (term "0,0"))
                        (rule "allLeft" (formula "65") (inst "t=i_3"))
                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                        (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "70"))
                        (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "true_left" (formula "65"))
                        (rule "allLeft" (formula "65") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                        (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "40"))
                        (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "65"))
                        (rule "true_left" (formula "65"))
                        (rule "allLeft" (formula "60") (inst "t=i_2_1"))
                        (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                        (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "65"))
                        (rule "replace_known_right" (formula "60") (term "0,0,0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "allLeft" (formula "60") (inst "t=i_2_0"))
                        (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                        (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "36"))
                        (rule "replace_known_right" (formula "60") (term "0,0,0") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "allLeft" (formula "66") (inst "t=j_0"))
                        (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "66") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "inEqSimp_contradInEq1" (formula "66") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1"))
                        (rule "add_literals" (formula "66") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "66") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "66") (term "0,0,1"))
                        (rule "leq_literals" (formula "66") (term "0,1"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "notLeft" (formula "66"))
                        (rule "commute_and" (formula "43") (term "0,0,0"))
                        (rule "commute_and" (formula "42") (term "0,0,0"))
                        (rule "allLeft" (formula "1") (inst "t=i_2"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "73"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "71"))
                        (rule "qeq_literals" (formula "1") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "72"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "48"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_and_2" (formula "43") (term "0,0"))
                        (rule "commute_and_2" (formula "42") (term "0,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "74"))
                        (rule "applyEq" (formula "59") (term "1,0,1") (ifseqformula "60"))
                        (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "60"))
                        (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "1") (ifseqformula "75"))
                        (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "59")))
                        (rule "true_left" (formula "60"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "1") (ifseqformula "75"))
                        (rule "allLeft" (formula "75") (inst "t=i_2"))
                        (rule "exLeft" (formula "75") (inst "sk=j_1"))
                        (rule "andLeft" (formula "75"))
                        (rule "andLeft" (formula "75"))
                        (rule "replace_known_left" (formula "77") (term "0,0,0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "replace_known_left" (formula "76") (term "0,0,0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "inEqSimp_commuteGeq" (formula "77") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "75") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "77") (term "1"))
                        (rule "polySimp_addComm1" (formula "77") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1"))
                        (rule "mul_literals" (formula "77") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "77") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0") (ifseqformula "72"))
                        (rule "qeq_literals" (formula "76") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "inEqSimp_contradInEq1" (formula "77") (term "1,0") (ifseqformula "73"))
                        (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1,0"))
                        (rule "add_literals" (formula "77") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "77") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "77") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "77") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_contradInEq1" (formula "75") (term "0,0") (ifseqformula "72"))
                        (rule "qeq_literals" (formula "75") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "inEqSimp_contradInEq1" (formula "76") (term "0") (ifseqformula "73"))
                        (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,0"))
                        (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "76") (term "0,0,0"))
                        (rule "leq_literals" (formula "76") (term "0,0"))
                         (builtin "One Step Simplification" (formula "76"))
                        (rule "inEqSimp_contradInEq1" (formula "77") (term "0") (ifseqformula "72"))
                        (rule "qeq_literals" (formula "77") (term "0,0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_contradInEq1" (formula "75") (term "0") (ifseqformula "73"))
                        (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,0"))
                        (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "75") (term "0,0,0"))
                        (rule "leq_literals" (formula "75") (term "0,0"))
                         (builtin "One Step Simplification" (formula "75"))
                        (rule "allLeft" (formula "78") (inst "t=i_0"))
                        (rule "exLeft" (formula "78") (inst "sk=j_2"))
                        (rule "andLeft" (formula "78"))
                        (rule "andLeft" (formula "78"))
                        (rule "replace_known_left" (formula "80") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "replace_known_left" (formula "78") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "replace_known_left" (formula "79") (term "0,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "inEqSimp_commuteGeq" (formula "80") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "78") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "79") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "80") (term "1"))
                        (rule "polySimp_addComm1" (formula "80") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1"))
                        (rule "mul_literals" (formula "80") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "80") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "80") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "80") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "inEqSimp_contradInEq1" (formula "78") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "78") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "inEqSimp_contradInEq1" (formula "79") (term "0,0") (ifseqformula "45"))
                        (rule "qeq_literals" (formula "79") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "inEqSimp_contradInEq1" (formula "80") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "80") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,0"))
                        (rule "add_literals" (formula "80") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "80") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "80") (term "0,0,0"))
                        (rule "leq_literals" (formula "80") (term "0,0"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "inEqSimp_contradInEq1" (formula "78") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
                        (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,0"))
                        (rule "leq_literals" (formula "78") (term "0,0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "inEqSimp_contradInEq1" (formula "79") (term "0") (ifseqformula "47"))
                        (rule "inEqSimp_homoInEq1" (formula "79") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0"))
                        (rule "add_literals" (formula "79") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "79") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "79") (term "0,0,0"))
                        (rule "leq_literals" (formula "79") (term "0,0"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "seqGetAlphaCast" (formula "2") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "cut_direct" (formula "1") (term "0"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null TRUE"
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "87") (term "1") (ifseqformula "1"))
                           (rule "allLeft" (formula "43") (inst "t=j_0"))
                           (rule "exLeft" (formula "43") (inst "sk=i_4"))
                           (rule "andLeft" (formula "43"))
                           (rule "andLeft" (formula "43"))
                           (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "45") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1"))
                           (rule "leq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "applyEq" (formula "89") (term "0") (ifseqformula "45"))
                           (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "45"))
                           (rule "applyEq" (formula "88") (term "0") (ifseqformula "45"))
                           (rule "allLeft" (formula "47") (inst "t=i_3"))
                           (rule "exLeft" (formula "47") (inst "sk=i_5"))
                           (rule "andLeft" (formula "47"))
                           (rule "andLeft" (formula "47"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                           (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "77"))
                           (rule "eqSymm" (formula "49") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "49") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "48") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "47") (term "0,0,1"))
                           (rule "leq_literals" (formula "47") (term "0,1"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "48") (term "0,0,1"))
                           (rule "leq_literals" (formula "48") (term "0,1"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                           (rule "add_literals" (formula "49") (term "0,0,1"))
                           (rule "leq_literals" (formula "49") (term "0,1"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "47") (term "0,1"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "allLeft" (formula "50") (inst "t=i_1"))
                           (rule "exLeft" (formula "50") (inst "sk=i_6"))
                           (rule "andLeft" (formula "50"))
                           (rule "andLeft" (formula "50"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "41"))
                           (rule "eqSymm" (formula "52") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "51") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "52") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "50") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                           (rule "add_literals" (formula "52") (term "0,0,1"))
                           (rule "leq_literals" (formula "52") (term "0,1"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                           (rule "add_literals" (formula "51") (term "0,0,1"))
                           (rule "leq_literals" (formula "51") (term "0,1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "50") (term "0,0,1"))
                           (rule "leq_literals" (formula "50") (term "0,1"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "allLeft" (formula "32") (inst "t=i_2"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "84"))
                           (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "allLeft" (formula "32") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "58"))
                           (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "seqGetAlphaCast" (formula "85") (term "0"))
                           (rule "castedGetAny" (formula "85") (term "0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "true_left" (formula "85"))
                           (rule "seqGetAlphaCast" (formula "85") (term "0,0,0"))
                           (rule "castedGetAny" (formula "85") (term "0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "true_left" (formula "85"))
                           (rule "lenNonNegative" (formula "86") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "86"))
                           (rule "allLeft" (formula "2") (inst "t=i_4"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "leq_literals" (formula "2") (term "0,1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "closeFalse" (formula "44"))
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX = null FALSE"
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "43") (inst "t=j_0"))
                           (rule "exLeft" (formula "43") (inst "sk=i_4"))
                           (rule "andLeft" (formula "43"))
                           (rule "andLeft" (formula "43"))
                           (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "45") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_literals" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                           (rule "add_literals" (formula "45") (term "0,0,1"))
                           (rule "leq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "applyEq" (formula "89") (term "0") (ifseqformula "45"))
                           (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "45"))
                           (rule "applyEq" (formula "90") (term "0") (ifseqformula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_literals" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "allLeft" (formula "47") (inst "t=i_3"))
                           (rule "exLeft" (formula "47") (inst "sk=i_5"))
                           (rule "andLeft" (formula "47"))
                           (rule "andLeft" (formula "47"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                           (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "77"))
                           (rule "eqSymm" (formula "49") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "47") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "49") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "48") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                           (rule "add_literals" (formula "47") (term "0,0,1"))
                           (rule "leq_literals" (formula "47") (term "0,1"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                           (rule "add_literals" (formula "49") (term "0,0,1"))
                           (rule "leq_literals" (formula "49") (term "0,1"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "76"))
                           (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,1"))
                           (rule "leq_literals" (formula "48") (term "0,1"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "allLeft" (formula "50") (inst "t=i_1"))
                           (rule "exLeft" (formula "50") (inst "sk=i_6"))
                           (rule "andLeft" (formula "50"))
                           (rule "andLeft" (formula "50"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "41"))
                           (rule "eqSymm" (formula "52") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "51") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                           (rule "add_literals" (formula "52") (term "0,0,1"))
                           (rule "leq_literals" (formula "52") (term "0,1"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                           (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                           (rule "add_literals" (formula "50") (term "0,0,1"))
                           (rule "leq_literals" (formula "50") (term "0,1"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                           (rule "add_literals" (formula "51") (term "0,0,1"))
                           (rule "leq_literals" (formula "51") (term "0,1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "50") (term "0,1"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "52") (term "0,1"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "allLeft" (formula "32") (inst "t=i_2"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "84"))
                           (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "109"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "allLeft" (formula "32") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "58"))
                           (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "109"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "seqGetAlphaCast" (formula "85") (term "0"))
                           (rule "castedGetAny" (formula "85") (term "0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "true_left" (formula "85"))
                           (rule "seqGetAlphaCast" (formula "85") (term "0,0,0"))
                           (rule "castedGetAny" (formula "85") (term "0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "true_left" (formula "85"))
                           (rule "lenNonNegative" (formula "86") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "86"))
                           (rule "allLeft" (formula "2") (inst "t=i_4"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "leq_literals" (formula "2") (term "0,1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "self_53.inputColsForPolyas.<created> = TRUE FALSE"
                  (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "69"))
                  (rule "close" (formula "53") (ifseqformula "50"))
               )
            )
            (branch "self_53.inputCols.<created> = TRUE FALSE"
               (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "67"))
               (rule "close" (formula "53") (ifseqformula "50"))
            )
         )
         (branch "self_53.inputColsForDist.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "68"))
            (rule "close" (formula "53") (ifseqformula "50"))
         )
      )
   )
)
(branch "Exceptional Post (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "29"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "andLeft" (formula "29"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "29"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "30"))
   (rule "close" (formula "34") (ifseqformula "33"))
)
(branch "Pre (generateDataForVoter)"
    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "55") (term "0,1,1,1,1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "55") (term "0,1,1,1,0") (inst "i=i") (inst "i_0=i_0") (userinteraction))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "55") (term "0,1,1,0") (userinteraction))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "55") (term "0,1,0") (userinteraction))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "55") (term "0,0") (userinteraction))
   (rule "andRight" (formula "55"))
   (branch "Case 1"
      (rule "andRight" (formula "55"))
      (branch
         (rule "andRight" (formula "55"))
         (branch
            (rule "notRight" (formula "55"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
            (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "castDel" (formula "51") (term "0,0"))
            (rule "castDel" (formula "36") (term "0,0"))
            (rule "castDel" (formula "37") (term "0,0"))
            (rule "castDel" (formula "35") (term "0,0"))
            (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
            (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
            (rule "eqSymm" (formula "9"))
            (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "23") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
            (rule "close" (formula "55") (ifseqformula "1"))
         )
         (branch
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
            (rule "eqSymm" (formula "11") (term "1"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "8"))
            (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "11") (term "0"))
            (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
            (rule "close" (formula "55") (ifseqformula "7"))
         )
      )
      (branch "Case 2"
         (rule "andRight" (formula "55"))
         (branch
            (rule "andRight" (formula "55"))
            (branch
               (rule "andRight" (formula "55"))
               (branch
                  (rule "andRight" (formula "55"))
                  (branch
                     (rule "notRight" (formula "55"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "castDel" (formula "51") (term "0,0"))
                     (rule "castDel" (formula "36") (term "0,0"))
                     (rule "castDel" (formula "37") (term "0,0"))
                     (rule "castDel" (formula "35") (term "0,0"))
                     (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                     (rule "close" (formula "53") (ifseqformula "1"))
                  )
                  (branch
                     (rule "notRight" (formula "55"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "castDel" (formula "51") (term "0,0"))
                     (rule "castDel" (formula "36") (term "0,0"))
                     (rule "castDel" (formula "37") (term "0,0"))
                     (rule "castDel" (formula "35") (term "0,0"))
                     (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                     (rule "close" (formula "54") (ifseqformula "1"))
                  )
               )
               (branch
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                  (rule "eqSymm" (formula "11") (term "1"))
                  (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "castDel" (formula "36") (term "0,0"))
                  (rule "castDel" (formula "34") (term "0,0"))
                  (rule "castDel" (formula "35") (term "0,0"))
                  (rule "castDel" (formula "50") (term "0,0"))
                  (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                  (rule "eqSymm" (formula "11") (term "1"))
                  (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "27") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "27") (term "1,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "55"))
                  (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "29")))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "55") (term "1"))
                  (rule "replace_known_right" (formula "55") (term "0,0,1") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "commute_and" (formula "21") (term "0,0,1,0"))
                  (rule "commute_and" (formula "22") (term "0,0,1,0"))
                  (rule "commute_or" (formula "27") (term "0,0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "55") (term "1"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
            )
            (branch
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
               (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
               (rule "eqSymm" (formula "11") (term "1"))
               (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
               (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "castDel" (formula "36") (term "0,0"))
               (rule "castDel" (formula "34") (term "0,0"))
               (rule "castDel" (formula "35") (term "0,0"))
               (rule "castDel" (formula "50") (term "0,0"))
               (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
               (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
               (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
               (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
               (rule "eqSymm" (formula "11") (term "1"))
               (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "polySimp_elimOne" (formula "19") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polySimp_elimOne" (formula "14") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
               (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
               (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "21") (term "0"))
               (rule "nnf_imp2or" (formula "22") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "mul_literals" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "55"))
               (rule "closeTrue" (formula "55"))
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "55"))
            (branch
               (rule "andRight" (formula "55"))
               (branch
                  (rule "andRight" (formula "55"))
                  (branch
                     (rule "notRight" (formula "55"))
                     (rule "close" (formula "51") (ifseqformula "1"))
                  )
                  (branch
                     (rule "notRight" (formula "55"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "castDel" (formula "51") (term "0,0"))
                     (rule "castDel" (formula "36") (term "0,0"))
                     (rule "castDel" (formula "37") (term "0,0"))
                     (rule "castDel" (formula "35") (term "0,0"))
                     (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                     (rule "eqSymm" (formula "9"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                     (rule "close" (formula "50") (ifseqformula "1"))
                  )
               )
               (branch
                  (rule "notRight" (formula "55"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                  (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "castDel" (formula "51") (term "0,0"))
                  (rule "castDel" (formula "36") (term "0,0"))
                  (rule "castDel" (formula "37") (term "0,0"))
                  (rule "castDel" (formula "35") (term "0,0"))
                  (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                  (rule "close" (formula "52") (ifseqformula "1"))
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "55"))
               (branch
                  (rule "andRight" (formula "55"))
                  (branch
                     (rule "andRight" (formula "55"))
                     (branch
                        (rule "eqSymm" (formula "55"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "1"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "castDel" (formula "50") (term "0,0"))
                        (rule "castDel" (formula "35") (term "0,0"))
                        (rule "castDel" (formula "36") (term "0,0"))
                        (rule "castDel" (formula "34") (term "0,0"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                        (rule "close" (formula "55") (ifseqformula "8"))
                     )
                     (branch
                        (rule "expand_inInt" (formula "55") (term "1,0,0"))
                        (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0"))
                        (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0"))
                        (rule "allRight" (formula "55") (inst "sk=i_0_0"))
                        (rule "impRight" (formula "55"))
                        (rule "notRight" (formula "56"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "4"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "32") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "5"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "22") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                        (rule "insert_constant_string_value" (formula "40") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "insert_constant_string_value" (formula "55") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "insert_constant_string_value" (formula "41") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "castDel" (formula "40") (term "0,0"))
                        (rule "castDel" (formula "55") (term "0,0"))
                        (rule "castDel" (formula "41") (term "0,0"))
                        (rule "castDel" (formula "39") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "32") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "32") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,0,1,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "7"))
                        (rule "eqSymm" (formula "16") (term "1"))
                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "32") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "7"))
                        (rule "eqSymm" (formula "16") (term "1"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "31") (term "1,0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or" (formula "25") (term "0,0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "seqGetAlphaCast" (formula "1") (term "0"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_and" (formula "25") (term "0,0,1,0"))
                        (rule "commute_and" (formula "26") (term "0,0,1,0"))
                        (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or" (formula "20") (term "0,0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "lenNonNegative" (formula "12") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "seqGetAlphaCast" (formula "30") (term "0"))
                        (rule "castedGetAny" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "seqGetAlphaCast" (formula "24") (term "0"))
                        (rule "castedGetAny" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "14") (term "0,0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "seqGetAlphaCast" (formula "19") (term "0"))
                        (rule "castedGetAny" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "lenNonNegative" (formula "12") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                        (rule "commute_and_2" (formula "25") (term "0,1,0"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "15"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "23") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                           (rule "lenNonNegative" (formula "18") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "33") (term "1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "13") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1"))
                           (rule "leq_literals" (formula "13") (term "0,1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "23") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                           (rule "lenNonNegative" (formula "18") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "33") (term "1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                           (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "13") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "13"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
                  (branch
                     (rule "expand_inInt" (formula "55") (term "1,0,0"))
                     (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0"))
                     (rule "allRight" (formula "55") (inst "sk=i_2"))
                     (rule "impRight" (formula "55"))
                     (rule "notRight" (formula "56"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "4"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "32") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_commuteLeq" (formula "5"))
                     (rule "applyEq" (formula "24") (term "0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "16") (term "0"))
                     (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "32") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "32") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "32") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "32") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "22") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "insert_constant_string_value" (formula "41") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "insert_constant_string_value" (formula "55") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "insert_constant_string_value" (formula "40") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "castDel" (formula "41") (term "0,0"))
                     (rule "castDel" (formula "55") (term "0,0"))
                     (rule "castDel" (formula "39") (term "0,0"))
                     (rule "castDel" (formula "40") (term "0,0"))
                     (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "21") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "0,0,1,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "16") (term "0,0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "16") (term "0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "13"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "31") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "21") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "31") (term "1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or" (formula "31") (term "0,0"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "seqGetAlphaCast" (formula "1") (term "0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "commute_and" (formula "26") (term "0,0,1,0"))
                     (rule "commute_and" (formula "25") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "lenNonNegative" (formula "12") (term "1"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or_2" (formula "20") (term "0"))
                     (rule "commute_or" (formula "16") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "commute_or" (formula "21") (term "0,0"))
                     (rule "commute_or_2" (formula "21") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "seqGetAlphaCast" (formula "30") (term "0"))
                     (rule "castedGetAny" (formula "30") (term "0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "commute_or" (formula "13") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "seqGetAlphaCast" (formula "24") (term "0"))
                     (rule "castedGetAny" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "lenNonNegative" (formula "12") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                     (rule "seqGetAlphaCast" (formula "19") (term "0"))
                     (rule "castedGetAny" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "commute_and_2" (formula "26") (term "0,1,0"))
                     (rule "cut_direct" (formula "15") (term "1"))
                     (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "15"))
                        (rule "commute_and_2" (formula "25") (term "0,1,0"))
                        (rule "lenNonNegative" (formula "23") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                        (rule "lenNonNegative" (formula "18") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "18"))
                        (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                        (rule "ex_pull_out3" (formula "28") (term "0"))
                        (rule "cnf_rightDist" (formula "28") (term "0,0"))
                        (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                        (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "27") (term "0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "33") (term "1,0"))
                        (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                        (rule "commute_or" (formula "33") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                        (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                        (rule "allLeft" (formula "14") (inst "t=i_2"))
                        (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "14") (term "0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "14"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
                        (rule "eqSymm" (formula "32"))
                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "15"))
                        (rule "commute_and_2" (formula "25") (term "0,1,0"))
                        (rule "lenNonNegative" (formula "23") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                        (rule "lenNonNegative" (formula "18") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "18"))
                        (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                        (rule "ex_pull_out3" (formula "28") (term "0"))
                        (rule "cnf_rightDist" (formula "28") (term "0,0"))
                        (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                        (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "27") (term "0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                        (rule "ex_pull_out3" (formula "33") (term "1,0"))
                        (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                        (rule "commute_or" (formula "33") (term "1,0,1,0"))
                        (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                        (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                        (rule "allLeft" (formula "14") (inst "t=i_2"))
                        (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "55"))
                  (branch
                     (rule "andRight" (formula "55"))
                     (branch
                        (rule "andRight" (formula "55"))
                        (branch
                           (rule "andRight" (formula "55"))
                           (branch
                              (rule "andRight" (formula "55"))
                              (branch
                                 (rule "andRight" (formula "55"))
                                 (branch
                                    (rule "andRight" (formula "55"))
                                    (branch
                                       (rule "andRight" (formula "55"))
                                       (branch
                                          (rule "andRight" (formula "55"))
                                          (branch
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "andRight" (formula "55"))
                                                (branch
                                                   (rule "andRight" (formula "55"))
                                                   (branch
                                                      (rule "andRight" (formula "55"))
                                                      (branch
                                                         (rule "andRight" (formula "55"))
                                                         (branch
                                                            (rule "andRight" (formula "55"))
                                                            (branch
                                                               (rule "andRight" (formula "55"))
                                                               (branch
                                                                  (rule "andRight" (formula "55"))
                                                                  (branch
                                                                     (rule "andRight" (formula "55"))
                                                                     (branch
                                                                        (rule "andRight" (formula "55"))
                                                                        (branch
                                                                           (rule "andRight" (formula "55"))
                                                                           (branch
                                                                              (rule "andRight" (formula "55"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "55"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "55"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "55"))
                                                                                       (branch
                                                                                          (rule "notRight" (formula "55"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                                          (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "37"))
                                                                                          (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "castDel" (formula "51") (term "0,0"))
                                                                                          (rule "castDel" (formula "36") (term "0,0"))
                                                                                          (rule "castDel" (formula "37") (term "0,0"))
                                                                                          (rule "castDel" (formula "35") (term "0,0"))
                                                                                          (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "eqSymm" (formula "9"))
                                                                                          (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "close" (formula "33") (ifseqformula "1"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "notRight" (formula "55"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                                          (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "37"))
                                                                                          (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "castDel" (formula "51") (term "0,0"))
                                                                                          (rule "castDel" (formula "36") (term "0,0"))
                                                                                          (rule "castDel" (formula "37") (term "0,0"))
                                                                                          (rule "castDel" (formula "35") (term "0,0"))
                                                                                          (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
                                                                                          (rule "close" (formula "32") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "55"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                                       (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                                       (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                                       (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "36"))
                                                                                       (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                                       (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                                       (rule "castDel" (formula "51") (term "0,0"))
                                                                                       (rule "castDel" (formula "36") (term "0,0"))
                                                                                       (rule "castDel" (formula "37") (term "0,0"))
                                                                                       (rule "castDel" (formula "35") (term "0,0"))
                                                                                       (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "eqSymm" (formula "9"))
                                                                                       (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "23") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "28") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                                                       (rule "close" (formula "34") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "55"))
                                                                                    (rule "close" (formula "35") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "55"))
                                                                                 (rule "close" (formula "36") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "55"))
                                                                              (rule "close" (formula "37") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "55"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                           (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                           (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "51"))
                                                                           (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "36"))
                                                                           (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "castDel" (formula "51") (term "0,0"))
                                                                           (rule "castDel" (formula "36") (term "0,0"))
                                                                           (rule "castDel" (formula "37") (term "0,0"))
                                                                           (rule "castDel" (formula "35") (term "0,0"))
                                                                           (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "28") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "eqSymm" (formula "9"))
                                                                           (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                           (rule "close" (formula "38") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "55"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                        (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                        (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                         (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                         (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "castDel" (formula "37") (term "0,0"))
                                                                        (rule "castDel" (formula "36") (term "0,0"))
                                                                        (rule "castDel" (formula "35") (term "0,0"))
                                                                        (rule "castDel" (formula "51") (term "0,0"))
                                                                        (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                                        (rule "close" (formula "39") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "55"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                     (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "castDel" (formula "37") (term "0,0"))
                                                                     (rule "castDel" (formula "36") (term "0,0"))
                                                                     (rule "castDel" (formula "35") (term "0,0"))
                                                                     (rule "castDel" (formula "51") (term "0,0"))
                                                                     (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "40") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "55"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                                  (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "castDel" (formula "37") (term "0,0"))
                                                                  (rule "castDel" (formula "36") (term "0,0"))
                                                                  (rule "castDel" (formula "35") (term "0,0"))
                                                                  (rule "castDel" (formula "51") (term "0,0"))
                                                                  (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "41") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "55"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                               (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "castDel" (formula "37") (term "0,0"))
                                                               (rule "castDel" (formula "36") (term "0,0"))
                                                               (rule "castDel" (formula "35") (term "0,0"))
                                                               (rule "castDel" (formula "51") (term "0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                               (rule "close" (formula "42") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "55"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                            (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                            (rule "close" (formula "43") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "55"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                         (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "castDel" (formula "37") (term "0,0"))
                                                         (rule "castDel" (formula "36") (term "0,0"))
                                                         (rule "castDel" (formula "35") (term "0,0"))
                                                         (rule "castDel" (formula "51") (term "0,0"))
                                                         (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                         (rule "close" (formula "44") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "55"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                      (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "castDel" (formula "37") (term "0,0"))
                                                      (rule "castDel" (formula "36") (term "0,0"))
                                                      (rule "castDel" (formula "35") (term "0,0"))
                                                      (rule "castDel" (formula "51") (term "0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                      (rule "close" (formula "45") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "55"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                   (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "castDel" (formula "37") (term "0,0"))
                                                   (rule "castDel" (formula "36") (term "0,0"))
                                                   (rule "castDel" (formula "35") (term "0,0"))
                                                   (rule "castDel" (formula "51") (term "0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                   (rule "close" (formula "46") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "55"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "castDel" (formula "37") (term "0,0"))
                                                (rule "castDel" (formula "36") (term "0,0"))
                                                (rule "castDel" (formula "35") (term "0,0"))
                                                (rule "castDel" (formula "51") (term "0,0"))
                                                (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "18") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "28") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                (rule "close" (formula "47") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "55"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "11") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "castDel" (formula "37") (term "0,0"))
                                             (rule "castDel" (formula "36") (term "0,0"))
                                             (rule "castDel" (formula "35") (term "0,0"))
                                             (rule "castDel" (formula "51") (term "0,0"))
                                             (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                             (rule "close" (formula "48") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "notRight" (formula "55"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                          (rule "close" (formula "49") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "55"))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                       (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "castDel" (formula "50") (term "0,0"))
                                       (rule "castDel" (formula "35") (term "0,0"))
                                       (rule "castDel" (formula "34") (term "0,0"))
                                       (rule "castDel" (formula "36") (term "0,0"))
                                       (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "close" (formula "56") (ifseqformula "11"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "55") (inst "sk=i_3_0"))
                                    (rule "impRight" (formula "55"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "57"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                    (rule "insert_constant_string_value" (formula "53") (term "0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "insert_constant_string_value" (formula "38") (term "0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "castDel" (formula "53") (term "0,0"))
                                    (rule "castDel" (formula "39") (term "0,0"))
                                    (rule "castDel" (formula "38") (term "0,0"))
                                    (rule "castDel" (formula "37") (term "0,0"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "25") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "22") (term "0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "14") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
                                    (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                                    (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "24") (term "0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_and" (formula "24") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "25") (term "0,0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "30") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or" (formula "19") (term "0,0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "lenNonNegative" (formula "11") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "11"))
                                    (rule "commute_or" (formula "12") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "13") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0,0"))
                                    (rule "commute_or_2" (formula "13") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "29") (term "0"))
                                    (rule "castedGetAny" (formula "29") (term "0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "commute_and_2" (formula "24") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "25") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "11") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                    (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                    (rule "castedGetAny" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "cut_direct" (formula "14") (term "1"))
                                    (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "14"))
                                       (rule "lenNonNegative" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                       (rule "lenNonNegative" (formula "23") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "ex_pull_out3" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "27") (term "0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                       (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "16") (inst "t=i_3_0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                       (rule "leq_literals" (formula "16") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                    (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEq" (formula "41") (term "0") (ifseqformula "14"))
                                       (rule "lenNonNegative" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "commute_and" (formula "31") (term "0,0,1,1,0"))
                                       (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                                       (rule "lenNonNegative" (formula "23") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "ex_pull_out3" (formula "26") (term "0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "27") (term "0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "16") (inst "t=i_3_0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                       (rule "leq_literals" (formula "16") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                              )
                              (branch
                                 (rule "castedGetAny" (formula "55") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "castDel" (formula "34") (term "0,0"))
                                 (rule "castDel" (formula "36") (term "0,0"))
                                 (rule "castDel" (formula "50") (term "0,0"))
                                 (rule "castDel" (formula "35") (term "0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                                 (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "nnf_ex2all" (formula "55"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "22") (term "0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_imp2or" (formula "10") (term "0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_and" (formula "23") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_and" (formula "22") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "28") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "lenNonNegative" (formula "9") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "commute_or" (formula "13") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_and_2" (formula "28") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "21") (term "0"))
                                 (rule "castedGetAny" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_or" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "commute_or" (formula "11") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "lenNonNegative" (formula "9") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castedGetAny" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "seqGetAlphaCast" (formula "27") (term "0"))
                                 (rule "castedGetAny" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "cut_direct" (formula "12") (term "0"))
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "12"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "22") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "15") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "lenNonNegative" (formula "21") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21"))
                                    (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "25") (term "0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "24") (term "0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "30") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "12"))
                                    (rule "commute_and_2" (formula "23") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "22") (term "0,1,0"))
                                    (rule "lenNonNegative" (formula "15") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "lenNonNegative" (formula "21") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21"))
                                    (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "25") (term "0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "24") (term "0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "30") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "1") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "leq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch
                              (rule "allRight" (formula "55") (inst "sk=i_1_0"))
                              (rule "impRight" (formula "55"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "57"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "30") (term "0,1,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "insert_constant_string_value" (formula "53") (term "0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "insert_constant_string_value" (formula "38") (term "0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "castDel" (formula "53") (term "0,0"))
                              (rule "castDel" (formula "39") (term "0,0"))
                              (rule "castDel" (formula "38") (term "0,0"))
                              (rule "castDel" (formula "37") (term "0,0"))
                              (rule "applyEq" (formula "30") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "30") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "14") (term "0"))
                              (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "22") (term "0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "14") (term "0"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
                              (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                              (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "nnf_imp2or" (formula "30") (term "1,0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_imp2or" (formula "24") (term "0"))
                              (rule "nnf_imp2or" (formula "25") (term "0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or_2" (formula "20") (term "0"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "commute_or_2" (formula "19") (term "0"))
                              (rule "commute_and" (formula "24") (term "0,0,1,0"))
                              (rule "commute_and" (formula "25") (term "0,0,1,0"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                              (rule "commute_or_2" (formula "12") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or" (formula "20") (term "0,0"))
                              (rule "commute_or_2" (formula "20") (term "0"))
                              (rule "commute_or" (formula "19") (term "0,0"))
                              (rule "commute_or_2" (formula "19") (term "0"))
                              (rule "commute_or_2" (formula "12") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0,0"))
                              (rule "lenNonNegative" (formula "11") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "commute_or" (formula "12") (term "0,0,0"))
                              (rule "commute_or_2" (formula "12") (term "0,0"))
                              (rule "commute_or_2" (formula "12") (term "0"))
                              (rule "commute_or" (formula "13") (term "0,0,0"))
                              (rule "commute_or_2" (formula "13") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "seqGetAlphaCast" (formula "29") (term "0"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "seqGetAlphaCast" (formula "18") (term "0"))
                              (rule "castedGetAny" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "commute_and_2" (formula "24") (term "0,1,0"))
                              (rule "commute_and_2" (formula "25") (term "0,1,0"))
                              (rule "lenNonNegative" (formula "11") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                              (rule "seqGetAlphaCast" (formula "23") (term "0"))
                              (rule "castedGetAny" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "cut_direct" (formula "14") (term "1"))
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "14"))
                                 (rule "lenNonNegative" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "lenNonNegative" (formula "18") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "26") (term "0"))
                                 (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                 (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "27") (term "0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                 (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "14"))
                                 (rule "lenNonNegative" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "lenNonNegative" (formula "18") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "26") (term "0"))
                                 (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                 (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "27") (term "0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "32") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "32") (term "0,1,0"))
                                 (rule "commute_or" (formula "32") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "32") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "32") (term "1,0,0,1,0"))
                                 (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                           )
                        )
                        (branch
                           (rule "allRight" (formula "55") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "55"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "57"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                           (rule "eqSymm" (formula "14") (term "1"))
                           (rule "applyEq" (formula "22") (term "0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                           (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "insert_constant_string_value" (formula "53") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "insert_constant_string_value" (formula "38") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "castDel" (formula "37") (term "0,0"))
                           (rule "castDel" (formula "39") (term "0,0"))
                           (rule "castDel" (formula "53") (term "0,0"))
                           (rule "castDel" (formula "38") (term "0,0"))
                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "0,1,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "14") (term "0"))
                           (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "14") (term "0"))
                           (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                           (rule "eqSymm" (formula "14") (term "1"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                           (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "1,0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "25") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or" (formula "24") (term "0,0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_and" (formula "24") (term "0,0,1,0"))
                           (rule "commute_or" (formula "25") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "1") (term "0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commute_and" (formula "25") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "commute_or" (formula "30") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or" (formula "19") (term "0,0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "12") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "lenNonNegative" (formula "27") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "27"))
                           (rule "commute_or" (formula "12") (term "0,0,0"))
                           (rule "commute_or_2" (formula "12") (term "0,0"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "commute_or" (formula "13") (term "0,0,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "seqGetAlphaCast" (formula "23") (term "0"))
                           (rule "castedGetAny" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "seqGetAlphaCast" (formula "29") (term "0"))
                           (rule "castedGetAny" (formula "29") (term "0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "lenNonNegative" (formula "11") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                           (rule "commute_and_2" (formula "24") (term "0,1,0"))
                           (rule "commute_and_2" (formula "25") (term "0,1,0"))
                           (rule "seqGetAlphaCast" (formula "18") (term "0"))
                           (rule "castedGetAny" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "14"))
                              (rule "lenNonNegative" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "lenNonNegative" (formula "23") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                              (rule "lenNonNegative" (formula "18") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "ex_pull_out3" (formula "27") (term "0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                              (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "22") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1"))
                              (rule "leq_literals" (formula "22") (term "0,1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "14"))
                              (rule "lenNonNegative" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "lenNonNegative" (formula "23") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "commute_and" (formula "32") (term "0,0,1,1,0"))
                              (rule "commute_and_2" (formula "32") (term "0,1,1,0"))
                              (rule "lenNonNegative" (formula "18") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "ex_pull_out3" (formula "27") (term "0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                              (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "22") (inst "t=i_0_0"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "22"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                     (branch
                        (rule "castedGetAny" (formula "55") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "0"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "1"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "castDel" (formula "34") (term "0,0"))
                        (rule "castDel" (formula "36") (term "0,0"))
                        (rule "castDel" (formula "50") (term "0,0"))
                        (rule "castDel" (formula "35") (term "0,0"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "0"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                        (rule "eqSymm" (formula "11") (term "1"))
                        (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                        (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                        (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "nnf_ex2all" (formula "55"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "28") (term "1,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_and" (formula "23") (term "0,0,1,0"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "commute_and" (formula "22") (term "0,0,1,0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "lenNonNegative" (formula "9") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "9"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "18") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_and_2" (formula "28") (term "0,1,1,0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "10") (term "0,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "21") (term "0"))
                        (rule "castedGetAny" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "commute_or" (formula "10") (term "0,0,0"))
                        (rule "commute_or_2" (formula "10") (term "0,0"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or" (formula "11") (term "0,0,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "lenNonNegative" (formula "9") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "9"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                        (rule "seqGetAlphaCast" (formula "16") (term "0"))
                        (rule "castedGetAny" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "seqGetAlphaCast" (formula "27") (term "0"))
                        (rule "castedGetAny" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "cut_direct" (formula "12") (term "0"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "12"))
                           (rule "commute_and_2" (formula "23") (term "0,1,0"))
                           (rule "commute_and_2" (formula "22") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "15") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "lenNonNegative" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "21"))
                           (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "25") (term "0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                           (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                           (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "24") (term "0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                           (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                           (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "30") (term "1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "closeFalse" (formula "21"))
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "12"))
                           (rule "commute_and_2" (formula "23") (term "0,1,0"))
                           (rule "commute_and_2" (formula "22") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "15") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "lenNonNegative" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "21"))
                           (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "25") (term "0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                           (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                           (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "24") (term "0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                           (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                           (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "30") (term "1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "55"))
                     (branch
                        (rule "castedGetAny" (formula "55") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "8"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "insert_constant_string_value" (formula "36") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "insert_constant_string_value" (formula "34") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "insert_constant_string_value" (formula "35") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "castDel" (formula "36") (term "0,0"))
                        (rule "castDel" (formula "50") (term "0,0"))
                        (rule "castDel" (formula "34") (term "0,0"))
                        (rule "castDel" (formula "35") (term "0,0"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "8"))
                        (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
                        (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
                        (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "nnf_ex2all" (formula "55"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "28") (term "1,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or" (formula "28") (term "0,0"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_and" (formula "22") (term "0,0,1,0"))
                        (rule "commute_and" (formula "23") (term "0,0,1,0"))
                        (rule "commute_and_2" (formula "28") (term "0,1,1,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "lenNonNegative" (formula "25") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "25"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "commute_or" (formula "18") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "10") (term "0,0"))
                        (rule "commute_or_2" (formula "11") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "16") (term "0"))
                        (rule "castedGetAny" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "seqGetAlphaCast" (formula "21") (term "0"))
                        (rule "castedGetAny" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "cut_direct" (formula "12") (term "1"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN TRUE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "12"))
                           (rule "seqGetAlphaCast" (formula "27") (term "0"))
                           (rule "castedGetAny" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "commute_or" (formula "10") (term "0,0,0"))
                           (rule "commute_or_2" (formula "10") (term "0,0"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or" (formula "11") (term "0,0,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0"))
                           (rule "commute_or_2" (formula "11") (term "0"))
                           (rule "lenNonNegative" (formula "9") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                           (rule "commute_and_2" (formula "22") (term "0,1,0"))
                           (rule "commute_and_2" (formula "23") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "15") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "lenNonNegative" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "21"))
                           (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "24") (term "0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                           (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                           (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "25") (term "0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                           (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                           (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "30") (term "1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "29"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MIN FALSE"
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "12"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
                           (rule "eqSymm" (formula "29"))
                           (rule "seqGetAlphaCast" (formula "27") (term "0"))
                           (rule "castedGetAny" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "commute_or" (formula "10") (term "0,0,0"))
                           (rule "commute_or_2" (formula "10") (term "0,0"))
                           (rule "commute_or_2" (formula "10") (term "0"))
                           (rule "commute_or" (formula "11") (term "0,0,0"))
                           (rule "commute_or_2" (formula "11") (term "0,0"))
                           (rule "commute_or_2" (formula "11") (term "0"))
                           (rule "lenNonNegative" (formula "9") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                           (rule "commute_and_2" (formula "22") (term "0,1,0"))
                           (rule "commute_and_2" (formula "23") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "15") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "lenNonNegative" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "21"))
                           (rule "commute_and" (formula "30") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "30") (term "0,1,1,0"))
                           (rule "ex_pull_out3" (formula "24") (term "0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                           (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                           (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "25") (term "0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                           (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                           (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "30") (term "1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
                           (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "closeFalse" (formula "27"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "55") (inst "sk=i_2"))
                        (rule "impRight" (formula "55"))
                        (rule "andLeft" (formula "1"))
                        (rule "impRight" (formula "57"))
                        (rule "castedGetAny" (formula "58") (term "0,0,1,1,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "castedGetAny" (formula "58") (term "0,1,0"))
                        (rule "castedGetAny" (formula "58") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "30") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "58") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "22") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                        (rule "eqSymm" (formula "14") (term "1"))
                        (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                        (rule "eqSymm" (formula "14") (term "0"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "0,1,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "28") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "20") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                        (rule "insert_constant_string_value" (formula "38") (term "0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "insert_constant_string_value" (formula "53") (term "0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "insert_constant_string_value" (formula "37") (term "0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "insert_constant_string_value" (formula "39") (term "0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "castDel" (formula "38") (term "0,0"))
                        (rule "castDel" (formula "53") (term "0,0"))
                        (rule "castDel" (formula "37") (term "0,0"))
                        (rule "castDel" (formula "39") (term "0,0"))
                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "5"))
                        (rule "eqSymm" (formula "14") (term "0"))
                        (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "5"))
                        (rule "eqSymm" (formula "14") (term "1"))
                        (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "11"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,1,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "12") (term "0,0,0"))
                        (rule "leq_literals" (formula "12") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_ex2all" (formula "58"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "31") (term "1,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "commute_or" (formula "25") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "seqGetAlphaCast" (formula "2") (term "0"))
                        (rule "castedGetAny" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "commute_and" (formula "25") (term "0,0,1,0"))
                        (rule "commute_and" (formula "26") (term "0,0,1,0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "lenNonNegative" (formula "28") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "28"))
                        (rule "charLiteral_to_int" (formula "1") (term "1,1,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "lenNonNegative" (formula "12") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                        (rule "commute_and_2" (formula "31") (term "0,1,1,0"))
                        (rule "seqGetAlphaCast" (formula "24") (term "0"))
                        (rule "castedGetAny" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "commute_or" (formula "20") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "30") (term "0"))
                        (rule "castedGetAny" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or_2" (formula "20") (term "0"))
                        (rule "seqGetAlphaCast" (formula "19") (term "0"))
                        (rule "castedGetAny" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX TRUE"
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "15"))
                           (rule "commute_or" (formula "13") (term "0,0,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "14") (term "0,0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "lenNonNegative" (formula "18") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "commute_and_2" (formula "27") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "24") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                           (rule "seqGetAlphaCast" (formula "1") (term "0,0,0,1,0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "33") (term "1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "33") (term "0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0"))
                           (rule "commute_or_2" (formula "33") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "lenNonNegative" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "commute_and" (formula "28") (term "0,0,0"))
                           (rule "commute_and_2" (formula "34") (term "0,0"))
                           (rule "commute_and_2" (formula "28") (term "0,0"))
                           (rule "commute_and" (formula "29") (term "0,0,0"))
                           (rule "commute_and_2" (formula "29") (term "0,0"))
                           (rule "allLeft" (formula "22") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                           (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "28"))
                           (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "22"))
                           (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "1,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,0") (ifseqformula "18"))
                           (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "allLeft" (formula "44") (inst "t=i_1"))
                           (rule "exLeft" (formula "44") (inst "sk=i_3"))
                           (rule "andLeft" (formula "44"))
                           (rule "andLeft" (formula "44"))
                           (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                           (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "42"))
                           (rule "eqSymm" (formula "46") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "46") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1"))
                           (rule "leq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                           (rule "add_literals" (formula "46") (term "0,0,1"))
                           (rule "leq_literals" (formula "46") (term "0,1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "18"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "53") (inst "t=i_0"))
                           (rule "exLeft" (formula "53") (inst "sk=j_0"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "52"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "52"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "52"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "55") (term "1"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,1"))
                           (rule "mul_literals" (formula "55") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "49"))
                           (rule "qeq_literals" (formula "54") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "49"))
                           (rule "qeq_literals" (formula "53") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "49"))
                           (rule "qeq_literals" (formula "55") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "51"))
                           (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                           (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0,0"))
                           (rule "leq_literals" (formula "54") (term "0,0"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "51"))
                           (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                           (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "53") (term "0,0,0"))
                           (rule "leq_literals" (formula "53") (term "0,0"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "inEqSimp_contradInEq1" (formula "55") (term "0") (ifseqformula "51"))
                           (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0,0"))
                           (rule "leq_literals" (formula "55") (term "0,0"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "allLeft" (formula "56") (inst "t=i_2"))
                           (rule "exLeft" (formula "56") (inst "sk=j_1"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "56"))
                           (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                           (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                           (rule "mul_literals" (formula "58") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "56") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "58") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "57") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                           (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "56") (term "0,0,0"))
                           (rule "leq_literals" (formula "56") (term "0,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                           (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "58") (term "0,0,0"))
                           (rule "leq_literals" (formula "58") (term "0,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                           (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,0"))
                           (rule "leq_literals" (formula "57") (term "0,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "19"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "20"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "16") (inst "t=j_1"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "60"))
                           (rule "qeq_literals" (formula "16") (term "0,1"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "59"))
                           (rule "qeq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "61"))
                           (rule "andLeft" (formula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "leq_literals" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                        (branch "CUT: de.polyas.core3.open.cred.CredTool.polyasMode = de.polyas.core3.open.cred.CredTool.FieldsForPolyasMode.MAX FALSE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
                           (rule "commute_or" (formula "13") (term "0,0,0"))
                           (rule "commute_or_2" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "14") (term "0,0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "lenNonNegative" (formula "18") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "commute_and_2" (formula "26") (term "0,1,0"))
                           (rule "commute_and_2" (formula "27") (term "0,1,0"))
                           (rule "lenNonNegative" (formula "24") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "commute_and" (formula "33") (term "0,0,1,1,0"))
                           (rule "commute_and_2" (formula "33") (term "0,1,1,0"))
                           (rule "seqGetAlphaCast" (formula "1") (term "0,0,0,1,0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ex_pull_out3" (formula "27") (term "0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "33") (term "1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,1,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,1,0"))
                           (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "33") (term "0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0"))
                           (rule "commute_or_2" (formula "33") (term "1,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "33") (term "0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "33") (term "0,1,0,0,0"))
                           (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "lenNonNegative" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "commute_and" (formula "28") (term "0,0,0"))
                           (rule "commute_and_2" (formula "34") (term "0,0"))
                           (rule "commute_and_2" (formula "28") (term "0,0"))
                           (rule "commute_and" (formula "29") (term "0,0,0"))
                           (rule "commute_and_2" (formula "29") (term "0,0"))
                           (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "22"))
                           (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "allLeft" (formula "22") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                           (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "28"))
                           (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "65"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "9"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "1,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "72"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "16"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "43") (inst "t=i_1"))
                           (rule "exLeft" (formula "43") (inst "sk=i_3"))
                           (rule "andLeft" (formula "43"))
                           (rule "andLeft" (formula "43"))
                           (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                           (rule "applyEq" (formula "45") (term "0,0,0") (ifseqformula "41"))
                           (rule "eqSymm" (formula "45") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1"))
                           (rule "leq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "40"))
                           (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                           (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                           (rule "add_literals" (formula "44") (term "0,0,1"))
                           (rule "leq_literals" (formula "44") (term "0,1"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "38"))
                           (rule "qeq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "allLeft" (formula "51") (inst "t=i_0"))
                           (rule "exLeft" (formula "51") (inst "sk=j_0"))
                           (rule "andLeft" (formula "51"))
                           (rule "andLeft" (formula "51"))
                           (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "replace_known_left" (formula "51") (term "0,0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                           (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1"))
                           (rule "mul_literals" (formula "53") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "47"))
                           (rule "qeq_literals" (formula "53") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "47"))
                           (rule "qeq_literals" (formula "52") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "47"))
                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "49"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0"))
                           (rule "leq_literals" (formula "52") (term "0,0"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "49"))
                           (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                           (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "53") (term "0,0,0"))
                           (rule "leq_literals" (formula "53") (term "0,0"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "49"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0,0"))
                           (rule "leq_literals" (formula "51") (term "0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "18"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "1,0,0") (ifseqformula "19"))
                           (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "75"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "allLeft" (formula "56") (inst "t=i_2"))
                           (rule "exLeft" (formula "56") (inst "sk=j_1"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "56"))
                           (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "58") (term "1"))
                           (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                           (rule "mul_literals" (formula "58") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "57") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
                           (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "56") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1,0"))
                           (rule "add_literals" (formula "58") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "58") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "58") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "56") (term "0,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                           (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,0"))
                           (rule "leq_literals" (formula "57") (term "0,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "58") (term "0,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "19"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "20"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "16") (inst "t=j_1"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "59"))
                           (rule "qeq_literals" (formula "16") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "61"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "60"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                     )
                  )
               )
            )
         )
      )
   )
   (branch
      (rule "andRight" (formula "55"))
      (branch
         (rule "andRight" (formula "55"))
         (branch
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "11") (term "0"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "close" (formula "55") (ifseqformula "1"))
         )
         (branch
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "16") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,1,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "19") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "2"))
            (rule "eqSymm" (formula "11") (term "0"))
            (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "27") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
            (rule "close" (formula "55") (ifseqformula "5"))
         )
      )
      (branch
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "27") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "21") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
         (rule "close" (formula "55") (ifseqformula "6"))
      )
   )
)
)
}
