\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Nov 09 20:56:25 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Nov 09 20:56:25 CET 2019
contract=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:bytesToHexString([B)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:bytesToHexString([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))
(keyLog "1" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "80810")

(branch "dummy ID"
(rule "expand_inByte" (formula "1") (term "1,0,1,1,0") (newnames "bytes,result,exc,heapAtPre,o,f"))
(rule "replace_byte_MIN" (formula "1") (term "0,1,1,0,1,1,0"))
(rule "replace_byte_MAX" (formula "1") (term "1,0,1,0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "commute_and" (formula "4") (term "0,0"))
(rule "commute_and" (formula "4") (term "1,0"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_bytesToHexString,savedHeapBefore_bytesToHexString,_bytes_2Before_bytesToHexString,first4BitsBefore_bytesToHexString,second4BitsBefore_bytesToHexString,xBefore_bytesToHexString,bBefore_bytesToHexString"))
 (builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "r_5"))
(rule "instanceCreationAssignmentUnfoldArguments" (formula "6") (term "1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "var"))
(rule "compound_multiplication_1" (formula "6") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "6") (term "1"))
(branch "Normal Execution (_bytes_2 != null)"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
   (rule "false_right" (formula "6"))
   (rule "assignmentMultiplicationInt" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaMulInt" (formula "6") (term "0,1,0"))
   (rule "expand_mulJint" (formula "6") (term "0,1,0"))
   (rule "expand_moduloInteger" (formula "6") (term "0,1,0"))
   (rule "replace_int_RANGE" (formula "6") (term "1,1,0,1,0"))
   (rule "replace_int_HALFRANGE" (formula "6") (term "0,0,1,0,1,0"))
   (rule "replace_int_MIN" (formula "6") (term "0,0,1,0"))
   (rule "arrayLengthNotNegative" (formula "4") (term "1,0,0,0"))
   (rule "arrayLengthIsAnInt" (formula "5") (term "1,0,0,0"))
   (rule "expand_inInt" (formula "5"))
   (rule "replace_int_MAX" (formula "5") (term "1,0"))
   (rule "replace_int_MIN" (formula "5") (term "0,1"))
   (rule "andLeft" (formula "5"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "instanceCreationAssignment" (formula "9") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "s"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=s_1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "s_1"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=s_2"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "s_2"))
   (rule "allocateInstance" (formula "9"))
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "assignment_write_attribute_this" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallWithinClass" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment_write_attribute_this" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "12") (term "1"))
   (rule "methodCallReturn" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "eval_order_access4_this" (formula "12") (term "1") (inst "#v1=s"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "s_3"))
   (rule "stringAssignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "1"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "eqSymm" (formula "10"))
   (rule "dismissNonSelectedField" (formula "1") (term "0"))
   (rule "dismissNonSelectedField" (formula "1") (term "0"))
   (rule "assignment_write_attribute_this" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "castDel" (formula "1") (term "1,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "eqSymm" (formula "1") (term "1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "methodCallEmpty" (formula "14") (term "1"))
   (rule "blockEmpty" (formula "14") (term "1"))
   (rule "assignment_write_attribute" (formula "14") (term "1"))
   (branch "Normal Execution (s != null)"
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
      (rule "false_right" (formula "14"))
      (rule "assignment" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "blockEmpty" (formula "14") (term "1"))
      (rule "for_to_while" (formula "14") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "i"))
      (rule "assignment" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
       (builtin "Loop Invariant" (formula "14") (newnames "variant,b_5,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (rule "andRight" (formula "14"))
         (branch ""
            (rule "andRight" (formula "14"))
            (branch ""
                (builtin "One Step Simplification" (formula "14"))
               (rule "notRight" (formula "14"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_StringBuilder_str_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "1"))
               (rule "close" (formula "10") (ifseqformula "1"))
            )
            (branch ""
               (rule "andRight" (formula "14"))
               (branch ""
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "leq_literals" (formula "14"))
                  (rule "closeTrue" (formula "14"))
               )
               (branch ""
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_leqRight" (formula "14"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch ""
             (builtin "One Step Simplification" (formula "14"))
            (rule "wellFormedStorePrimitive" (formula "14"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
            (rule "leq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "wellFormedStoreObject" (formula "13"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "wellFormedCreate" (formula "13") (term "0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "13") (term "0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "13") (term "0,1,1"))
            (rule "eqSymm" (formula "13") (term "0,1"))
            (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "9")) (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "13"))
         )
      )
      (branch "Body Preserves Invariant"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "expand_inInt" (formula "11") (term "1"))
         (rule "replace_int_MIN" (formula "11") (term "0,1,1"))
         (rule "replace_int_MAX" (formula "11") (term "1,0,1"))
         (rule "impRight" (formula "16"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0"))
         (rule "elementOfSingleton" (formula "21") (term "0,0,0,0,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_5_1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "exc_174"))
         (rule "assignment" (formula "21") (term "1"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "thrownExc"))
         (rule "blockThrow" (formula "21") (term "1,0,0,1"))
         (rule "blockThrow" (formula "21") (term "1,0,0,1"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_StringBuilder_str_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "expand_subJint" (formula "21") (term "0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "21") (term "0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0,1,1,1,0,1"))
         (rule "expand_subJint" (formula "21") (term "0,1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "21") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,0,1,1,1,0,0"))
         (rule "expand_moduloInteger" (formula "21") (term "0,1,1,1,0,1"))
         (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1,1,1,0,1"))
         (rule "replace_int_MIN" (formula "21") (term "0,0,1,1,1,0,1"))
         (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,1,1,0,1"))
         (rule "expand_moduloInteger" (formula "21") (term "0,1,1,1,0,0"))
         (rule "replace_int_RANGE" (formula "21") (term "1,1,0,1,1,1,0,0"))
         (rule "replace_int_HALFRANGE" (formula "21") (term "0,0,1,0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "21") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,1,1,0,0"))
         (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
         (rule "assignment" (formula "15") (term "1"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
         (rule "assignment_read_length" (formula "15") (term "1"))
         (branch "Normal Execution (_bytes_2 != null)"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")))
            (rule "false_right" (formula "15"))
            (rule "less_than_comparison_simple" (formula "15") (term "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "emptyModality" (formula "15") (term "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "notRight" (formula "15"))
            (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x_1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_3"))
            (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v0=x_4") (inst "#v1=x_5"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_4"))
            (rule "assignment" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_5"))
            (rule "assignment_read_length" (formula "21") (term "1"))
            (branch "Normal Execution (_bytes_2 != null)"
                (builtin "One Step Simplification" (formula "22"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
               (rule "false_right" (formula "21"))
               (rule "less_than_comparison_simple" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "replace_known_left" (formula "21") (term "0,0,1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "ifSplit" (formula "21"))
               (branch "if x_3 true"
                   (builtin "One Step Simplification" (formula "22"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "b_6"))
                  (rule "assignment_array2" (formula "21") (term "1"))
                  (branch "Normal Execution (_bytes_2 != null)"
                      (builtin "One Step Simplification" (formula "22"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
                     (rule "orRight" (formula "21"))
                     (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "variableDeclarationAssign" (formula "24") (term "1"))
                     (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "24") (term "1"))
                      (builtin "One Step Simplification" (formula "24"))
                      (builtin "Block Contract (Internal)" (formula "24") (newnames "result#9,exc#10,heap_Before_BLOCK,savedHeap_Before_BLOCK,x_Before_BLOCK#11,o,f,anonOut_x_6"))
                     (branch "Validity"
                         (builtin "One Step Simplification" (formula "17"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "expand_inInt" (formula "17") (term "0,1"))
                        (rule "expand_inByte" (formula "17") (term "1,1"))
                        (rule "replace_int_MAX" (formula "17") (term "1,0,0,1"))
                        (rule "replace_int_MIN" (formula "17") (term "0,1,0,1"))
                        (rule "replace_byte_MIN" (formula "17") (term "0,1,1,1"))
                        (rule "replace_byte_MAX" (formula "17") (term "1,0,1,1"))
                        (rule "leq_literals" (formula "17") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "leq_literals" (formula "17") (term "0,1"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "18"))
                        (rule "eqSymm" (formula "27") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "variableDeclarationAssign" (formula "27") (term "1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "exc#10_1"))
                        (rule "assignment" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "27") (term "0,1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x_7"))
                        (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_7"))
                        (rule "less_than_comparison_simple" (formula "26") (term "1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifElseSplit" (formula "27"))
                        (branch "if x_7 true"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "assignmentAdditionInt" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                           (rule "expand_addJint" (formula "28") (term "0,1,0"))
                           (rule "expand_moduloInteger" (formula "28") (term "0,1,0"))
                           (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0,1,0"))
                           (rule "replace_int_RANGE" (formula "28") (term "1,1,0,1,0"))
                           (rule "replace_int_MIN" (formula "28") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1,0"))
                           (rule "add_literals" (formula "28") (term "0,0,1,0,1,0"))
                           (rule "tryEmpty" (formula "28") (term "1"))
                           (rule "blockEmptyLabel" (formula "28") (term "1"))
                           (rule "blockEmpty" (formula "28") (term "1"))
                           (rule "methodCallEmpty" (formula "28") (term "1"))
                           (rule "emptyModality" (formula "28") (term "1"))
                           (rule "andRight" (formula "28"))
                           (branch ""
                              (rule "andRight" (formula "28"))
                              (branch ""
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeTrue" (formula "28"))
                              )
                              (branch ""
                                 (rule "andRight" (formula "28"))
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "13") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "13") (term "0"))
                                    (rule "distr_forallAnd" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "commute_or" (formula "14") (term "0"))
                                    (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "21"))
                                    (rule "greater_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "13") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "13") (term "0"))
                                    (rule "distr_forallAnd" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "commute_or" (formula "14") (term "0"))
                                    (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "21"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0"))
                                    (rule "greater_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "closeTrue" (formula "28"))
                           )
                        )
                        (branch "if x_7 false"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "tryEmpty" (formula "28") (term "1"))
                           (rule "blockEmptyLabel" (formula "28") (term "1"))
                           (rule "blockEmpty" (formula "28") (term "1"))
                           (rule "methodCallEmpty" (formula "28") (term "1"))
                           (rule "emptyModality" (formula "28") (term "1"))
                           (rule "andRight" (formula "28"))
                           (branch ""
                              (rule "andRight" (formula "28"))
                              (branch ""
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeTrue" (formula "28"))
                              )
                              (branch ""
                                 (rule "andRight" (formula "28"))
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_ltRight" (formula "20"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "close" (formula "28") (ifseqformula "1"))
                                 )
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "21"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "closeTrue" (formula "28"))
                           )
                        )
                     )
                     (branch "Precondition"
                        (rule "andRight" (formula "24"))
                        (branch ""
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "wellFormedAnon" (formula "24"))
                           (rule "wellFormedStorePrimitive" (formula "24") (term "0"))
                           (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_ltRight" (formula "23"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "13"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "wellFormedStoreObject" (formula "19"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "wellFormedCreate" (formula "19") (term "0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "19") (term "0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "19") (term "0,1,1"))
                           (rule "eqSymm" (formula "19") (term "0,1"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")) (ifInst ""  (formula "3")))
                           (rule "closeTrue" (formula "19"))
                        )
                        (branch ""
                           (rule "andRight" (formula "24"))
                           (branch ""
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "expand_inInt" (formula "24"))
                              (rule "replace_int_MAX" (formula "24") (term "1,0"))
                              (rule "replace_int_MIN" (formula "24") (term "0,1"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "leq_literals" (formula "24"))
                              (rule "closeTrue" (formula "24"))
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "expand_inByte" (formula "24"))
                              (rule "replace_byte_MIN" (formula "24") (term "0,1"))
                              (rule "replace_byte_MAX" (formula "24") (term "1,0"))
                              (rule "inEqSimp_leqRight" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltRight" (formula "23"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "12"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "16")))
                              (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                              (rule "commute_and" (formula "18"))
                              (rule "commute_or" (formula "10") (term "0,0"))
                              (rule "cnf_rightDist" (formula "10") (term "0"))
                              (rule "distr_forallAnd" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "commute_or" (formula "11") (term "0"))
                              (rule "allLeft" (formula "10") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "10") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "10") (term "0,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "allLeft" (formula "12") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "12") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "12") (term "0,1"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "25"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "expand_inInt" (formula "17") (term "0,0,1"))
                        (rule "replace_int_MIN" (formula "17") (term "0,1,0,0,1"))
                        (rule "replace_int_MAX" (formula "17") (term "1,0,0,0,1"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "18"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "18"))
                        (rule "inEqSimp_commuteLeq" (formula "21"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "21") (term "0,0,1") (inst "selectSK=java_lang_Object_created__2"))
                        (rule "simplifySelectOfCreate" (formula "21"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
                        (rule "castDel" (formula "21") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "21") (term "0,0"))
                        (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,1") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "shift_paren_or" (formula "21"))
                        (rule "ifUnfold" (formula "29") (term "1") (inst "#boolv=x_7"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_7"))
                        (rule "inequality_comparison_simple" (formula "29") (term "1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_left" (formula "29") (term "0,0,1,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifSplit" (formula "30"))
                        (branch "if x_7 true"
                            (builtin "One Step Simplification" (formula "31"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_7 false"
                            (builtin "One Step Simplification" (formula "31"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "30") (term "1"))
                           (rule "variableDeclarationAssign" (formula "30") (term "1"))
                           (rule "variableDeclaration" (formula "30") (term "1") (newnames "first4Bits"))
                           (rule "assignment" (formula "30") (term "1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "variableDeclarationAssign" (formula "30") (term "1"))
                           (rule "variableDeclaration" (formula "30") (term "1") (newnames "second4Bits"))
                           (rule "assignment" (formula "30") (term "1"))
                            (builtin "One Step Simplification" (formula "30"))
                            (builtin "Block Contract (Internal)" (formula "30") (newnames "result#2,exc#3,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,second4Bits_Before_BLOCK#4,first4Bits_Before_BLOCK#5,o,f,anonOut_second4Bits,anonOut_first4Bits"))
                           (branch "Validity"
                               (builtin "One Step Simplification" (formula "31"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "expand_inInt" (formula "23") (term "1,1"))
                              (rule "expand_inInt" (formula "23") (term "1,0,1"))
                              (rule "expand_inInt" (formula "23") (term "0,0,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,0,0,1"))
                              (rule "leq_literals" (formula "23") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                              (rule "leq_literals" (formula "23") (term "1,0,0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "leq_literals" (formula "23") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "leq_literals" (formula "23") (term "1,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "eqSymm" (formula "32") (term "1,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "24"))
                              (rule "variableDeclarationAssign" (formula "31") (term "1"))
                              (rule "variableDeclaration" (formula "31") (term "1") (newnames "exc#3_1"))
                              (rule "assignment" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "compound_modulo_1" (formula "31") (term "1") (inst "#v=x_7"))
                              (rule "variableDeclarationAssign" (formula "31") (term "1"))
                              (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_8"))
                              (rule "remove_parentheses_right" (formula "31") (term "1"))
                              (rule "compound_division_1" (formula "31") (term "1") (inst "#v=x_9"))
                              (rule "variableDeclarationAssign" (formula "31") (term "1"))
                              (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_9"))
                              (rule "remove_parentheses_right" (formula "31") (term "1"))
                              (rule "assignment" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "assignmentDivisionInt" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "equal_literals" (formula "31") (term "0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "translateJavaDivInt" (formula "31") (term "0,1,0"))
                              (rule "expand_divJint" (formula "31") (term "0,1,0"))
                              (rule "expand_moduloInteger" (formula "31") (term "0,1,0"))
                              (rule "replace_int_MIN" (formula "31") (term "0,0,1,0"))
                              (rule "replace_int_RANGE" (formula "31") (term "1,1,0,1,0"))
                              (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,0,1,0"))
                              (rule "assignmentModulo" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "equal_literals" (formula "31") (term "0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "translateJavaMod" (formula "31") (term "0,1,0"))
                              (rule "remove_parentheses_right" (formula "31") (term "1"))
                              (rule "compound_modulo_1" (formula "31") (term "1") (inst "#v=x_7"))
                              (rule "variableDeclarationAssign" (formula "31") (term "1"))
                              (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_10"))
                              (rule "remove_parentheses_right" (formula "31") (term "1"))
                              (rule "assignment" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "assignmentModulo" (formula "31") (term "1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "equal_literals" (formula "31") (term "0,0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "translateJavaMod" (formula "31") (term "0,1,0"))
                              (rule "tryEmpty" (formula "31") (term "1"))
                              (rule "blockEmptyLabel" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "emptyModality" (formula "31") (term "1"))
                              (rule "andRight" (formula "31"))
                              (branch ""
                                 (rule "andRight" (formula "31"))
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "closeTrue" (formula "31"))
                                 )
                                 (branch ""
                                    (rule "andRight" (formula "31"))
                                    (branch ""
                                       (rule "andRight" (formula "31"))
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or" (formula "13") (term "0"))
                                          (rule "jdiv_axiom" (formula "1") (term "1,0,1,0,0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,1,0,0") (ifseqformula "1"))
                                          (rule "cut_direct" (formula "20") (term "0,0"))
                                          (branch "CUT: result#9 = null TRUE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "5") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "21") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "div_axiom" (formula "6") (term "0,1,0,0") (inst "quotient=quotient_1"))
                                             (rule "equal_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "qeq_literals" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                             (rule "add_literals" (formula "8") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "8") (term "1"))
                                             (rule "add_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "jmod_axiom" (formula "9") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "26") (term "0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "7"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                             (rule "qeq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "7") (term "1,1"))
                                             (rule "add_zero_right" (formula "7") (term "1"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "25"))
                                             (rule "applyEqRigid" (formula "9") (term "0,0,0,0,0") (ifseqformula "25"))
                                             (rule "times_zero_2" (formula "9") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "25"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "7"))
                                             (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                             (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                             (rule "equal_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "qeq_literals" (formula "7") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "polySimp_addComm1" (formula "9") (term "1"))
                                             (rule "add_literals" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "mul_literals" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "11"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_zero_right" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                          (branch "CUT: result#9 = null FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "5") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "div_axiom" (formula "6") (term "0,1,0,0") (inst "quotient=quotient_1"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "6") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "equal_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                             (rule "add_literals" (formula "8") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "8") (term "1"))
                                             (rule "add_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "jmod_axiom" (formula "9") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "25") (term "0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                             (rule "mul_literals" (formula "25") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "26"))
                                             (rule "mul_literals" (formula "8") (term "1,1"))
                                             (rule "add_literals" (formula "8") (term "1"))
                                             (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                             (rule "qeq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "25"))
                                             (rule "times_zero_2" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "25"))
                                             (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "1,0,1"))
                                             (rule "add_literals" (formula "9") (term "0,1"))
                                             (rule "applyEqRigid" (formula "9") (term "0,0,0,0,0") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result#9.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                                (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                                (rule "equal_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "qeq_literals" (formula "7") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "11"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "leq_literals" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                             (branch "CUT: result#9.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                                (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "equal_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1,1,1"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                (rule "mul_literals" (formula "9") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "8"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0"))
                                                (rule "leq_literals" (formula "11"))
                                                (rule "closeFalse" (formula "11"))
                                             )
                                          )
                                       )
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or" (formula "13") (term "0"))
                                          (rule "jdiv_axiom" (formula "1") (term "1,0,1,0,0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,1,0,0") (ifseqformula "1"))
                                          (rule "cut_direct" (formula "20") (term "0,0"))
                                          (branch "CUT: result#9 = null TRUE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEqRigid" (formula "5") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "22") (term "0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "22") (term "0,0"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "div_axiom" (formula "6") (term "0,1,0,0") (inst "quotient=quotient_1"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                             (rule "equal_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "qeq_literals" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                             (rule "add_literals" (formula "8") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "8") (term "1"))
                                             (rule "add_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "jmod_axiom" (formula "9") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "25") (term "0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                             (rule "mul_literals" (formula "25") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "leq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "26"))
                                             (rule "mul_literals" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "25"))
                                             (rule "applyEqRigid" (formula "9") (term "0,1,0,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,1"))
                                             (rule "applyEqRigid" (formula "9") (term "0,0,0,0,0") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "7"))
                                             (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                             (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "equal_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "polySimp_addComm1" (formula "9") (term "1"))
                                             (rule "add_literals" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "mul_literals" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "9"))
                                             (rule "andLeft" (formula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "closeFalse" (formula "11"))
                                          )
                                          (branch "CUT: result#9 = null FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEqRigid" (formula "5") (term "1,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "mod_axiom" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "leq_literals" (formula "21") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(5(1(#)))"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "div_axiom" (formula "6") (term "0,1,0,0") (inst "quotient=quotient_1"))
                                             (rule "equal_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "qeq_literals" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                             (rule "add_literals" (formula "8") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "8") (term "1"))
                                             (rule "add_literals" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "jmod_axiom" (formula "9") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "26") (term "0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "7"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "26"))
                                             (rule "mul_literals" (formula "8") (term "1,1"))
                                             (rule "add_literals" (formula "8") (term "1"))
                                             (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "25"))
                                             (rule "times_zero_2" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEqRigid" (formula "9") (term "0,0,0,0,0") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,1") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "9") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "cut_direct" (formula "27") (term "0"))
                                             (branch "CUT: result#9.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                                (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1,1,1,1"))
                                                (rule "equal_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "9"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0"))
                                                (rule "add_zero_right" (formula "11") (term "0"))
                                                (rule "leq_literals" (formula "11"))
                                                (rule "closeFalse" (formula "11"))
                                             )
                                             (branch "CUT: result#9.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "jdiv_axiom" (formula "7") (term "0,0"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_2"))
                                                (rule "equal_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1,1,1,1"))
                                                (rule "qeq_literals" (formula "7") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                (rule "mul_literals" (formula "9") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "11"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                          )
                                       )
                                    )
                                    (branch ""
                                       (rule "andRight" (formula "31"))
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_geqRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "jmod_axiom" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or" (formula "13") (term "0"))
                                          (rule "jdiv_axiom" (formula "1") (term "0,0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "1"))
                                          (rule "cut_direct" (formula "20") (term "0,0"))
                                          (branch "CUT: result#9 = null TRUE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: result#9 = null FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "jmod_axiom" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or" (formula "13") (term "0"))
                                          (rule "jdiv_axiom" (formula "1") (term "0,0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                          (rule "cut_direct" (formula "20") (term "0,0"))
                                          (branch "CUT: result#9 = null TRUE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch "CUT: result#9 = null FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch ""
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "closeTrue" (formula "31"))
                              )
                           )
                           (branch "Precondition"
                              (rule "andRight" (formula "30"))
                              (branch ""
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "wellFormedAnon" (formula "30"))
                                 (rule "wellFormedStorePrimitive" (formula "30") (term "0"))
                                 (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_ltRight" (formula "29"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "wellFormedStoreObject" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "wellFormedCreate" (formula "23") (term "0"))
                                 (rule "replaceKnownSelect_taclet0_0" (formula "23") (term "0,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "23") (term "0,1,1"))
                                 (rule "eqSymm" (formula "23") (term "0,1"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
                                 (rule "closeTrue" (formula "23"))
                              )
                              (branch ""
                                 (rule "andRight" (formula "30"))
                                 (branch ""
                                    (rule "andRight" (formula "30"))
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "expand_inInt" (formula "30"))
                                       (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                       (rule "leq_literals" (formula "30") (term "1"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "leq_literals" (formula "30"))
                                       (rule "closeTrue" (formula "30"))
                                    )
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "expand_inInt" (formula "30"))
                                       (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                       (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_leqRight" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "29"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "expand_inInt" (formula "30"))
                                    (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                    (rule "leq_literals" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "leq_literals" (formula "30"))
                                    (rule "closeTrue" (formula "30"))
                                 )
                              )
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "31"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "expand_inInt" (formula "23") (term "1,0,0,1"))
                              (rule "expand_inInt" (formula "23") (term "0,0,0,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,1"))
                              (rule "replace_int_MAX" (formula "23") (term "1,0,0,0,0,1"))
                              (rule "replace_int_MIN" (formula "23") (term "0,1,0,0,0,1"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "26"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "28"))
                              (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,1"))
                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26"))
                              (rule "inEqSimp_commuteLeq" (formula "24"))
                              (rule "inEqSimp_commuteLeq" (formula "31"))
                              (rule "inEqSimp_commuteLeq" (formula "29"))
                              (rule "pullOutSelect" (formula "32") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                              (rule "simplifySelectOfCreate" (formula "32"))
                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")))
                              (rule "castDel" (formula "32") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                              (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "36"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEqReverse" (formula "33") (term "0,0,1") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "shift_paren_or" (formula "32"))
                              (rule "ifUnfold" (formula "40") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_8"))
                              (rule "inequality_comparison_simple" (formula "40") (term "1"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_left" (formula "40") (term "0,0,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "ifSplit" (formula "40"))
                              (branch "if x_8 true"
                                  (builtin "One Step Simplification" (formula "41"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_8 false"
                                  (builtin "One Step Simplification" (formula "41"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "40") (term "1"))
                                 (rule "methodCallUnfoldTarget" (formula "40") (term "1") (inst "#v0=s"))
                                 (rule "variableDeclaration" (formula "40") (term "1") (newnames "s_4"))
                                 (rule "methodCallWithAssignmentUnfoldArguments" (formula "40") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "40") (term "1"))
                                 (rule "variableDeclaration" (formula "40") (term "1") (newnames "var_2"))
                                 (rule "assignment" (formula "40") (term "1"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "variableDeclarationAssign" (formula "40") (term "1"))
                                 (rule "variableDeclaration" (formula "40") (term "1") (newnames "var_3"))
                                 (rule "eval_order_array_access4" (formula "40") (term "1") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "40") (term "1"))
                                 (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_arr"))
                                  (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_hexCharacters,result_153,exc_175,heapAfter_hexCharacters,anon_heap_hexCharacters") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::hexCharacters()].JML normal_behavior operation contract.0"))
                                 (branch "Post (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "34"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "expand_inChar" (formula "34") (term "1,0,0,1,0,1,1"))
                                    (rule "replace_char_MAX" (formula "34") (term "1,0,1,0,0,1,0,1,1"))
                                    (rule "replace_char_MIN" (formula "34") (term "0,1,1,0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "assignment" (formula "47") (term "1"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "assignment_array2" (formula "47") (term "1"))
                                    (branch "Normal Execution (x_arr != null)"
                                        (builtin "One Step Simplification" (formula "48"))
                                        (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "39")))
                                       (rule "orRight" (formula "47"))
                                       (rule "pullOutSelect" (formula "49") (term "0,1,0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "48"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "38"))
                                       (rule "pullOutSelect" (formula "37") (term "0,0,0") (inst "selectSK=java_lang_Object_created__4"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "simplifySelectOfCreate" (formula "37"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                                       (rule "castDel" (formula "37") (term "1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "37") (term "0,0"))
                                       (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_2"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet0012120000100_14" (formula "1") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0012120000100_15" (formula "1") (term "0,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "40") (term "1,0"))
                                       (rule "commute_and" (formula "40") (term "0,0"))
                                        (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_append,result_154,exc_176,heapAfter_append,anon_heap_append") (contract "java.lang.StringBuilder[java.lang.StringBuilder::append(char)].JML normal_behavior operation contract.0"))
                                       (branch "Post (append)"
                                           (builtin "One Step Simplification" (formula "53"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,1") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0") (ifseqformula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "46"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "48"))
                                          (rule "notLeft" (formula "45"))
                                          (rule "notLeft" (formula "45"))
                                          (rule "notLeft" (formula "47"))
                                          (rule "orRight" (formula "49"))
                                          (rule "orRight" (formula "49"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "dismissNonSelectedField" (formula "49") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "49") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0"))
                                          (rule "assignment" (formula "62") (term "1"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "blockEmpty" (formula "62") (term "1"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "55") (term "0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "36") (term "0,1,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "46") (term "1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "61") (term "0,1,0,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "61") (term "1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "61") (term "1,0,0,0,1,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "61") (term "1,0,0,1,0,0,0,0,0") (ifseqformula "45"))
                                          (rule "pullOutSelect" (formula "51") (term "1,0") (inst "selectSK=java_lang_StringBuilder_str_1"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "44") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                          (rule "simplifySelectOfCreate" (formula "44"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")))
                                          (rule "castDel" (formula "44") (term "0"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                          (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "45"))
                                          (rule "replaceKnownSelect_taclet00012120000100_19" (formula "45") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_20" (formula "45") (term "0,0"))
                                          (rule "notLeft" (formula "45"))
                                          (rule "methodCallUnfoldArguments" (formula "59") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_4"))
                                          (rule "assignment" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_5"))
                                          (rule "eval_order_array_access4" (formula "59") (term "1") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_1"))
                                          (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "arrayLengthIsAnInt" (formula "39") (term "0"))
                                          (rule "expand_inInt" (formula "39"))
                                          (rule "replace_int_MIN" (formula "39") (term "0,1"))
                                          (rule "replace_int_MAX" (formula "39") (term "1,0"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "inEqSimp_commuteLeq" (formula "40"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                          (rule "leq_literals" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                           (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_hexCharacters_0,result_155,exc_177,heapAfter_hexCharacters_0,anon_heap_hexCharacters_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::hexCharacters()].JML normal_behavior operation contract.0"))
                                          (branch "Post (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "61"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "expand_inChar" (formula "46") (term "1,0,0,1,0,1,1"))
                                             (rule "replace_char_MAX" (formula "46") (term "1,0,1,0,0,1,0,1,1"))
                                             (rule "replace_char_MIN" (formula "46") (term "0,1,1,0,0,1,0,1,1"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1,0") (ifseqformula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,1,0") (ifseqformula "42"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,1,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "49"))
                                             (rule "notLeft" (formula "50"))
                                             (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "51"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "dismissNonSelectedField" (formula "47") (term "0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                                             (rule "assignment" (formula "66") (term "1"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "assignment_array2" (formula "66") (term "1"))
                                             (branch "Normal Execution (x_arr_1 != null)"
                                                 (builtin "One Step Simplification" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")))
                                                (rule "orRight" (formula "66"))
                                                (rule "pullOutSelect" (formula "68") (term "0,1,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "49"))
                                                (rule "applyEq" (formula "67") (term "0") (ifseqformula "49"))
                                                (rule "inEqSimp_commuteLeq" (formula "67"))
                                                (rule "pullOutSelect" (formula "48") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                (rule "simplifySelectOfCreate" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "54")))
                                                (rule "castDel" (formula "48") (term "1,0"))
                                                (rule "eqSymm" (formula "48") (term "0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "48") (term "0,0"))
                                                (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0") (ifseqformula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet0000012120000100_26" (formula "1") (term "0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_27" (formula "1") (term "0,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet0000012120000100_26" (formula "1") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_27" (formula "1") (term "0,0,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet0000012120000100_26" (formula "1") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000012120000100_27" (formula "1") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "commute_or_2" (formula "51") (term "0"))
                                                (rule "commute_or_2" (formula "4") (term "0,0"))
                                                (rule "commute_and" (formula "53") (term "1,0"))
                                                (rule "commute_and" (formula "53") (term "0,0"))
                                                 (builtin "Use Operation Contract" (formula "72") (newnames "heapBefore_append_0,result_156,exc_178,heapAfter_append_0,anon_heap_append_0") (contract "java.lang.StringBuilder[java.lang.StringBuilder::append(char)].JML normal_behavior operation contract.0"))
                                                (branch "Post (append)"
                                                    (builtin "One Step Simplification" (formula "74"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,1,1") (ifseqformula "50"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,1,1") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,0,1,1") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1,0") (ifseqformula "56"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,1,0") (ifseqformula "50"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,1,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0,1,1,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "58"))
                                                   (rule "andLeft" (formula "60"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "andLeft" (formula "59"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "notLeft" (formula "60"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "orRight" (formula "63"))
                                                   (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0,0,0"))
                                                   (rule "blockEmpty" (formula "85") (term "1"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "1,0,1,0,0,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "1,0,1,0,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "1,0,0,0,0,0,0") (ifseqformula "58"))
                                                   (rule "replaceKnownSelect_taclet00012120000100_21" (formula "57") (term "0,0,0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_22" (formula "57") (term "0,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "true_left" (formula "57"))
                                                   (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=java_lang_StringBuilder_str_2"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "51"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "47"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "41"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "68"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                   (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "58"))
                                                   (rule "replaceKnownSelect_taclet00000012120000100_33" (formula "58") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_34" (formula "58") (term "0,0"))
                                                   (rule "notLeft" (formula "58"))
                                                   (rule "preincrement" (formula "82") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "82") (term "1") (inst "#v=x"))
                                                   (rule "variableDeclarationAssign" (formula "82") (term "1"))
                                                   (rule "variableDeclaration" (formula "82") (term "1") (newnames "x_9"))
                                                   (rule "remove_parentheses_right" (formula "82") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "82") (term "1"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "translateJavaAddInt" (formula "82") (term "0,1,0"))
                                                   (rule "expand_addJint" (formula "82") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "82") (term "0,0,1,0"))
                                                   (rule "expand_moduloInteger" (formula "82") (term "0,1,0"))
                                                   (rule "replace_int_RANGE" (formula "82") (term "1,1,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "82") (term "0,0,1,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "82") (term "0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "82") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "82") (term "0,0,1,0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "82") (term "1"))
                                                   (rule "assignment" (formula "82") (term "1"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "tryEmpty" (formula "82") (term "1"))
                                                   (rule "methodCallEmpty" (formula "82") (term "1"))
                                                   (rule "emptyModality" (formula "82") (term "1"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "andRight" (formula "82"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "82"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "82"))
                                                         (branch ""
                                                            (rule "replaceKnownSelect_taclet00000012120000100_33" (formula "82") (term "0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00000012120000100_34" (formula "82") (term "0,0"))
                                                            (rule "notRight" (formula "82"))
                                                            (rule "close" (formula "60") (ifseqformula "1"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "82"))
                                                            (branch "Case 1"
                                                               (rule "inEqSimp_geqRight" (formula "78"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "78"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "79"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "80"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "29"))
                                                               (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "35"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                               (rule "mod_axiom" (formula "1") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                               (rule "mul_literals" (formula "28") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "3"))
                                                               (rule "leq_literals" (formula "35") (term "0"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "true_left" (formula "35"))
                                                               (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "4"))
                                                               (rule "leq_literals" (formula "36") (term "0"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "28"))
                                                               (rule "leq_literals" (formula "29") (term "0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0"))
                                                               (rule "qeq_literals" (formula "23") (term "0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "31"))
                                                               (rule "leq_literals" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                               (rule "leq_literals" (formula "23") (term "0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "30"))
                                                               (rule "leq_literals" (formula "31") (term "0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "26") (term "0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                                               (rule "equal_literals" (formula "1") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "23") (term "0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "nnf_imp2or" (formula "45") (term "0"))
                                                               (rule "nnf_imp2or" (formula "36") (term "0"))
                                                               (rule "nnf_imp2or" (formula "20") (term "0"))
                                                               (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "commute_or" (formula "45") (term "0,0"))
                                                               (rule "commute_or" (formula "36") (term "0,0"))
                                                               (rule "commute_or" (formula "20") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "6") (term "0"))
                                                               (branch "result_155.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                  (branch "result_153.<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "true_left" (formula "30"))
                                                                     (rule "cnf_rightDist" (formula "39") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "39"))
                                                                     (rule "andLeft" (formula "39"))
                                                                     (rule "commute_or" (formula "40") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "31") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "31"))
                                                                     (rule "andLeft" (formula "31"))
                                                                     (rule "commute_or" (formula "32") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "16") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "16"))
                                                                     (rule "andLeft" (formula "16"))
                                                                     (rule "commute_or" (formula "17") (term "0"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "cut_direct" (formula "27") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                           (rule "expand_inInt" (formula "40"))
                                                                           (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "leq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                                                           (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "22"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                           (rule "expand_inInt" (formula "40"))
                                                                           (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "leq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                                                           (rule "mul_literals" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "22"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "cut_direct" (formula "27") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                           (rule "expand_inInt" (formula "40"))
                                                                           (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "leq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                                                           (rule "mul_literals" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "22"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                           (rule "expand_inInt" (formula "40"))
                                                                           (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                           (rule "andLeft" (formula "40"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "leq_literals" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                                                           (rule "mul_literals" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "22"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result_153.<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "46"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "46"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "cnf_rightDist" (formula "40") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "40"))
                                                                     (rule "andLeft" (formula "40"))
                                                                     (rule "commute_or" (formula "41") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "32"))
                                                                     (rule "andLeft" (formula "32"))
                                                                     (rule "commute_or" (formula "33") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "16") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "16"))
                                                                     (rule "andLeft" (formula "16"))
                                                                     (rule "commute_or" (formula "17") (term "0"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "cut_direct" (formula "27") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                           (rule "expand_inInt" (formula "41"))
                                                                           (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                           (rule "andLeft" (formula "41"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                                           (rule "mul_literals" (formula "22") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "22") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                           (rule "mul_literals" (formula "22") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                                                           (rule "greater_literals" (formula "22") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "mul_literals" (formula "22") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "22") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeFalse" (formula "22"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                           (rule "expand_inInt" (formula "41"))
                                                                           (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                           (rule "andLeft" (formula "41"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                                           (rule "times_zero_1" (formula "22") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "22") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                           (rule "mul_literals" (formula "22") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "22") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "qeq_literals" (formula "22") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeFalse" (formula "22"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "cut_direct" (formula "27") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                           (rule "expand_inInt" (formula "41"))
                                                                           (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                           (rule "andLeft" (formula "41"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                                                           (rule "times_zero_1" (formula "22") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "22") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                           (rule "mul_literals" (formula "22") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "22") (ifseqformula "2"))
                                                                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "22") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "qeq_literals" (formula "22") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeFalse" (formula "22"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                           (rule "expand_inInt" (formula "41"))
                                                                           (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                           (rule "andLeft" (formula "41"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                           (rule "leq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "3"))
                                                                           (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "22"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_155.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "ifthenelse_split" (formula "9") (term "0"))
                                                                  (branch "result_153.<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "9"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "cnf_rightDist" (formula "42") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "42"))
                                                                     (rule "andLeft" (formula "42"))
                                                                     (rule "commute_or" (formula "43") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "commute_or" (formula "34") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "18"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "commute_or" (formula "19") (term "0"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "24"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "24"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                                                                           (rule "times_zero_1" (formula "24") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "2"))
                                                                           (rule "greater_literals" (formula "24") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "closeFalse" (formula "24"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "24"))
                                                                           (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result_153.<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "43"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "commute_or" (formula "44") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "commute_or" (formula "35") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "18"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "commute_or" (formula "19") (term "0"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                           (rule "expand_inInt" (formula "44"))
                                                                           (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                           (rule "andLeft" (formula "44"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                           (rule "leq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0"))
                                                                           (rule "leq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "24"))
                                                                           (rule "greater_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                           (rule "expand_inInt" (formula "44"))
                                                                           (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                           (rule "andLeft" (formula "44"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                           (rule "leq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "2"))
                                                                           (rule "greater_literals" (formula "24") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "closeFalse" (formula "24"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                           (rule "expand_inInt" (formula "44"))
                                                                           (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                           (rule "andLeft" (formula "44"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                           (rule "leq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "2"))
                                                                           (rule "greater_literals" (formula "24") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "closeFalse" (formula "24"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                           (rule "expand_inInt" (formula "44"))
                                                                           (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                           (rule "andLeft" (formula "44"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "leq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                                           (rule "add_literals" (formula "3") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                           (rule "mul_literals" (formula "4") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(neglit(1(#)))"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "2") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                                                                           (rule "mul_literals" (formula "24") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                           (rule "mul_literals" (formula "24") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "24") (ifseqformula "2"))
                                                                           (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "24") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "qeq_literals" (formula "24") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "closeFalse" (formula "24"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "inEqSimp_geqRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "79"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "81"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "81"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "79"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltRight" (formula "80"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "29"))
                                                               (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "35"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                               (rule "mod_axiom" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                               (rule "mul_literals" (formula "29") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "21"))
                                                               (rule "leq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0"))
                                                               (rule "qeq_literals" (formula "22") (term "0"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "30"))
                                                               (rule "leq_literals" (formula "35") (term "0"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "true_left" (formula "35"))
                                                               (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "31"))
                                                               (rule "leq_literals" (formula "33") (term "0"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "4"))
                                                               (rule "leq_literals" (formula "32") (term "0"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "27") (term "0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "26") (term "0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "3"))
                                                               (rule "leq_literals" (formula "30") (term "0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
                                                               (rule "equal_literals" (formula "2") (term "0,0,1,1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,1,1,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,1,1,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdRightDiv=Z(neglit(2(#)))"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "nnf_imp2or" (formula "38") (term "0"))
                                                               (rule "nnf_imp2or" (formula "22") (term "0"))
                                                               (rule "nnf_imp2or" (formula "47") (term "0"))
                                                               (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "result_155.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "commute_or" (formula "35") (term "0,0"))
                                                                  (rule "commute_or" (formula "19") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                  (branch "result_153.<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "8"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "commute_or" (formula "41") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "commute_or" (formula "34") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "18"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "commute_or" (formula "19") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "43"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "commute_or" (formula "44") (term "0"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthIsAnInt" (formula "42") (term "0"))
                                                                           (rule "expand_inInt" (formula "42"))
                                                                           (rule "replace_int_MIN" (formula "42") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "42") (term "1,0"))
                                                                           (rule "andLeft" (formula "42"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "43"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "leq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "add_literals" (formula "17") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "17") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                           (rule "mul_literals" (formula "18") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthIsAnInt" (formula "42") (term "0"))
                                                                           (rule "expand_inInt" (formula "42"))
                                                                           (rule "replace_int_MIN" (formula "42") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "42") (term "1,0"))
                                                                           (rule "andLeft" (formula "42"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "43"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                           (rule "mul_literals" (formula "18") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthIsAnInt" (formula "42") (term "0"))
                                                                           (rule "expand_inInt" (formula "42"))
                                                                           (rule "replace_int_MIN" (formula "42") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "42") (term "1,0"))
                                                                           (rule "andLeft" (formula "42"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "43"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "arrayLengthIsAnInt" (formula "42") (term "0"))
                                                                           (rule "expand_inInt" (formula "42"))
                                                                           (rule "replace_int_MIN" (formula "42") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "42") (term "1,0"))
                                                                           (rule "andLeft" (formula "42"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "43"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "add_literals" (formula "17") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "17") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "mul_literals" (formula "17") (term "0,0"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result_153.<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "commute_or" (formula "42") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "34"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "commute_or" (formula "35") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "18") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "18"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "commute_or" (formula "19") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "44") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "44"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "commute_or" (formula "45") (term "0"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                           (rule "mul_literals" (formula "18") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                           (rule "add_literals" (formula "17") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "17") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "17") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "leq_literals" (formula "17") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "true_left" (formula "17"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                           (rule "times_zero_1" (formula "18") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "cut_direct" (formula "29") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                           (rule "mul_literals" (formula "18") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                           (rule "expand_inInt" (formula "43"))
                                                                           (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                                           (rule "leq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "23") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "23") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_155.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_right" (formula "9") (term "0,0,0,0,0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "commute_or" (formula "37") (term "0,0"))
                                                                  (rule "commute_or" (formula "21") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                  (branch "result_153.<created> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
                                                                     (rule "hideAuxiliaryEq" (formula "11"))
                                                                     (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "10"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "hideAuxiliaryEq" (formula "11"))
                                                                     (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "10"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "commute_or" (formula "44") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "35") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "35"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "commute_or" (formula "36") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "20") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "20"))
                                                                     (rule "andLeft" (formula "20"))
                                                                     (rule "commute_or" (formula "21") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "46") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "46"))
                                                                     (rule "andLeft" (formula "46"))
                                                                     (rule "commute_or" (formula "47") (term "0"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "cut_direct" (formula "31") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "arrayLengthIsAnInt" (formula "45") (term "0"))
                                                                           (rule "expand_inInt" (formula "45"))
                                                                           (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                                           (rule "andLeft" (formula "45"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "arrayLengthIsAnInt" (formula "45") (term "0"))
                                                                           (rule "expand_inInt" (formula "45"))
                                                                           (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                                           (rule "andLeft" (formula "45"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "leq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "cut_direct" (formula "31") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "arrayLengthIsAnInt" (formula "45") (term "0"))
                                                                           (rule "expand_inInt" (formula "45"))
                                                                           (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                                           (rule "andLeft" (formula "45"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "arrayLengthIsAnInt" (formula "45") (term "0"))
                                                                           (rule "expand_inInt" (formula "45"))
                                                                           (rule "replace_int_MAX" (formula "45") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "45") (term "0,1"))
                                                                           (rule "andLeft" (formula "45"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "arrayLengthNotNegative" (formula "45") (term "0"))
                                                                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                           (rule "add_literals" (formula "19") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "19") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0"))
                                                                           (rule "leq_literals" (formula "19") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "true_left" (formula "19"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result_153.<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "51"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "51"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "commute_or" (formula "45") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "36") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "36"))
                                                                     (rule "andLeft" (formula "36"))
                                                                     (rule "commute_or" (formula "37") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "20") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "20"))
                                                                     (rule "andLeft" (formula "20"))
                                                                     (rule "commute_or" (formula "21") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "47") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "47"))
                                                                     (rule "andLeft" (formula "47"))
                                                                     (rule "commute_or" (formula "48") (term "0"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "cut_direct" (formula "31") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                                                                           (rule "expand_inInt" (formula "46"))
                                                                           (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                                                           (rule "andLeft" (formula "46"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                                           (rule "qeq_literals" (formula "47"))
                                                                           (rule "true_left" (formula "47"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                                                                           (rule "expand_inInt" (formula "46"))
                                                                           (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                                                           (rule "andLeft" (formula "46"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "48"))
                                                                           (rule "leq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "cut_direct" (formula "31") (term "0,0"))
                                                                        (branch "CUT: result#2 = null TRUE"
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                                                                           (rule "expand_inInt" (formula "46"))
                                                                           (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                                                           (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                                                           (rule "andLeft" (formula "46"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                                           (rule "qeq_literals" (formula "47"))
                                                                           (rule "true_left" (formula "47"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "6"))
                                                                           (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                        (branch "CUT: result#2 = null FALSE"
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "qeq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                                                                           (rule "expand_inInt" (formula "46"))
                                                                           (rule "replace_int_MIN" (formula "46") (term "0,1"))
                                                                           (rule "replace_int_MAX" (formula "46") (term "1,0"))
                                                                           (rule "andLeft" (formula "46"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "47"))
                                                                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                                                           (rule "qeq_literals" (formula "47"))
                                                                           (rule "true_left" (formula "47"))
                                                                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                                           (rule "leq_literals" (formula "46"))
                                                                           (rule "true_left" (formula "46"))
                                                                           (rule "div_axiom" (formula "4") (term "0,1,1") (inst "quotient=quotient_0"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "mul_literals" (formula "4") (term "1,1,1,1"))
                                                                           (rule "equal_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "1"))
                                                                           (rule "add_literals" (formula "6") (term "0,1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "1"))
                                                                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "20"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "1"))
                                                                           (rule "greater_literals" (formula "3") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "0,0"))
                                                                           (rule "leq_literals" (formula "3") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "true_left" (formula "3"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "6"))
                                                                           (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "20") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                                                                           (rule "times_zero_1" (formula "25") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_contradInEq3" (formula "25") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                           (rule "greater_literals" (formula "25") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "82") (inst "sk=f_0"))
                                                         (rule "allRight" (formula "82") (inst "sk=o_0"))
                                                         (rule "orRight" (formula "82"))
                                                         (rule "orRight" (formula "82"))
                                                         (rule "dismissNonSelectedField" (formula "83") (term "0,0,1"))
                                                         (rule "dismissNonSelectedField" (formula "83") (term "0,0,1"))
                                                         (rule "selectOfStore" (formula "84") (term "0"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "castDel" (formula "84") (term "1,0"))
                                                         (rule "ifthenelse_split" (formula "84") (term "0"))
                                                         (branch " result_154 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "selectOfCreate" (formula "85") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                            (rule "castDel" (formula "85") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "85"))
                                                            (rule "selectOfAnonEQ" (formula "86") (term "1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "86"))
                                                            (rule "elementOfSingleton" (formula "86") (term "0,0,0,1"))
                                                            (rule "ifthenelse_split" (formula "86") (term "1"))
                                                            (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters_0 = TRUE TRUE"
                                                               (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "0,0,0") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "2") (term "0,0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0,0,0"))
                                                               (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                                                                  (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                  (rule "castDel" (formula "2") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                  (rule "castDel" (formula "3") (term "0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "63") (term "0") (ifseqformula "44"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "63") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "0,0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "0,0,0,0"))
                                                                  (rule "selectOfAnon" (formula "63") (term "1,0"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "0,0,0,1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "2,1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "0,0,0,1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "63") (term "2,1,0"))
                                                                  (rule "ifthenelse_negated" (formula "63") (term "1,0"))
                                                                  (rule "ifthenelse_split" (formula "63") (term "1,0"))
                                                                  (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                     (rule "selectOfCreate" (formula "64") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "4")) (ifInst ""  (formula "72")))
                                                                     (rule "castDel" (formula "64") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "1")))
                                                                     (rule "closeTrue" (formula "64"))
                                                                  )
                                                                  (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                     (rule "ifthenelse_split" (formula "64") (term "0"))
                                                                     (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "73")) (ifInst ""  (formula "65")))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "selectOfCreate" (formula "64") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "4")) (ifInst ""  (formula "73")))
                                                                        (rule "castDel" (formula "64") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "64"))
                                                                        (rule "closeTrue" (formula "64"))
                                                                     )
                                                                     (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "orRight" (formula "64"))
                                                                        (rule "selectOfCreate" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "3")) (ifInst ""  (formula "73")))
                                                                        (rule "castDel" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "closeTrue" (formula "63"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters_0 = TRUE FALSE"
                                                               (rule "orRight" (formula "86"))
                                                               (rule "selectCreatedOfAnonEQ" (formula "87") (term "0,0,1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "87"))
                                                               (rule "selectOfAnonEQ" (formula "88") (term "1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "88"))
                                                               (rule "ifthenelse_split" (formula "88") (term "1"))
                                                               (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "89") (term "0,0,0,1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")))
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "89") (term "0,0,0,0") (ifseqformula "44"))
                                                                   (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0,0"))
                                                                  (rule "selectOfCreate" (formula "89") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                  (rule "castDel" (formula "89") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                  (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "45"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                                                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                     (rule "castDel" (formula "3") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "63") (term "0") (ifseqformula "44"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "orRight" (formula "63"))
                                                                     (rule "orRight" (formula "63"))
                                                                     (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                     (rule "selectOfCreate" (formula "63") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "3")) (ifInst ""  (formula "73")))
                                                                     (rule "castDel" (formula "63") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "closeTrue" (formula "63"))
                                                                  )
                                                               )
                                                               (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "87") (term "0,0,0,1") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "selectOfAnonEQ" (formula "88") (term "0,0,1") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "selectOfAnonEQ" (formula "87") (term "0,0,0,0,1") (ifseqformula "42"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,1,0,0,0,0,0,1"))
                                                                  (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,1,0,0,0,0,0,1"))
                                                                  (rule "selectOfCreate" (formula "87") (term "0,0,0,1,0,0,0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                  (rule "castDel" (formula "87") (term "0,0,0,1,0,0,0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,0,0,1"))
                                                                  (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,0,0,1"))
                                                                  (rule "selectOfCreate" (formula "87") (term "0,0,0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                  (rule "castDel" (formula "87") (term "0,0,0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "ifthenelse_split" (formula "87") (term "0,0,1"))
                                                                  (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "90") (term "1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                     (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "44"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0,0"))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                     (rule "selectOfAnon" (formula "2") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,1,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "2,1,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,1,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "2") (term "2,1,0,0"))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "1,0,0"))
                                                                     (rule "selectOfCreate" (formula "2") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                     (rule "castDel" (formula "2") (term "0,0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                     (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                        (rule "selectOfCreate" (formula "3") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                        (rule "castDel" (formula "3") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "closeFalse" (formula "3"))
                                                                     )
                                                                     (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                        (rule "selectOfCreate" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "3")) (ifInst ""  (formula "71")))
                                                                        (rule "castDel" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "closeTrue" (formula "63"))
                                                                     )
                                                                  )
                                                                  (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "88") (term "1") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "87")))
                                                                     (rule "elementOfSingleton" (formula "88") (term "0,0,1"))
                                                                     (rule "ifthenelse_split" (formula "88") (term "1"))
                                                                     (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                                                                        (rule "close" (formula "87") (ifseqformula "1"))
                                                                     )
                                                                     (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "87") (term "0,0,1") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "87"))
                                                                        (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,0,1"))
                                                                        (rule "selectOfAnonEQ" (formula "88") (term "1") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "88"))
                                                                        (rule "dismissNonSelectedField" (formula "88") (term "0,0,0,1,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "88") (term "0,0,0,1,0,1"))
                                                                        (rule "ifthenelse_split" (formula "88") (term "1"))
                                                                        (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "selectOfCreate" (formula "89") (term "0,0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                           (rule "castDel" (formula "89") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "89"))
                                                                           (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                           (rule "castDel" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                           (rule "selectOfCreate" (formula "88") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "88") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "selectOfAnon" (formula "88") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "dismissNonSelectedField" (formula "88") (term "0,0,1,1,0,1"))
                                                                           (rule "elementOfSingleton" (formula "88") (term "0,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "88") (term "0,0,1,1,0,1"))
                                                                           (rule "selectOfCreate" (formula "88") (term "0,0,1,1,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "86")) (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "88") (term "0,0,1,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "selectOfStore" (formula "88") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "castDel" (formula "88") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "closeTrue" (formula "88"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch " result_154 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                                            (rule "selectOfCreate" (formula "83") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "66")))
                                                            (rule "castDel" (formula "83") (term "1,0,0,1"))
                                                             (builtin "One Step Simplification" (formula "83"))
                                                            (rule "selectOfAnonEQ" (formula "85") (term "1") (ifseqformula "56"))
                                                             (builtin "One Step Simplification" (formula "85"))
                                                            (rule "elementOfSingleton" (formula "85") (term "0,0,0,1"))
                                                            (rule "ifthenelse_split" (formula "85") (term "1"))
                                                            (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters_0 = TRUE TRUE"
                                                               (rule "selectOfStore" (formula "86") (term "0"))
                                                                (builtin "One Step Simplification" (formula "86"))
                                                               (rule "castDel" (formula "86") (term "1,0"))
                                                               (rule "selectOfCreate" (formula "86") (term "2,0"))
                                                               (rule "castDel" (formula "86") (term "1,2,0"))
                                                               (rule "ifthenelse_split" (formula "86") (term "2,0"))
                                                               (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "89") (term "0"))
                                                                  (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "5") (term "0,0,1,1") (ifseqformula "55"))
                                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "87")) (ifInst ""  (formula "4")))
                                                                     (rule "andLeft" (formula "5"))
                                                                     (rule "ifthenelse_split" (formula "6") (term "0,0"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "6"))
                                                                        (rule "selectOfAnonEQ" (formula "6") (term "0,0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
                                                                        (rule "ifthenelse_negated" (formula "6") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "7") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "dismissNonSelectedField" (formula "7") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "7") (term "0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "7") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                                                           (rule "castDel" (formula "7") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "closeFalse" (formula "7"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "66") (term "0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "66"))
                                                                           (rule "orRight" (formula "66"))
                                                                           (rule "orRight" (formula "66"))
                                                                           (rule "dismissNonSelectedField" (formula "66") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "66") (term "0"))
                                                                           (rule "selectOfCreate" (formula "66") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                                                           (rule "castDel" (formula "66") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "66"))
                                                                           (rule "closeTrue" (formula "66"))
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "65") (term "0,0,1") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")))
                                                                        (rule "closeTrue" (formula "65"))
                                                                     )
                                                                  )
                                                                  (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "4") (term "0,0,1,1") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "86")) (ifInst ""  (formula "3")))
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "ifthenelse_split" (formula "5") (term "0,0"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "5"))
                                                                        (rule "selectOfAnonEQ" (formula "5") (term "0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                                                                        (rule "ifthenelse_negated" (formula "5") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "5") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "5") (term "0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                                                                           (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                                           (rule "selectOfAnon" (formula "5") (term "1,0"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                                                                           (rule "ifthenelse_negated" (formula "5") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "1,1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "1,1,0"))
                                                                           (rule "selectOfCreate" (formula "5") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "castDel" (formula "5") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                              (rule "selectOfCreate" (formula "5") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "5") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "6") (term "0,0,0,0"))
                                                                              (rule "selectOfCreate" (formula "6") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "6") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "closeFalse" (formula "6"))
                                                                           )
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                              (rule "selectOfCreate" (formula "66") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "66") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "closeTrue" (formula "66"))
                                                                           )
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "65") (term "0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "65"))
                                                                           (rule "orRight" (formula "65"))
                                                                           (rule "orRight" (formula "65"))
                                                                           (rule "dismissNonSelectedField" (formula "65") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "65") (term "0"))
                                                                           (rule "selectOfCreate" (formula "65") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "castDel" (formula "65") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "65"))
                                                                           (rule "closeTrue" (formula "65"))
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "64") (term "0,0,1") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "4")) (ifInst ""  (formula "4")))
                                                                        (rule "ifthenelse_negated" (formula "64") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "64") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "6") (term "0,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "5") (term "0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")) (ifInst ""  (formula "64")) (ifInst ""  (formula "65")))
                                                                           (rule "closeFalse" (formula "5"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                  (rule "ifthenelse_split" (formula "87") (term "0"))
                                                                  (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "3") (term "0,0,1,1") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "ifthenelse_split" (formula "4") (term "0,0"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "selectOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                                                        (rule "ifthenelse_negated" (formula "4") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "4") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "5") (term "0,0,0,0"))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "4") (term "0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                           (rule "selectOfCreate" (formula "5") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "72")))
                                                                           (rule "castDel" (formula "5") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "closeFalse" (formula "5"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "64") (term "0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "orRight" (formula "64"))
                                                                           (rule "orRight" (formula "64"))
                                                                           (rule "dismissNonSelectedField" (formula "64") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "64") (term "0"))
                                                                           (rule "selectOfCreate" (formula "64") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "1")) (ifInst ""  (formula "74")))
                                                                           (rule "castDel" (formula "64") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "64"))
                                                                           (rule "closeTrue" (formula "64"))
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "63") (term "0,0,1") (ifseqformula "50"))
                                                                         (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                                        (rule "ifthenelse_negated" (formula "63") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "63") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "5") (term "0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                                           (rule "closeFalse" (formula "5"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0,0,1,1") (ifseqformula "51"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0"))
                                                                           (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")))
                                                                           (rule "castDel" (formula "2") (term "1,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                           (rule "ifthenelse_negated" (formula "3") (term "0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                              (rule "selectOfCreate" (formula "4") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "71")))
                                                                              (rule "castDel" (formula "4") (term "1,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "selectOfCreate" (formula "3") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                                              (rule "castDel" (formula "3") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "notLeft" (formula "4"))
                                                                              (rule "close" (formula "63") (ifseqformula "3"))
                                                                           )
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "orRight" (formula "63"))
                                                                              (rule "selectOfCreate" (formula "63") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "72")))
                                                                              (rule "castDel" (formula "63") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "63"))
                                                                              (rule "orRight" (formula "63"))
                                                                              (rule "notLeft" (formula "3"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "notLeft" (formula "2"))
                                                                              (rule "eqSymm" (formula "93") (term "0"))
                                                                              (rule "eqSymm" (formula "93") (term "1"))
                                                                              (rule "eqSymm" (formula "93"))
                                                                              (rule "eqSymm" (formula "63"))
                                                                              (rule "eqSymm" (formula "90") (term "0,0,1"))
                                                                              (rule "eqSymm" (formula "92") (term "0,0"))
                                                                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                              (rule "eqSymm" (formula "91") (term "0"))
                                                                              (rule "eqSymm" (formula "91") (term "1"))
                                                                              (rule "replace_known_right" (formula "91") (term "0") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "91"))
                                                                              (rule "false_right" (formula "91"))
                                                                              (rule "replace_known_right" (formula "89") (term "0") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "false_right" (formula "89"))
                                                                              (rule "replace_known_right" (formula "89") (term "0,0") (ifseqformula "61"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "63")) (ifInst ""  (formula "64")))
                                                                              (rule "closeTrue" (formula "89"))
                                                                           )
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "62") (term "0") (ifseqformula "43"))
                                                                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "1")))
                                                                           (rule "ifthenelse_negated" (formula "62") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "62") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "62") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_split" (formula "62") (term "0"))
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                               (builtin "One Step Simplification" (formula "63"))
                                                                              (rule "orRight" (formula "63"))
                                                                              (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                              (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "64")))
                                                                              (rule "castDel" (formula "1") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "selectOfCreate" (formula "63") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "72")))
                                                                              (rule "castDel" (formula "63") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                                                              (rule "closeTrue" (formula "63"))
                                                                           )
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "selectOfCreate" (formula "62") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "72")))
                                                                              (rule "castDel" (formula "62") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "62"))
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "notLeft" (formula "2"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "eqSymm" (formula "62"))
                                                                              (rule "eqSymm" (formula "90") (term "0,0,1"))
                                                                              (rule "eqSymm" (formula "92") (term "0,0"))
                                                                              (rule "eqSymm" (formula "93") (term "1"))
                                                                              (rule "eqSymm" (formula "93") (term "0"))
                                                                              (rule "eqSymm" (formula "91") (term "0"))
                                                                              (rule "eqSymm" (formula "93"))
                                                                              (rule "eqSymm" (formula "91") (term "1"))
                                                                              (rule "replace_known_right" (formula "89") (term "0") (ifseqformula "62"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "false_right" (formula "89"))
                                                                              (rule "replace_known_right" (formula "90") (term "0") (ifseqformula "62"))
                                                                               (builtin "One Step Simplification" (formula "90"))
                                                                              (rule "false_right" (formula "90"))
                                                                              (rule "replace_known_right" (formula "89") (term "1,0,1") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "60")) (ifInst ""  (formula "62")))
                                                                              (rule "closeTrue" (formula "89"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "61") (term "0,0,1") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_negated" (formula "61") (term "0,0"))
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                        (rule "close" (formula "61") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters_0 = TRUE FALSE"
                                                               (rule "orRight" (formula "85"))
                                                               (rule "selectOfStore" (formula "87") (term "0"))
                                                                (builtin "One Step Simplification" (formula "87"))
                                                               (rule "castDel" (formula "87") (term "1,0"))
                                                               (rule "ifthenelse_split" (formula "87") (term "0"))
                                                               (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "88") (term "0,0,1") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "selectOfAnonEQ" (formula "89") (term "1") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "89"))
                                                                  (rule "ifthenelse_split" (formula "89") (term "1"))
                                                                  (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "90") (term "0,0,0,1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                     (rule "ifthenelse_negated" (formula "90") (term "0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "90") (term "0,0,0"))
                                                                     (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                        (rule "closeFalse" (formula "3"))
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "50"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "90")))
                                                                        (rule "selectOfAnonEQ" (formula "90") (term "0") (ifseqformula "44"))
                                                                         (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")))
                                                                        (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "90") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,0"))
                                                                        (rule "selectOfCreate" (formula "90") (term "0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                        (rule "castDel" (formula "90") (term "0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "90"))
                                                                        (rule "orRight" (formula "90"))
                                                                        (rule "dismissNonSelectedField" (formula "90") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "90") (term "0"))
                                                                        (rule "selectOfCreate" (formula "90") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                        (rule "castDel" (formula "90") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "90"))
                                                                        (rule "closeTrue" (formula "90"))
                                                                     )
                                                                  )
                                                                  (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "88") (term "0,0,0,1") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "88"))
                                                                     (rule "ifthenelse_split" (formula "88") (term "0,0,0,1"))
                                                                     (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "91") (term "0,0,1") (ifseqformula "50"))
                                                                         (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")))
                                                                        (rule "selectOfAnonEQ" (formula "92") (term "1") (ifseqformula "50"))
                                                                         (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                        (rule "selectOfAnonEQ" (formula "91") (term "0,0,0") (ifseqformula "44"))
                                                                         (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")))
                                                                        (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "91") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,0,0"))
                                                                        (rule "ifthenelse_split" (formula "91") (term "0,0,0"))
                                                                        (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                            (builtin "One Step Simplification" (formula "92"))
                                                                           (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                           (rule "castDel" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "selectOfCreate" (formula "92") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "4")) (ifInst ""  (formula "71")))
                                                                           (rule "castDel" (formula "92") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "92"))
                                                                           (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                                           (rule "ifthenelse_negated" (formula "3") (term "0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "4") (term "0,0,0"))
                                                                              (rule "selectOfCreate" (formula "4") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")) (ifInst ""  (formula "72")))
                                                                              (rule "castDel" (formula "4") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "orRight" (formula "64"))
                                                                              (rule "selectOfCreate" (formula "64") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "4")) (ifInst ""  (formula "73")))
                                                                              (rule "castDel" (formula "64") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "closeTrue" (formula "64"))
                                                                           )
                                                                        )
                                                                        (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "orRight" (formula "91"))
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "92")))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                           (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                              (rule "close" (formula "92") (ifseqformula "2"))
                                                                           )
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                              (rule "selectOfCreate" (formula "91") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                              (rule "castDel" (formula "91") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "91"))
                                                                              (rule "closeTrue" (formula "91"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "90") (term "0,0,1") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "90"))
                                                                        (rule "selectOfAnonEQ" (formula "91") (term "1") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "88")))
                                                                        (rule "elementOfSingleton" (formula "91") (term "0,0,1"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "89") (term "0,0,0,1") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "89"))
                                                                        (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0,1"))
                                                                        (rule "selectOfAnonEQ" (formula "88") (term "0,0,1") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "88"))
                                                                        (rule "dismissNonSelectedField" (formula "88") (term "0,0,0,1,0,0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "88") (term "0,0,0,1,0,0,0,1"))
                                                                        (rule "ifthenelse_split" (formula "88") (term "0,0,1"))
                                                                        (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                           (rule "castDel" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                            (builtin "One Step Simplification" (formula "89"))
                                                                           (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1"))
                                                                           (rule "selectOfCreate" (formula "88") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "88") (term "0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "ifthenelse_split" (formula "91") (term "1"))
                                                                           (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                                                                              (rule "close" (formula "88") (ifseqformula "1"))
                                                                           )
                                                                           (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                                                                              (rule "selectOfAnonEQ" (formula "90") (term "0,0,0,1") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "90"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                              (rule "selectOfAnon" (formula "90") (term "2,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "90"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "2,2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "0,0,1,0,2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "2,2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "90") (term "0,0,1,0,2,0,0,0,1"))
                                                                              (rule "selectOfCreate" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                              (rule "castDel" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "90"))
                                                                              (rule "selectOfCreate" (formula "89") (term "0,0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                              (rule "castDel" (formula "89") (term "0,0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "ifthenelse_split" (formula "89") (term "0,0,0,1"))
                                                                              (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "selectOfCreate" (formula "2") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                                 (rule "castDel" (formula "2") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                              (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                 (rule "selectOfCreate" (formula "89") (term "0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                                 (rule "castDel" (formula "89") (term "0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "89"))
                                                                                 (rule "selectOfCreate" (formula "89") (term "0,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                                 (rule "castDel" (formula "89") (term "0,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "89"))
                                                                                 (rule "selectOfAnonEQ" (formula "89") (term "1") (ifseqformula "42"))
                                                                                  (builtin "One Step Simplification" (formula "89"))
                                                                                 (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1,0,1"))
                                                                                 (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1,0,1"))
                                                                                 (rule "ifthenelse_split" (formula "89") (term "1"))
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "70")))
                                                                                    (rule "castDel" (formula "2") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "closeFalse" (formula "2"))
                                                                                 )
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                    (rule "selectOfAnon" (formula "90") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "90"))
                                                                                    (rule "dismissNonSelectedField" (formula "90") (term "0,0,1,1,0,1"))
                                                                                    (rule "elementOfSingleton" (formula "90") (term "0,0,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "90") (term "0,0,1,1,0,1"))
                                                                                    (rule "ifthenelse_split" (formula "90") (term "1"))
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                       (rule "selectOfCreate" (formula "1") (term "0,0,1,1"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "2")) (ifInst ""  (formula "69")))
                                                                                       (rule "castDel" (formula "1") (term "0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                       (rule "orRight" (formula "90"))
                                                                                       (rule "selectOfCreate" (formula "89") (term "0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                                       (rule "castDel" (formula "89") (term "0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89"))
                                                                                       (rule "selectOfStore" (formula "90") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "86")))
                                                                                       (rule "selectOfStore" (formula "90") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                                       (rule "castDel" (formula "90") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "90"))
                                                                                       (rule "closeTrue" (formula "90"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_154 = o_0 ∧ java.lang.StringBuilder::$str = f_0 FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "86") (term "0,0,1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "selectOfCreate" (formula "88") (term "0"))
                                                                  (rule "castDel" (formula "88") (term "1,0"))
                                                                  (rule "ifthenelse_split" (formula "88") (term "0"))
                                                                  (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "91") (term "1") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "3")))
                                                                     (rule "ifthenelse_split" (formula "91") (term "1"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "selectOfAnonEQ" (formula "91") (term "0,0,0,1") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_negated" (formula "91") (term "0,0,0"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "ifthenelse_split" (formula "91") (term "0,0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                           (rule "castDel" (formula "3") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "selectOfAnonEQ" (formula "91") (term "0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")))
                                                                           (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "91") (term "0"))
                                                                           (rule "ifthenelse_split" (formula "91") (term "0"))
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                               (builtin "One Step Simplification" (formula "92"))
                                                                              (rule "orRight" (formula "92"))
                                                                              (rule "dismissNonSelectedField" (formula "92") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "92") (term "0"))
                                                                              (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "93")))
                                                                              (rule "castDel" (formula "3") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "closeFalse" (formula "3"))
                                                                           )
                                                                           (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "orRight" (formula "91"))
                                                                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "92")) (ifInst ""  (formula "93")))
                                                                              (rule "castDel" (formula "2") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "89") (term "0,0,0,1") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "89"))
                                                                        (rule "ifthenelse_split" (formula "89") (term "0,0,0,1"))
                                                                        (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "selectOfAnonEQ" (formula "94") (term "1") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "45"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                           (rule "selectOfAnonEQ" (formula "93") (term "0,0,1") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                           (rule "ifthenelse_negated" (formula "93") (term "0,0"))
                                                                           (rule "ifthenelse_split" (formula "93") (term "0,0"))
                                                                           (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                              (rule "selectOfCreate" (formula "3") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                              (rule "castDel" (formula "3") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "closeFalse" (formula "3"))
                                                                           )
                                                                           (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                                              (rule "castDel" (formula "2") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "93") (term "1") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "3")) (ifInst ""  (formula "89")))
                                                                           (rule "selectOfAnonEQ" (formula "92") (term "0,0,1") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "89")) (ifInst ""  (formula "89")))
                                                                           (rule "selectOfAnonEQ" (formula "90") (term "0,0,0,1") (ifseqformula "43"))
                                                                            (builtin "One Step Simplification" (formula "90"))
                                                                           (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "90") (term "0,0,0,1,0,0,0,0,1"))
                                                                           (rule "ifthenelse_split" (formula "90") (term "0,0,0,1"))
                                                                           (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                                              (rule "castDel" (formula "2") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                           (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                               (builtin "One Step Simplification" (formula "91"))
                                                                              (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,1"))
                                                                              (rule "selectOfCreate" (formula "91") (term "0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "91") (term "0,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "91"))
                                                                              (rule "selectOfCreate" (formula "90") (term "0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "90") (term "0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "90"))
                                                                              (rule "selectOfAnonEQ" (formula "89") (term "0,0,1") (ifseqformula "43"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,1,0,0,0,1"))
                                                                              (rule "selectOfAnon" (formula "89") (term "2,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "2,2,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,1,0,2,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "2,2,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,1,0,2,0,0,1"))
                                                                              (rule "selectOfCreate" (formula "89") (term "2,2,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                              (rule "castDel" (formula "89") (term "2,2,0,0,1"))
                                                                              (rule "selectOfAnonEQ" (formula "92") (term "1") (ifseqformula "43"))
                                                                               (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "3")))
                                                                              (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,1,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,1,0,1"))
                                                                              (rule "ifthenelse_split" (formula "89") (term "2,0,0,1"))
                                                                              (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "ifthenelse_split" (formula "91") (term "0,0,1"))
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "selectOfCreate" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                                    (rule "castDel" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                    (rule "ifthenelse_split" (formula "95") (term "1"))
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                       (rule "close" (formula "92") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                       (rule "selectOfAnon" (formula "95") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1"))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1"))
                                                                                       (rule "ifthenelse_negated" (formula "95") (term "1"))
                                                                                       (rule "selectOfStore" (formula "95") (term "1,1"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "89")))
                                                                                       (rule "ifthenelse_split" (formula "95") (term "1"))
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                          (rule "selectOfStore" (formula "96") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "94")))
                                                                                          (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                                          (rule "castDel" (formula "1") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "selectOfCreate" (formula "96") (term "1"))
                                                                                          (rule "castDel" (formula "96") (term "1,1"))
                                                                                          (rule "ifthenelse_split" (formula "96") (term "1"))
                                                                                          (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                              (builtin "One Step Simplification" (formula "97"))
                                                                                             (rule "closeTrue" (formula "97"))
                                                                                          )
                                                                                          (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                             (rule "selectOfCreate" (formula "92") (term "0,0,0,1"))
                                                                                              (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "2")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                                             (rule "castDel" (formula "92") (term "0,0,0"))
                                                                                              (builtin "One Step Simplification" (formula "92"))
                                                                                             (rule "selectOfCreate" (formula "3") (term "0,0"))
                                                                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                                             (rule "castDel" (formula "3") (term "0,0"))
                                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                                             (rule "closeFalse" (formula "3"))
                                                                                          )
                                                                                       )
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                          (rule "selectOfCreate" (formula "95") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                                                          (rule "castDel" (formula "95") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "95"))
                                                                                          (rule "closeTrue" (formula "95"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                  (builtin "One Step Simplification" (formula "90"))
                                                                                 (rule "ifthenelse_split" (formula "93") (term "1"))
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                                                    (rule "castDel" (formula "2") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "closeFalse" (formula "2"))
                                                                                 )
                                                                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                    (rule "selectOfCreate" (formula "93") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                                    (rule "castDel" (formula "93") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "93"))
                                                                                    (rule "selectOfAnon" (formula "93") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "3")))
                                                                                    (rule "dismissNonSelectedField" (formula "93") (term "0,0,1,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "93") (term "0,0,1,0,1"))
                                                                                    (rule "selectOfStore" (formula "93") (term "2,1"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "89")) (ifInst ""  (formula "87")))
                                                                                    (rule "selectOfStore" (formula "93") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "91")))
                                                                                    (rule "selectOfCreate" (formula "93") (term "1"))
                                                                                    (rule "castDel" (formula "93") (term "1,1"))
                                                                                    (rule "ifthenelse_split" (formula "93") (term "1"))
                                                                                    (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                        (builtin "One Step Simplification" (formula "94"))
                                                                                       (rule "closeTrue" (formula "94"))
                                                                                    )
                                                                                    (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                       (rule "selectOfCreate" (formula "89") (term "0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                                       (rule "castDel" (formula "89") (term "0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89"))
                                                                                       (rule "selectOfCreate" (formula "89") (term "0,0,0,1,0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                                       (rule "castDel" (formula "89") (term "0,0,0,1,0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89"))
                                                                                       (rule "false_right" (formula "90"))
                                                                                       (rule "notLeft" (formula "2"))
                                                                                       (rule "eqSymm" (formula "86") (term "0"))
                                                                                       (rule "eqSymm" (formula "86") (term "1"))
                                                                                       (rule "eqSymm" (formula "85") (term "0,0,1"))
                                                                                       (rule "eqSymm" (formula "88") (term "0"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "eqSymm" (formula "90"))
                                                                                       (rule "eqSymm" (formula "88") (term "1"))
                                                                                       (rule "eqSymm" (formula "88") (term "0,0"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "replace_known_left" (formula "86") (term "0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "86"))
                                                                                       (rule "replace_known_left" (formula "87") (term "0,1") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "1")) (ifInst ""  (formula "84")))
                                                                                       (rule "false_right" (formula "87"))
                                                                                       (rule "replace_known_left" (formula "87") (term "1") (ifseqformula "2"))
                                                                                        (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                                       (rule "closeTrue" (formula "87"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "89") (term "1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "89"))
                                                                     (rule "ifthenelse_split" (formula "89") (term "1"))
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "selectOfAnonEQ" (formula "88") (term "0,0,0,1") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_negated" (formula "88") (term "0,0,0"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "ifthenelse_split" (formula "88") (term "0,0,0"))
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,0"))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "89") (term "0,0,0") (ifseqformula "43"))
                                                                            (builtin "One Step Simplification" (formula "89"))
                                                                           (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "89") (term "0,0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "89") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "69")))
                                                                           (rule "castDel" (formula "89") (term "1,0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "89"))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "43"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                                           (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "selectCreatedOfAnon" (formula "1") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                                                           (rule "ifthenelse_split" (formula "1") (term "1,0"))
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                              (rule "selectOfCreate" (formula "1") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                                              (rule "castDel" (formula "1") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "notLeft" (formula "3"))
                                                                              (rule "notLeft" (formula "2"))
                                                                              (rule "notRight" (formula "89"))
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "close" (formula "62") (ifseqformula "2"))
                                                                           )
                                                                           (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                              (rule "selectOfCreate" (formula "62") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "70")))
                                                                              (rule "castDel" (formula "62") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "62"))
                                                                              (rule "orRight" (formula "62"))
                                                                              (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                              (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                                 (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "72")) (ifInst ""  (formula "2")))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "notRight" (formula "91"))
                                                                                 (rule "notLeft" (formula "3"))
                                                                                 (rule "orRight" (formula "61"))
                                                                                 (rule "orRight" (formula "61"))
                                                                                 (rule "orRight" (formula "61"))
                                                                                 (rule "close" (formula "62") (ifseqformula "2"))
                                                                              )
                                                                              (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                                 (rule "orRight" (formula "62"))
                                                                                 (rule "selectOfCreate" (formula "62") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "64")) (ifInst ""  (formula "73")) (ifInst ""  (formula "65")))
                                                                                 (rule "false_right" (formula "62"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "notRight" (formula "92"))
                                                                                 (rule "notLeft" (formula "3"))
                                                                                 (rule "orRight" (formula "61"))
                                                                                 (rule "orRight" (formula "61"))
                                                                                 (rule "close" (formula "62") (ifseqformula "2"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0") (ifseqformula "42"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "2") (term "0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "2") (term "1,0,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "88") (term "0") (ifseqformula "42"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "orRight" (formula "88"))
                                                                           (rule "orRight" (formula "88"))
                                                                           (rule "dismissNonSelectedField" (formula "88") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "88") (term "0"))
                                                                           (rule "selectOfCreate" (formula "88") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "88") (term "1,0"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "orRight" (formula "88"))
                                                                           (rule "notRight" (formula "92"))
                                                                           (rule "notLeft" (formula "2"))
                                                                           (rule "notLeft" (formula "2"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "eqSymm" (formula "93") (term "0"))
                                                                           (rule "eqSymm" (formula "93") (term "1"))
                                                                           (rule "eqSymm" (formula "93") (term "0,0"))
                                                                           (rule "eqSymm" (formula "94"))
                                                                           (rule "eqSymm" (formula "86") (term "0,0,1"))
                                                                           (rule "eqSymm" (formula "87") (term "0"))
                                                                           (rule "eqSymm" (formula "89"))
                                                                           (rule "eqSymm" (formula "87") (term "1"))
                                                                           (rule "replace_known_right" (formula "87") (term "0") (ifseqformula "89"))
                                                                            (builtin "One Step Simplification" (formula "87"))
                                                                           (rule "false_right" (formula "87"))
                                                                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "88"))
                                                                            (builtin "One Step Simplification" (formula "85"))
                                                                           (rule "false_right" (formula "85"))
                                                                           (rule "replace_known_right" (formula "85") (term "1,0,1") (ifseqformula "88"))
                                                                            (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "61")) (ifInst ""  (formula "87")))
                                                                           (rule "closeTrue" (formula "85"))
                                                                        )
                                                                     )
                                                                     (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_append = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "86") (term "0,0,0,1") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "86"))
                                                                        (rule "ifthenelse_split" (formula "86") (term "0,0,0,1"))
                                                                        (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "selectOfAnonEQ" (formula "91") (term "0,0,1") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "selectOfAnonEQ" (formula "92") (term "1") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "42"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                           (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                                                                           (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "notRight" (formula "91"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "orRight" (formula "60"))
                                                                           (rule "eqSymm" (formula "89") (term "0,0,1"))
                                                                           (rule "eqSymm" (formula "95"))
                                                                           (rule "eqSymm" (formula "93") (term "0"))
                                                                           (rule "eqSymm" (formula "93") (term "1"))
                                                                           (rule "eqSymm" (formula "93") (term "0,0"))
                                                                           (rule "eqSymm" (formula "90") (term "0"))
                                                                           (rule "eqSymm" (formula "90") (term "1"))
                                                                           (rule "eqSymm" (formula "60"))
                                                                           (rule "replace_known_right" (formula "90") (term "0") (ifseqformula "60"))
                                                                            (builtin "One Step Simplification" (formula "90"))
                                                                           (rule "false_right" (formula "90"))
                                                                           (rule "replace_known_right" (formula "88") (term "0") (ifseqformula "60"))
                                                                            (builtin "One Step Simplification" (formula "88"))
                                                                           (rule "false_right" (formula "88"))
                                                                           (rule "replace_known_right" (formula "89") (term "0,0") (ifseqformula "60"))
                                                                            (builtin "One Step Simplification" (formula "89"))
                                                                           (rule "false_right" (formula "89"))
                                                                           (rule "replace_known_left" (formula "89") (term "0,0,1") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "64")))
                                                                           (rule "false_right" (formula "89"))
                                                                           (rule "replace_known_right" (formula "88") (term "0,0") (ifseqformula "64"))
                                                                            (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "60")) (ifInst ""  (formula "61")))
                                                                           (rule "closeTrue" (formula "88"))
                                                                        )
                                                                        (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "90") (term "0,0,1") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "86")) (ifInst ""  (formula "86")))
                                                                           (rule "selectOfAnonEQ" (formula "87") (term "0,0,0,1") (ifseqformula "40"))
                                                                            (builtin "One Step Simplification" (formula "87"))
                                                                           (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,1,0,0,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "87") (term "0,0,0,1,0,0,0,0,1"))
                                                                           (rule "selectOfAnonEQ" (formula "86") (term "0,0,1") (ifseqformula "40"))
                                                                            (builtin "One Step Simplification" (formula "86"))
                                                                           (rule "dismissNonSelectedField" (formula "86") (term "0,0,0,1,0,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "86") (term "0,0,0,1,0,0,0,1"))
                                                                           (rule "selectCreatedOfAnon" (formula "86") (term "2,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "86") (term "0,0,2,0,0,1"))
                                                                           (rule "dismissNonSelectedField" (formula "86") (term "0,0,2,0,0,1"))
                                                                           (rule "selectOfCreate" (formula "86") (term "0,0,0,1,0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "66")))
                                                                           (rule "castDel" (formula "86") (term "1,0,0,0,1,0,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "86"))
                                                                           (rule "ifthenelse_split" (formula "86") (term "0,0,1"))
                                                                           (branch " ¬o_0 = null ∧ ¬( result_154 = o_0 ∨ o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "selectCreatedOfAnon" (formula "89") (term "2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "89") (term "0,0,2,0,0,0,1"))
                                                                              (rule "selectOfCreate" (formula "89") (term "0,0,2,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                                                                              (rule "castDel" (formula "89") (term "1,0,0,2,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "ifthenelse_negated" (formula "89") (term "0,0,0"))
                                                                              (rule "selectOfCreate" (formula "89") (term "0,0,0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "68")))
                                                                              (rule "castDel" (formula "89") (term "1,0,0,0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "89"))
                                                                              (rule "ifthenelse_split" (formula "89") (term "1,0,0,0"))
                                                                              (branch "result_154 = o_0 ∨ o_0.<created> = TRUE TRUE"
                                                                                  (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "1")))
                                                                                 (rule "selectOfAnonEQ" (formula "93") (term "1") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "2")))
                                                                                 (rule "elementOfSingleton" (formula "93") (term "0,0,0,1"))
                                                                                 (rule "ifthenelse_split" (formula "93") (term "1"))
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                                    (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1") (ifseqformula "44"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "selectOfCreate" (formula "1") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                                                                    (rule "castDel" (formula "1") (term "1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                                    (rule "orRight" (formula "93"))
                                                                                    (rule "selectOfAnonEQ" (formula "94") (term "1") (ifseqformula "43"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "2")))
                                                                                    (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,0,1"))
                                                                                    (rule "ifthenelse_negated" (formula "94") (term "1"))
                                                                                    (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1"))
                                                                                    (rule "selectOfAnon" (formula "94") (term "1,1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "2")))
                                                                                    (rule "dismissNonSelectedField" (formula "94") (term "0,0,1,0,1,1"))
                                                                                    (rule "elementOfSingleton" (formula "94") (term "0,0,0,1,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "94") (term "0,0,1,0,1,1"))
                                                                                    (rule "selectOfCreate" (formula "94") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "69")) (ifInst ""  (formula "88")))
                                                                                    (rule "castDel" (formula "94") (term "1,0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "1")))
                                                                                    (rule "ifthenelse_negated" (formula "94") (term "1"))
                                                                                    (rule "selectOfCreate" (formula "94") (term "0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "69")))
                                                                                    (rule "castDel" (formula "94") (term "1,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "1")))
                                                                                    (rule "selectOfStore" (formula "94") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "87")))
                                                                                    (rule "selectOfStore" (formula "94") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "90")))
                                                                                    (rule "selectCreatedOfAnonEQ" (formula "93") (term "0,0") (ifseqformula "43"))
                                                                                     (builtin "One Step Simplification" (formula "93"))
                                                                                    (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0"))
                                                                                    (rule "selectOfCreate" (formula "93") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "69")))
                                                                                    (rule "castDel" (formula "93") (term "1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "1")))
                                                                                    (rule "selectOfCreate" (formula "93") (term "1"))
                                                                                    (rule "castDel" (formula "93") (term "1,1"))
                                                                                    (rule "ifthenelse_split" (formula "93") (term "1"))
                                                                                    (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                       (rule "close" (formula "92") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                        (builtin "One Step Simplification" (formula "93"))
                                                                                       (rule "closeTrue" (formula "93"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "result_154 = o_0 ∨ o_0.<created> = TRUE FALSE"
                                                                                 (rule "orRight" (formula "89"))
                                                                                 (rule "ifthenelse_split" (formula "91") (term "0,0,0"))
                                                                                 (branch " result_154 = o_0 ∨ o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                                    (rule "selectOfAnonEQ" (formula "96") (term "1") (ifseqformula "49"))
                                                                                     (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "2")))
                                                                                    (rule "elementOfSingleton" (formula "96") (term "0,0,0,1"))
                                                                                    (rule "ifthenelse_split" (formula "96") (term "1"))
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                                       (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1") (ifseqformula "44"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "selectOfCreate" (formula "1") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                       (rule "false_right" (formula "96"))
                                                                                       (rule "notLeft" (formula "1"))
                                                                                       (rule "notLeft" (formula "3"))
                                                                                       (rule "close" (formula "61") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                                       (rule "orRight" (formula "96"))
                                                                                       (rule "selectOfAnonEQ" (formula "96") (term "0,0") (ifseqformula "43"))
                                                                                        (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "2")))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,0,0,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,0,0,0,0"))
                                                                                       (rule "ifthenelse_negated" (formula "96") (term "0,0"))
                                                                                       (rule "selectOfAnon" (formula "96") (term "1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "2")))
                                                                                       (rule "ifthenelse_negated" (formula "96") (term "1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "1,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "1,1,0,0"))
                                                                                       (rule "selectOfCreate" (formula "96") (term "0,0,1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                       (rule "ifthenelse_split" (formula "96") (term "0,0"))
                                                                                       (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                                          (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                          (rule "selectOfAnonEQ" (formula "98") (term "1") (ifseqformula "44"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "3")) (ifInst ""  (formula "1")))
                                                                                          (rule "selectOfAnon" (formula "98") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "3")))
                                                                                          (rule "dismissNonSelectedField" (formula "98") (term "0,0,1,0,1"))
                                                                                          (rule "elementOfSingleton" (formula "98") (term "0,0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "98") (term "0,0,1,0,1"))
                                                                                          (rule "selectOfStore" (formula "98") (term "2,1"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "89")) (ifInst ""  (formula "88")))
                                                                                          (rule "ifthenelse_negated" (formula "98") (term "1"))
                                                                                          (rule "selectOfCreate" (formula "98") (term "0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                          (rule "false_right" (formula "96"))
                                                                                          (rule "notLeft" (formula "3"))
                                                                                          (rule "notRight" (formula "93"))
                                                                                          (rule "notRight" (formula "96"))
                                                                                          (rule "notLeft" (formula "4"))
                                                                                          (rule "close" (formula "62") (ifseqformula "3"))
                                                                                       )
                                                                                       (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                                          (rule "orRight" (formula "96"))
                                                                                          (rule "selectOfCreate" (formula "96") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                          (rule "selectOfAnonEQ" (formula "98") (term "1") (ifseqformula "43"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "2")) (ifInst ""  (formula "96")))
                                                                                          (rule "dismissNonSelectedField" (formula "98") (term "0,0,0,1"))
                                                                                          (rule "ifthenelse_negated" (formula "98") (term "1"))
                                                                                          (rule "dismissNonSelectedField" (formula "98") (term "0,0,1"))
                                                                                          (rule "selectOfCreate" (formula "98") (term "0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                          (rule "false_right" (formula "95"))
                                                                                          (rule "notRight" (formula "96"))
                                                                                          (rule "notLeft" (formula "3"))
                                                                                          (rule "notRight" (formula "93"))
                                                                                          (rule "notLeft" (formula "4"))
                                                                                          (rule "close" (formula "62") (ifseqformula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch " result_154 = o_0 ∨ o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                                    (rule "orRight" (formula "91"))
                                                                                    (rule "orRight" (formula "91"))
                                                                                    (rule "selectOfAnonEQ" (formula "96") (term "1") (ifseqformula "48"))
                                                                                     (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "1")))
                                                                                    (rule "elementOfSingleton" (formula "96") (term "0,0,0,1"))
                                                                                    (rule "ifthenelse_split" (formula "96") (term "1"))
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                                       (rule "selectOfAnonEQ" (formula "1") (term "0,0,1") (ifseqformula "43"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "2")) (ifInst ""  (formula "92")))
                                                                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                                                       (rule "ifthenelse_negated" (formula "1") (term "0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "93")))
                                                                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "2") (term "0,0"))
                                                                                          (rule "selectOfCreate" (formula "2") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                          (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                          (rule "closeFalse" (formula "1"))
                                                                                       )
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                          (rule "selectOfCreate" (formula "62") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "91")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                                                          (rule "false_right" (formula "96"))
                                                                                          (rule "notLeft" (formula "2"))
                                                                                          (rule "notRight" (formula "93"))
                                                                                          (rule "notLeft" (formula "3"))
                                                                                          (rule "notLeft" (formula "2"))
                                                                                          (rule "orRight" (formula "61"))
                                                                                          (rule "orRight" (formula "61"))
                                                                                          (rule "eqSymm" (formula "90"))
                                                                                          (rule "eqSymm" (formula "87") (term "0"))
                                                                                          (rule "eqSymm" (formula "87") (term "1"))
                                                                                          (rule "eqSymm" (formula "94") (term "0,0"))
                                                                                          (rule "eqSymm" (formula "95"))
                                                                                          (rule "eqSymm" (formula "93") (term "0"))
                                                                                          (rule "eqSymm" (formula "93") (term "1"))
                                                                                          (rule "eqSymm" (formula "86") (term "0,0,1"))
                                                                                          (rule "replace_known_right" (formula "89") (term "0,1") (ifseqformula "60"))
                                                                                           (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "61")))
                                                                                          (rule "closeTrue" (formula "89"))
                                                                                       )
                                                                                    )
                                                                                    (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                                       (rule "orRight" (formula "96"))
                                                                                       (rule "selectOfAnonEQ" (formula "96") (term "0,0") (ifseqformula "42"))
                                                                                        (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "1")) (ifInst ""  (formula "91")))
                                                                                       (rule "ifthenelse_negated" (formula "96") (term "0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,0,0"))
                                                                                       (rule "selectCreatedOfAnon" (formula "96") (term "1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "96") (term "0,0,1,0,0"))
                                                                                       (rule "ifthenelse_split" (formula "96") (term "1,0,0"))
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")))
                                                                                          (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                          (rule "closeFalse" (formula "1"))
                                                                                       )
                                                                                       (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                          (rule "selectOfCreate" (formula "96") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                          (rule "ifthenelse_split" (formula "96") (term "0,0"))
                                                                                          (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                             (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                             (rule "selectOfCreate" (formula "96") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                             (rule "selectOfAnonEQ" (formula "97") (term "1") (ifseqformula "42"))
                                                                                              (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")) (ifInst ""  (formula "91")))
                                                                                             (rule "ifthenelse_negated" (formula "97") (term "1"))
                                                                                             (rule "dismissNonSelectedField" (formula "97") (term "0,0,1"))
                                                                                             (rule "dismissNonSelectedField" (formula "97") (term "0,0,1"))
                                                                                             (rule "selectOfAnon" (formula "97") (term "1,1"))
                                                                                              (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")))
                                                                                             (rule "elementOfSingleton" (formula "97") (term "0,0,0,1,1"))
                                                                                             (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                             (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                             (rule "ifthenelse_split" (formula "97") (term "1,1"))
                                                                                             (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                                (rule "selectOfCreate" (formula "98") (term "0,0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                                (rule "selectOfCreate" (formula "1") (term "0,0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                                (rule "false_right" (formula "96"))
                                                                                                (rule "true_left" (formula "1"))
                                                                                                (rule "notLeft" (formula "2"))
                                                                                                (rule "notRight" (formula "95"))
                                                                                                (rule "notRight" (formula "93"))
                                                                                                (rule "notLeft" (formula "3"))
                                                                                                (rule "orRight" (formula "62"))
                                                                                                (rule "orRight" (formula "62"))
                                                                                                (rule "eqSymm" (formula "86") (term "0,0,1"))
                                                                                                (rule "eqSymm" (formula "95"))
                                                                                                (rule "eqSymm" (formula "93") (term "0"))
                                                                                                (rule "eqSymm" (formula "94") (term "0,0"))
                                                                                                (rule "eqSymm" (formula "90"))
                                                                                                (rule "eqSymm" (formula "93") (term "1"))
                                                                                                (rule "eqSymm" (formula "87") (term "0"))
                                                                                                (rule "eqSymm" (formula "87") (term "1"))
                                                                                                (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "true_left" (formula "1"))
                                                                                                (rule "replace_known_right" (formula "88") (term "0,0") (ifseqformula "60"))
                                                                                                 (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")))
                                                                                                (rule "false_right" (formula "88"))
                                                                                                (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "88"))
                                                                                                 (builtin "One Step Simplification" (formula "84"))
                                                                                                (rule "false_right" (formula "84"))
                                                                                                (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "87"))
                                                                                                 (builtin "One Step Simplification" (formula "85"))
                                                                                                (rule "false_right" (formula "85"))
                                                                                                (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "86"))
                                                                                                 (builtin "One Step Simplification" (formula "85"))
                                                                                                (rule "false_right" (formula "85"))
                                                                                                (rule "replace_known_right" (formula "88") (term "0,1,0") (ifseqformula "68"))
                                                                                                 (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "85")))
                                                                                                (rule "false_right" (formula "88"))
                                                                                                (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "60"))
                                                                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "85")) (ifInst ""  (formula "86")))
                                                                                                (rule "closeTrue" (formula "84"))
                                                                                             )
                                                                                             (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                                (rule "orRight" (formula "97"))
                                                                                                (rule "selectOfStore" (formula "98") (term "1,1"))
                                                                                                 (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "86")))
                                                                                                (rule "ifthenelse_split" (formula "98") (term "1"))
                                                                                                (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                                   (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                                   (rule "selectOfCreate" (formula "97") (term "0,0"))
                                                                                                    (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                                   (rule "closeTrue" (formula "97"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch " ¬o_0 = null ∧ ¬( result_154 = o_0 ∨ o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                               (builtin "One Step Simplification" (formula "87"))
                                                                              (rule "selectOfCreate" (formula "87") (term "0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "66")))
                                                                              (rule "castDel" (formula "87") (term "1,0,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "86")))
                                                                              (rule "selectCreatedOfAnon" (formula "87") (term "2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "87") (term "0,0,2,0,0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "87") (term "0,0,2,0,0,0,1"))
                                                                              (rule "ifthenelse_split" (formula "87") (term "2,0,0,0,1"))
                                                                              (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")))
                                                                                 (rule "selectOfAnonEQ" (formula "91") (term "1") (ifseqformula "47"))
                                                                                  (builtin "One Step Simplification" (formula "91"))
                                                                                 (rule "elementOfSingleton" (formula "91") (term "0,0,0,1"))
                                                                                 (rule "ifthenelse_split" (formula "91") (term "1"))
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                                    (rule "selectOfCreate" (formula "2") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                                                                                    (rule "castDel" (formula "2") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,1") (ifseqformula "42"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                                    (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")))
                                                                                    (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                                                    (rule "closeFalse" (formula "2"))
                                                                                 )
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                                    (rule "orRight" (formula "91"))
                                                                                    (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                                                                    (rule "castDel" (formula "1") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "selectCreatedOfAnonEQ" (formula "91") (term "0,0,1") (ifseqformula "41"))
                                                                                     (builtin "One Step Simplification" (formula "91"))
                                                                                    (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,1"))
                                                                                    (rule "selectOfCreate" (formula "91") (term "0,0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "67")))
                                                                                    (rule "castDel" (formula "91") (term "1,0,0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "1")))
                                                                                    (rule "selectOfAnonEQ" (formula "91") (term "1") (ifseqformula "41"))
                                                                                     (builtin "One Step Simplification" (formula "91"))
                                                                                    (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,1,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,1,0,1"))
                                                                                    (rule "ifthenelse_split" (formula "91") (term "1"))
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")))
                                                                                       (rule "castDel" (formula "2") (term "1,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                       (rule "selectOfAnon" (formula "92") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "92"))
                                                                                       (rule "dismissNonSelectedField" (formula "92") (term "0,0,1,1,0,1"))
                                                                                       (rule "elementOfSingleton" (formula "92") (term "0,0,0,1"))
                                                                                       (rule "dismissNonSelectedField" (formula "92") (term "0,0,1,1,0,1"))
                                                                                       (rule "selectOfCreate" (formula "92") (term "0,0,1,1,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "86")) (ifInst ""  (formula "67")))
                                                                                       (rule "castDel" (formula "92") (term "1,0,0,1,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "84")))
                                                                                       (rule "selectOfStore" (formula "92") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "85")))
                                                                                       (rule "selectOfStore" (formula "92") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "88")))
                                                                                       (rule "selectOfCreate" (formula "92") (term "1"))
                                                                                       (rule "castDel" (formula "92") (term "1,1"))
                                                                                       (rule "ifthenelse_split" (formula "92") (term "1"))
                                                                                       (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                          (rule "close" (formula "90") (ifseqformula "1"))
                                                                                       )
                                                                                       (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                           (builtin "One Step Simplification" (formula "92"))
                                                                                          (rule "closeTrue" (formula "92"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                 (rule "selectOfAnonEQ" (formula "92") (term "1") (ifseqformula "46"))
                                                                                  (builtin "One Step Simplification" (formula "92"))
                                                                                 (rule "elementOfSingleton" (formula "92") (term "0,0,0,1"))
                                                                                 (rule "ifthenelse_split" (formula "92") (term "1"))
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE TRUE"
                                                                                    (rule "ifthenelse_split" (formula "89") (term "0,0,0,1"))
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")))
                                                                                       (rule "castDel" (formula "2") (term "1,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "selectOfCreate" (formula "90") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "69")))
                                                                                       (rule "castDel" (formula "90") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "90"))
                                                                                       (rule "orRight" (formula "90"))
                                                                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,1,1") (ifseqformula "43"))
                                                                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "88")) (ifInst ""  (formula "1")))
                                                                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "selectOfCreate" (formula "3") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                       (rule "false_right" (formula "95"))
                                                                                       (rule "notLeft" (formula "2"))
                                                                                       (rule "notLeft" (formula "2"))
                                                                                       (rule "notLeft" (formula "1"))
                                                                                       (rule "orRight" (formula "61"))
                                                                                       (rule "orRight" (formula "60"))
                                                                                       (rule "orRight" (formula "61"))
                                                                                       (rule "eqSymm" (formula "86") (term "0,0,1"))
                                                                                       (rule "eqSymm" (formula "87") (term "0"))
                                                                                       (rule "eqSymm" (formula "93") (term "0"))
                                                                                       (rule "eqSymm" (formula "93") (term "1"))
                                                                                       (rule "eqSymm" (formula "87") (term "1"))
                                                                                       (rule "eqSymm" (formula "94"))
                                                                                       (rule "eqSymm" (formula "89") (term "0,0,0,1"))
                                                                                       (rule "eqSymm" (formula "93") (term "0,0"))
                                                                                       (rule "eqSymm" (formula "90"))
                                                                                       (rule "replace_known_right" (formula "87") (term "0") (ifseqformula "90"))
                                                                                        (builtin "One Step Simplification" (formula "87"))
                                                                                       (rule "false_right" (formula "87"))
                                                                                       (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "89"))
                                                                                        (builtin "One Step Simplification" (formula "85"))
                                                                                       (rule "false_right" (formula "85"))
                                                                                       (rule "replace_known_right" (formula "85") (term "1,0,1") (ifseqformula "89"))
                                                                                        (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "59")) (ifInst ""  (formula "88")))
                                                                                       (rule "closeTrue" (formula "85"))
                                                                                    )
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                       (rule "selectOfCreate" (formula "88") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "67")))
                                                                                       (rule "castDel" (formula "88") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "88"))
                                                                                       (rule "orRight" (formula "88"))
                                                                                       (rule "selectOfCreate" (formula "90") (term "0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "88")) (ifInst ""  (formula "67")) (ifInst ""  (formula "89")))
                                                                                       (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,1") (ifseqformula "41"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
                                                                                       (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                       (rule "false_right" (formula "95"))
                                                                                       (rule "notLeft" (formula "1"))
                                                                                       (rule "notLeft" (formula "1"))
                                                                                       (rule "orRight" (formula "59"))
                                                                                       (rule "eqSymm" (formula "86") (term "0,0,1"))
                                                                                       (rule "eqSymm" (formula "89") (term "0,0,0,1"))
                                                                                       (rule "eqSymm" (formula "96"))
                                                                                       (rule "eqSymm" (formula "87") (term "0"))
                                                                                       (rule "eqSymm" (formula "87") (term "1"))
                                                                                       (rule "eqSymm" (formula "95") (term "0,0"))
                                                                                       (rule "eqSymm" (formula "90"))
                                                                                       (rule "eqSymm" (formula "94") (term "0"))
                                                                                       (rule "eqSymm" (formula "94") (term "1"))
                                                                                       (rule "replace_known_right" (formula "92") (term "0,0") (ifseqformula "61"))
                                                                                        (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "59")))
                                                                                       (rule "closeTrue" (formula "92"))
                                                                                    )
                                                                                 )
                                                                                 (branch " o_0 = result_154 ∧ f_0 = java.lang.StringBuilder::$str ∧ ¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_hexCharacters = TRUE FALSE"
                                                                                    (rule "orRight" (formula "92"))
                                                                                    (rule "ifthenelse_split" (formula "88") (term "0,0,0,1"))
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "selectOfCreate" (formula "89") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "68")))
                                                                                       (rule "castDel" (formula "89") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "89"))
                                                                                       (rule "orRight" (formula "89"))
                                                                                       (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                       (rule "selectOfAnonEQ" (formula "95") (term "0,0,1") (ifseqformula "42"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,0,0,0"))
                                                                                       (rule "ifthenelse_negated" (formula "95") (term "0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,0,0"))
                                                                                       (rule "selectOfAnon" (formula "95") (term "1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "1")))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "2,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "2,1,0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1,0,0"))
                                                                                       (rule "ifthenelse_negated" (formula "95") (term "1,0,0"))
                                                                                       (rule "selectOfCreate" (formula "95") (term "0,0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                       (rule "selectOfCreate" (formula "95") (term "0,0,1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                       (rule "ifthenelse_split" (formula "95") (term "0,0"))
                                                                                       (branch "o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                                          (rule "close" (formula "96") (ifseqformula "3"))
                                                                                       )
                                                                                       (branch "o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                                          (rule "selectOfAnonEQ" (formula "97") (term "1") (ifseqformula "42"))
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")) (ifInst ""  (formula "95")))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,0,1"))
                                                                                          (rule "ifthenelse_negated" (formula "97") (term "1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,1"))
                                                                                          (rule "selectOfAnon" (formula "97") (term "1,1"))
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")))
                                                                                          (rule "elementOfSingleton" (formula "97") (term "0,0,0,1,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                          (rule "ifthenelse_split" (formula "97") (term "1"))
                                                                                          (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                             (rule "selectOfCreate" (formula "98") (term "0,0,1,0,1"))
                                                                                              (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "88")) (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                             (rule "selectOfCreate" (formula "1") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                             (rule "selectOfCreate" (formula "97") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                             (rule "false_right" (formula "94"))
                                                                                             (rule "notLeft" (formula "2"))
                                                                                             (rule "notLeft" (formula "1"))
                                                                                             (rule "notRight" (formula "94"))
                                                                                             (rule "eqSymm" (formula "92") (term "0"))
                                                                                             (rule "eqSymm" (formula "92") (term "1"))
                                                                                             (rule "eqSymm" (formula "85") (term "0,0,1"))
                                                                                             (rule "eqSymm" (formula "89"))
                                                                                             (rule "eqSymm" (formula "86") (term "0"))
                                                                                             (rule "eqSymm" (formula "86") (term "1"))
                                                                                             (rule "eqSymm" (formula "94"))
                                                                                             (rule "eqSymm" (formula "92") (term "0,0"))
                                                                                             (rule "eqSymm" (formula "88") (term "0,0,0,1"))
                                                                                             (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "89"))
                                                                                              (builtin "One Step Simplification" (formula "84"))
                                                                                             (rule "false_right" (formula "84"))
                                                                                             (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "88"))
                                                                                              (builtin "One Step Simplification" (formula "85"))
                                                                                             (rule "false_right" (formula "85"))
                                                                                             (rule "replace_known_left" (formula "89") (term "0,0,1") (ifseqformula "1"))
                                                                                              (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "60")))
                                                                                             (rule "false_right" (formula "89"))
                                                                                             (rule "replace_known_right" (formula "89") (term "0,1,0") (ifseqformula "68"))
                                                                                              (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "87")))
                                                                                             (rule "false_right" (formula "89"))
                                                                                             (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "87"))
                                                                                              (builtin "One Step Simplification" (formula "85"))
                                                                                             (rule "false_right" (formula "85"))
                                                                                             (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "60"))
                                                                                              (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "86")) (ifInst ""  (formula "87")))
                                                                                             (rule "closeTrue" (formula "84"))
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                       (rule "selectOfCreate" (formula "87") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "66")))
                                                                                       (rule "castDel" (formula "87") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "87"))
                                                                                       (rule "orRight" (formula "87"))
                                                                                       (rule "selectOfCreate" (formula "89") (term "0,0,0,1"))
                                                                                        (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "87")) (ifInst ""  (formula "66")) (ifInst ""  (formula "88")))
                                                                                       (rule "selectOfAnonEQ" (formula "94") (term "0,0,1") (ifseqformula "40"))
                                                                                        (builtin "One Step Simplification" (formula "94"))
                                                                                       (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1,0,0,0,1"))
                                                                                       (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1,0,0,0,1"))
                                                                                       (rule "ifthenelse_split" (formula "94") (term "0,0,1"))
                                                                                       (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                          (rule "andLeft" (formula "1"))
                                                                                          (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                          (rule "selectOfAnonEQ" (formula "97") (term "1") (ifseqformula "42"))
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,0,0,1"))
                                                                                          (rule "ifthenelse_negated" (formula "97") (term "1"))
                                                                                          (rule "selectOfAnon" (formula "97") (term "1,1"))
                                                                                           (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "1")))
                                                                                          (rule "elementOfSingleton" (formula "97") (term "0,0,0,1,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,1,1"))
                                                                                          (rule "ifthenelse_split" (formula "97") (term "1"))
                                                                                          (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                                             (rule "selectOfStore" (formula "98") (term "2,1"))
                                                                                              (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "88")) (ifInst ""  (formula "87")))
                                                                                             (rule "ifthenelse_negated" (formula "98") (term "1"))
                                                                                             (rule "selectOfStore" (formula "98") (term "1,1"))
                                                                                              (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "94")))
                                                                                             (rule "selectOfCreate" (formula "98") (term "1,1"))
                                                                                             (rule "castDel" (formula "98") (term "1,1,1"))
                                                                                             (rule "ifthenelse_split" (formula "98") (term "1"))
                                                                                             (branch "o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                                (rule "ifthenelse_split" (formula "99") (term "1"))
                                                                                                (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                                   (rule "close" (formula "97") (ifseqformula "1"))
                                                                                                )
                                                                                                (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                                    (builtin "One Step Simplification" (formula "99"))
                                                                                                   (rule "closeTrue" (formula "99"))
                                                                                                )
                                                                                             )
                                                                                             (branch "o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                                (rule "selectOfCreate" (formula "98") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                                (rule "selectOfCreate" (formula "1") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")) (ifInst ""  (formula "69")) (ifInst ""  (formula "91")))
                                                                                                (rule "false_right" (formula "96"))
                                                                                                (rule "notLeft" (formula "3"))
                                                                                                (rule "close" (formula "61") (ifseqformula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch " o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                                             (rule "orRight" (formula "97"))
                                                                                             (rule "selectOfCreate" (formula "97") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                             (rule "false_right" (formula "95"))
                                                                                             (rule "notLeft" (formula "2"))
                                                                                             (rule "notLeft" (formula "1"))
                                                                                             (rule "eqSymm" (formula "84") (term "0,0,1"))
                                                                                             (rule "eqSymm" (formula "92") (term "0"))
                                                                                             (rule "eqSymm" (formula "87") (term "0,0,0,1"))
                                                                                             (rule "eqSymm" (formula "88"))
                                                                                             (rule "eqSymm" (formula "92") (term "1"))
                                                                                             (rule "eqSymm" (formula "95"))
                                                                                             (rule "eqSymm" (formula "92") (term "0,0"))
                                                                                             (rule "eqSymm" (formula "85") (term "0"))
                                                                                             (rule "eqSymm" (formula "85") (term "1"))
                                                                                             (rule "replace_known_right" (formula "90") (term "0,1") (ifseqformula "94"))
                                                                                              (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "59")))
                                                                                             (rule "closeTrue" (formula "90"))
                                                                                          )
                                                                                       )
                                                                                       (branch " ¬o_0 = null ∧ ¬( o_0.<created>@heap[create(result_154)] = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                           (builtin "One Step Simplification" (formula "95"))
                                                                                          (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1"))
                                                                                          (rule "selectOfCreate" (formula "94") (term "0,0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "87")) (ifInst ""  (formula "66")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                                          (rule "selectOfAnonEQ" (formula "94") (term "1") (ifseqformula "40"))
                                                                                           (builtin "One Step Simplification" (formula "94"))
                                                                                          (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1,0,1"))
                                                                                          (rule "selectOfAnon" (formula "94") (term "2,1"))
                                                                                           (builtin "One Step Simplification" (formula "94"))
                                                                                          (rule "dismissNonSelectedField" (formula "94") (term "0,0,1,1,0,2,1"))
                                                                                          (rule "elementOfSingleton" (formula "94") (term "0,0,0,2,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "94") (term "0,0,1,1,0,2,1"))
                                                                                          (rule "selectOfCreate" (formula "94") (term "0,0,0,1,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "87")) (ifInst ""  (formula "66")) (ifInst ""  (formula "85")) (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                                                                          (rule "selectOfStore" (formula "94") (term "2,1"))
                                                                                           (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "84")))
                                                                                          (rule "ifthenelse_split" (formula "94") (term "1"))
                                                                                          (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE TRUE"
                                                                                             (rule "andLeft" (formula "1"))
                                                                                             (rule "selectOfCreate" (formula "2") (term "0,0"))
                                                                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "89")) (ifInst ""  (formula "68")) (ifInst ""  (formula "90")))
                                                                                             (rule "true_left" (formula "2"))
                                                                                             (rule "false_right" (formula "94"))
                                                                                             (rule "notLeft" (formula "1"))
                                                                                             (rule "eqSymm" (formula "92") (term "0"))
                                                                                             (rule "eqSymm" (formula "84") (term "0,0,1"))
                                                                                             (rule "eqSymm" (formula "92") (term "1"))
                                                                                             (rule "eqSymm" (formula "92") (term "0,0"))
                                                                                             (rule "eqSymm" (formula "85") (term "0"))
                                                                                             (rule "eqSymm" (formula "85") (term "1"))
                                                                                             (rule "eqSymm" (formula "93"))
                                                                                             (rule "eqSymm" (formula "87") (term "0,0,0,1"))
                                                                                             (rule "eqSymm" (formula "88"))
                                                                                             (rule "replace_known_right" (formula "90") (term "0,0") (ifseqformula "59"))
                                                                                              (builtin "One Step Simplification" (formula "90"))
                                                                                             (rule "notRight" (formula "90"))
                                                                                             (rule "replace_known_right" (formula "86") (term "0") (ifseqformula "89"))
                                                                                              (builtin "One Step Simplification" (formula "86"))
                                                                                             (rule "false_right" (formula "86"))
                                                                                             (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "88"))
                                                                                              (builtin "One Step Simplification" (formula "84"))
                                                                                             (rule "false_right" (formula "84"))
                                                                                             (rule "replace_known_right" (formula "84") (term "1,0,1") (ifseqformula "88"))
                                                                                              (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "60")) (ifInst ""  (formula "87")))
                                                                                             (rule "closeTrue" (formula "84"))
                                                                                          )
                                                                                          (branch " ¬o_0 = null ∧ ¬o_0.<created>@heap[create(result_154)] = TRUE FALSE"
                                                                                             (rule "selectOfStore" (formula "95") (term "1"))
                                                                                              (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "91")))
                                                                                             (rule "selectOfCreate" (formula "94") (term "0,0,1"))
                                                                                              (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "87")) (ifInst ""  (formula "66")) (ifInst ""  (formula "88")))
                                                                                             (rule "selectOfCreate" (formula "95") (term "1"))
                                                                                             (rule "castDel" (formula "95") (term "1,1"))
                                                                                             (rule "ifthenelse_split" (formula "95") (term "1"))
                                                                                             (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                                                                                (rule "close" (formula "93") (ifseqformula "1"))
                                                                                             )
                                                                                             (branch " result_154 = o_0 ∧ ¬result_154 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                                                                                 (builtin "One Step Simplification" (formula "95"))
                                                                                                (rule "closeTrue" (formula "95"))
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "82") (term "0,0,0,1,0"))
                                                      (rule "precOfInt" (formula "82"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "77"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "81"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "77") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "77") (term "0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "77") (term "0"))
                                                      (rule "mul_literals" (formula "77") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "77") (term "0,0"))
                                                      (rule "mod_axiom" (formula "77") (term "0,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,0,1,0,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,1,0,1"))
                                                      (rule "mod_axiom" (formula "77") (term "0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "77") (term "0,0,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,1"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,0,1"))
                                                      (rule "mod_axiom" (formula "77") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "77") (term "0,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "77") (term "0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "76") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "76") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "0,0,1,1"))
                                                      (rule "mul_literals" (formula "76") (term "0,0,0,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0"))
                                                      (rule "mul_literals" (formula "76") (term "1,0"))
                                                      (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "28") (term "0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0"))
                                                      (rule "qeq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "30"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                      (rule "leq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "polyDiv_pullOut" (formula "67") (term "0,1,0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,2,0,1,0,0,0,0"))
                                                      (rule "equal_literals" (formula "67") (term "0,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "mul_literals" (formula "67") (term "1,0,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,1,1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                                      (rule "polyMod_pullOut" (formula "67") (term "0,0") (inst "polyDivCoeff=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0,0,0"))
                                                      (rule "mod_axiom" (formula "67") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "67") (term "0,0,1,0"))
                                                      (rule "polyMod_pullOut" (formula "67") (term "0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "67") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0,0,1"))
                                                      (rule "mod_axiom" (formula "67") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "67") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "0,0,0,0,0,1"))
                                                      (rule "add_zero_left" (formula "67") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor2" (formula "67") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "67") (term "1,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "67") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "67") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "0,1"))
                                                      (rule "andRight" (formula "67"))
                                                      (branch
                                                         (rule "inEqSimp_leqRight" (formula "67"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                         (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,0"))
                                                         (rule "equal_literals" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "nnf_imp2or" (formula "36") (term "0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0"))
                                                         (rule "nnf_imp2or" (formula "20") (term "0"))
                                                         (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "36") (term "0,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0"))
                                                         (rule "commute_or" (formula "20") (term "0,0"))
                                                         (rule "cnf_rightDist" (formula "36") (term "0"))
                                                         (rule "distr_forallAnd" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "commute_or" (formula "37") (term "0"))
                                                         (rule "cnf_rightDist" (formula "46") (term "0"))
                                                         (rule "distr_forallAnd" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "commute_or" (formula "47") (term "0"))
                                                         (rule "cnf_rightDist" (formula "20") (term "0"))
                                                         (rule "distr_forallAnd" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "commute_or" (formula "21") (term "0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "result_155.<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "result_153.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "6") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "leq_literals" (formula "6") (term "0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "24") (term "0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "24") (ifseqformula "7"))
                                                               (rule "greater_literals" (formula "24") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "mul_literals" (formula "24") (term "1,0"))
                                                               (rule "qeq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "closeFalse" (formula "24"))
                                                            )
                                                            (branch "result_153.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "6") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0"))
                                                               (rule "leq_literals" (formula "6") (term "0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                               (rule "times_zero_1" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "24") (term "0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "24") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "24") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "24") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "qeq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "closeFalse" (formula "24"))
                                                            )
                                                         )
                                                         (branch "result_155.<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "ifthenelse_split" (formula "9") (term "0"))
                                                            (branch "result_153.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "6") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0"))
                                                               (rule "leq_literals" (formula "6") (term "0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "26") (term "0,0"))
                                                               (rule "add_zero_left" (formula "26") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "26") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "26") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "26") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "qeq_literals" (formula "26") (term "0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "closeFalse" (formula "26"))
                                                            )
                                                            (branch "result_153.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                               (rule "times_zero_1" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "26") (term "0,0"))
                                                               (rule "add_zero_left" (formula "26") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                               (rule "inEqSimp_contradInEq5" (formula "26") (ifseqformula "7"))
                                                               (rule "greater_literals" (formula "26") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "mul_literals" (formula "26") (term "1,0"))
                                                               (rule "qeq_literals" (formula "26") (term "0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "closeFalse" (formula "26"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_leqRight" (formula "67"))
                                                         (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(1(#)),
    div(add(add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            length(bytes)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        length(bytes)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "nnf_imp2or" (formula "36") (term "0"))
                                                         (rule "nnf_imp2or" (formula "45") (term "0"))
                                                         (rule "nnf_imp2or" (formula "20") (term "0"))
                                                         (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "36") (term "0,0"))
                                                         (rule "commute_or" (formula "45") (term "0,0"))
                                                         (rule "commute_or" (formula "20") (term "0,0"))
                                                         (rule "cnf_rightDist" (formula "36") (term "0"))
                                                         (rule "distr_forallAnd" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "commute_or" (formula "37") (term "0"))
                                                         (rule "cnf_rightDist" (formula "46") (term "0"))
                                                         (rule "distr_forallAnd" (formula "46"))
                                                         (rule "andLeft" (formula "46"))
                                                         (rule "commute_or" (formula "47") (term "0"))
                                                         (rule "cnf_rightDist" (formula "20") (term "0"))
                                                         (rule "distr_forallAnd" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "commute_or" (formula "21") (term "0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "result_155.<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "result_153.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_0"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "19") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "25") (term "0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                                               (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "25"))
                                                               (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "8"))
                                                               (rule "add_zero_right" (formula "5") (term "1"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1"))
                                                               (rule "applyEq" (formula "26") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "20") (term "1,1"))
                                                               (rule "add_literals" (formula "20") (term "1"))
                                                               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                               (rule "add_literals" (formula "4") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "18") (term "0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "cut_direct" (formula "26") (term "0,0"))
                                                               (branch "CUT: result#9 = null TRUE"
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "cut_direct" (formula "30") (term "0,0"))
                                                                  (branch "CUT: result#2 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                     (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "qeq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
                                                                     (rule "expand_inInt" (formula "34"))
                                                                     (rule "replace_int_MIN" (formula "34") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "34") (term "1,0"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                     (rule "expand_inInt" (formula "43"))
                                                                     (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "leq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                                                     (rule "expand_inInt" (formula "17"))
                                                                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                     (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "mul_literals" (formula "3") (term "1,1,1,1"))
                                                                     (rule "equal_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "1"))
                                                                     (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                     (rule "greater_literals" (formula "10") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                                  (branch "CUT: result#2 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
                                                                     (rule "expand_inInt" (formula "34"))
                                                                     (rule "replace_int_MIN" (formula "34") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "34") (term "1,0"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                     (rule "expand_inInt" (formula "43"))
                                                                     (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "leq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                                     (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "qeq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                                                     (rule "expand_inInt" (formula "17"))
                                                                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                     (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                     (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "equal_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "5"))
                                                                     (rule "mul_literals" (formula "20") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_addLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "8"))
                                                                     (rule "greater_literals" (formula "5") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0"))
                                                                     (rule "leq_literals" (formula "5") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "11") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                     (rule "add_literals" (formula "11") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                     (rule "mul_literals" (formula "11") (term "1"))
                                                                     (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "7"))
                                                                     (rule "greater_literals" (formula "11") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "11") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "closeFalse" (formula "11"))
                                                                  )
                                                               )
                                                               (branch "CUT: result#9 = null FALSE"
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "cut_direct" (formula "30") (term "0,0"))
                                                                  (branch "CUT: result#2 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                     (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                                                     (rule "expand_inInt" (formula "17"))
                                                                     (rule "replace_int_MAX" (formula "17") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "17") (term "0,1"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "qeq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
                                                                     (rule "expand_inInt" (formula "34"))
                                                                     (rule "replace_int_MAX" (formula "34") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "34") (term "0,1"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                     (rule "expand_inInt" (formula "43"))
                                                                     (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                                     (rule "leq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "qeq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                     (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                     (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "equal_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "5"))
                                                                     (rule "mul_literals" (formula "20") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "1"))
                                                                     (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                     (rule "greater_literals" (formula "10") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                                  (branch "CUT: result#2 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "arrayLengthIsAnInt" (formula "34") (term "0"))
                                                                     (rule "expand_inInt" (formula "34"))
                                                                     (rule "replace_int_MIN" (formula "34") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "34") (term "1,0"))
                                                                     (rule "andLeft" (formula "34"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                     (rule "expand_inInt" (formula "43"))
                                                                     (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                     (rule "andLeft" (formula "43"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "leq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                     (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
                                                                     (rule "expand_inInt" (formula "18"))
                                                                     (rule "replace_int_MIN" (formula "18") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "18") (term "1,0"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "18"))
                                                                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "17"))
                                                                     (rule "leq_literals" (formula "18") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                     (rule "qeq_literals" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                     (rule "equal_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "1"))
                                                                     (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                     (rule "greater_literals" (formula "10") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "result_153.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_0"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "19") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "25") (term "0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "25") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "neg_literal" (formula "25") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "20") (term "1,1"))
                                                               (rule "add_literals" (formula "20") (term "1"))
                                                               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_zero_right" (formula "2") (term "1"))
                                                               (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "8"))
                                                               (rule "add_literals" (formula "5") (term "1"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,1"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "8"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "18") (term "0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "add_zero_left" (formula "17") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "cut_direct" (formula "30") (term "0,0"))
                                                               (branch "CUT: result#2 = null TRUE"
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "cut_direct" (formula "26") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                     (rule "expand_inInt" (formula "44"))
                                                                     (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                     (rule "leq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                                                                     (rule "expand_inInt" (formula "7"))
                                                                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                                     (rule "expand_inInt" (formula "35"))
                                                                     (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                                     (rule "qeq_literals" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                     (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "true_left" (formula "34"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "4") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "leq_literals" (formula "4") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "true_left" (formula "4"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                                                                        (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                        (rule "mul_literals" (formula "11") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "7"))
                                                                        (rule "greater_literals" (formula "11") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                                        (rule "mul_literals" (formula "19") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                        (rule "greater_literals" (formula "10") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                     (rule "expand_inInt" (formula "44"))
                                                                     (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                     (rule "qeq_literals" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "leq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                                                                     (rule "expand_inInt" (formula "7"))
                                                                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                                     (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                                     (rule "expand_inInt" (formula "35"))
                                                                     (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "true_left" (formula "34"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "10") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                                                                        (rule "mul_literals" (formula "19") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "4") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "leq_literals" (formula "4") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "true_left" (formula "4"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                        (rule "mul_literals" (formula "11") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "11") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: result#2 = null FALSE"
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "cut_direct" (formula "26") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                     (rule "expand_inInt" (formula "44"))
                                                                     (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                     (rule "qeq_literals" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "leq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                                                                     (rule "expand_inInt" (formula "7"))
                                                                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                                     (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                                     (rule "expand_inInt" (formula "35"))
                                                                     (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "37"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "true_left" (formula "34"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "10") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "7"))
                                                                        (rule "greater_literals" (formula "4") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0"))
                                                                        (rule "leq_literals" (formula "4") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "true_left" (formula "4"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                        (rule "mul_literals" (formula "11") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "11") (ifseqformula "7"))
                                                                        (rule "greater_literals" (formula "11") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                                                     (rule "expand_inInt" (formula "35"))
                                                                     (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                                                     (rule "andLeft" (formula "35"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                                                     (rule "qeq_literals" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                     (rule "expand_inInt" (formula "44"))
                                                                     (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                     (rule "andLeft" (formula "44"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                     (rule "qeq_literals" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "leq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                                                                     (rule "expand_inInt" (formula "7"))
                                                                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "7"))
                                                                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
                                                                     (rule "leq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                     (rule "qeq_literals" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                     (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                                                     (rule "qeq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "hideAuxiliaryEq" (formula "11"))
                                                                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "true_left" (formula "34"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "5"))
                                                                        (rule "mul_literals" (formula "20") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "20") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                        (rule "greater_literals" (formula "10") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                     (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                                        (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "equal_literals" (formula "3") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                        (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "6"))
                                                                        (rule "greater_literals" (formula "10") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "closeFalse" (formula "10"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "result_155.<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "ifthenelse_split" (formula "9") (term "0"))
                                                            (branch "result_153.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "div_axiom" (formula "1") (term "1,1") (inst "quotient=quotient_0"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "leq_literals" (formula "8") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0"))
                                                               (rule "leq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                               (rule "add_literals" (formula "21") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                               (rule "mul_literals" (formula "21") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "21") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "21") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "leq_literals" (formula "21") (term "0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "27") (term "0,0"))
                                                               (rule "add_zero_left" (formula "27") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0"))
                                                               (rule "neg_literal" (formula "27") (term "0,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "27") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0"))
                                                               (rule "qeq_literals" (formula "27") (term "0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "27"))
                                                               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "21") (term "1,1"))
                                                               (rule "add_literals" (formula "21") (term "1"))
                                                               (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_literals" (formula "2") (term "1"))
                                                               (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "8"))
                                                               (rule "add_zero_right" (formula "5") (term "1"))
                                                               (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "27"))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "3") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "8"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                               (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                               (rule "equal_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "5"))
                                                               (rule "mul_literals" (formula "22") (term "0,0"))
                                                               (rule "add_zero_left" (formula "22") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                               (rule "mul_literals" (formula "22") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "mul_literals" (formula "10") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "6"))
                                                               (rule "mul_literals" (formula "10") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "10") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "24"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "5") (term "0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0"))
                                                               (rule "polySimp_addLiterals" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "add_literals" (formula "5") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "5") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "5"))
                                                               (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "4") (term "1,1"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "25") (term "1,1"))
                                                               (rule "add_literals" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "6") (term "0,1,0,1") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,1"))
                                                               (rule "add_literals" (formula "6") (term "0,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "29") (term "0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "closeFalse" (formula "29"))
                                                            )
                                                            (branch "result_153.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "div_axiom" (formula "1") (term "1,1") (inst "quotient=quotient_0"))
                                                               (rule "equal_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "20") (term "0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                               (rule "mul_literals" (formula "20") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                               (rule "add_literals" (formula "21") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                               (rule "mul_literals" (formula "21") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "8"))
                                                               (rule "greater_literals" (formula "21") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0"))
                                                               (rule "leq_literals" (formula "21") (term "0"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "27") (term "0,0"))
                                                               (rule "add_zero_left" (formula "27") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "neg_literal" (formula "27") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "27") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0"))
                                                               (rule "qeq_literals" (formula "27") (term "0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "2") (term "1,1"))
                                                               (rule "add_literals" (formula "2") (term "1"))
                                                               (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "8"))
                                                               (rule "add_zero_right" (formula "5") (term "1"))
                                                               (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "applyEqRigid" (formula "21") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "21") (term "1,1"))
                                                               (rule "add_literals" (formula "21") (term "1"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "8"))
                                                               (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "times_zero_2" (formula "3") (term "1,0,1"))
                                                               (rule "add_literals" (formula "3") (term "0,1"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,1"))
                                                               (rule "add_literals" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                                                               (rule "times_zero_1" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "div_axiom" (formula "3") (term "0") (inst "quotient=quotient_1"))
                                                               (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                                               (rule "equal_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "qeq_literals" (formula "3") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "polySimp_addLiterals" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                                                               (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "4") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "24"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "24") (term "0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                               (rule "mul_literals" (formula "24") (term "0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "12") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "12") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "25") (term "1,1"))
                                                               (rule "add_literals" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "4") (term "1,1"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "5") (term "1,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,1"))
                                                               (rule "applyEq" (formula "3") (term "1") (ifseqformula "7"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,1,0,1") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "6") (term "1,0,1"))
                                                               (rule "add_literals" (formula "6") (term "0,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "closeFalse" (formula "28"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Exceptional Post (append)"
                                                    (builtin "One Step Simplification" (formula "56"))
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,1,1") (ifseqformula "50"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,1,1") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,0,1,1") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "andLeft" (formula "56"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0") (ifseqformula "50"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,0") (ifseqformula "46"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0,1,0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "andLeft" (formula "57"))
                                                   (rule "andLeft" (formula "59"))
                                                   (rule "notLeft" (formula "57"))
                                                   (rule "close" (formula "60") (ifseqformula "59"))
                                                )
                                                (branch "Pre (append)"
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "72") (term "0") (userinteraction))
                                                   (rule "andRight" (formula "72"))
                                                   (branch ""
                                                      (rule "notRight" (formula "72"))
                                                      (rule "inEqSimp_geqRight" (formula "69"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "71"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "72"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "70"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "70"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36"))
                                                      (rule "mul_literals" (formula "36") (term "1,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "55") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                      (rule "mul_literals" (formula "29") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "28"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "31"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "30") (term "0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                                      (rule "leq_literals" (formula "30") (term "0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=java_lang_StringBuilder_str_2"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "43"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")))
                                                      (rule "replaceKnownSelect_taclet00012120000100_19" (formula "4") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_20" (formula "4") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "39"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet00012120000100_21" (formula "4") (term "0,0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00012120000100_22" (formula "4") (term "0,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "close" (formula "50") (ifseqformula "5"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "72"))
                                                      (branch ""
                                                         (rule "wellFormedAnonEQ" (formula "72") (ifseqformula "50"))
                                                         (rule "wellFormedAnonEQ" (formula "72") (term "0") (ifseqformula "46"))
                                                         (rule "wellFormedAnonEQ" (formula "72") (term "0,0") (ifseqformula "40"))
                                                         (rule "wellFormedAnon" (formula "72") (term "0,0,0"))
                                                         (rule "wellFormedStorePrimitive" (formula "72") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "72") (term "1,0") (ifseqformula "45"))
                                                          (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "18")) (ifInst ""  (formula "39")) (ifInst ""  (formula "49")))
                                                         (rule "inEqSimp_ltRight" (formula "67"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "67"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "68"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "69"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "68"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "68"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "20"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "29"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "wellFormedStoreObject" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "wellFormedCreate" (formula "57") (term "0"))
                                                         (rule "eqSymm" (formula "57") (term "0,1"))
                                                         (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
                                                         (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "58") (ifseqformula "12"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "expand_inChar" (formula "72") (userinteraction))
                                                         (rule "andRight" (formula "72"))
                                                         (branch "Case 1"
                                                            (rule "replace_char_MAX" (formula "72") (term "1"))
                                                            (rule "inEqSimp_geqRight" (formula "68"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "70"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "68"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "71"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                            (rule "mul_literals" (formula "29") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                                            (rule "leq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0"))
                                                            (rule "qeq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "31"))
                                                            (rule "leq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "26"))
                                                            (rule "leq_literals" (formula "27") (term "0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                            (rule "leq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "nnf_imp2or" (formula "36") (term "0"))
                                                            (rule "nnf_imp2or" (formula "20") (term "0"))
                                                            (rule "nnf_imp2or" (formula "45") (term "0"))
                                                            (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "commute_or" (formula "20") (term "0,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "20") (term "0"))
                                                            (rule "distr_forallAnd" (formula "20"))
                                                            (rule "andLeft" (formula "20"))
                                                            (rule "commute_or" (formula "21") (term "0"))
                                                            (rule "cnf_rightDist" (formula "47") (term "0"))
                                                            (rule "distr_forallAnd" (formula "47"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "commute_or" (formula "48") (term "0"))
                                                            (rule "ifthenelse_split" (formula "6") (term "0"))
                                                            (branch "result_155.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "result_153.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "cut_direct" (formula "27") (term "0,0"))
                                                                  (branch "CUT: result#2 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "41") (term "0,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "41") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "26") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "closeFalse" (formula "26"))
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "41") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "41") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "42") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "closeFalse" (formula "42"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#2 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "41") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "41") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "26") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "closeFalse" (formula "26"))
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "41") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "41") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "42") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "closeFalse" (formula "42"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_153.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "cut_direct" (formula "27") (term "0,0"))
                                                                  (branch "CUT: result#2 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "closeFalse" (formula "42"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")) (ifInst ""  (formula "46")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "51")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1001001120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1001001120000012120000100_44" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption1" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "closeFalse" (formula "44"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#2 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "cut_direct" (formula "23") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "46")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                        (rule "qeq_literals" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0111001120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0111001120000012120000100_45" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")) (ifInst ""  (formula "46")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption1" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1111001120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1111001120000012120000100_44" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet001120000012120000100_36" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "closeFalse" (formula "44"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "result_155.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "ifthenelse_split" (formula "9") (term "0"))
                                                               (branch "result_153.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "cut_direct" (formula "25") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000101120000012120000100_38" (formula "41") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "41") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "50")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000101120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000101120000012120000100_45" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000101120000012120000100_38" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "44"))
                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "45") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "closeFalse" (formula "45"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "49")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100101120000012120000100_38" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100101120000012120000100_38" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "closeFalse" (formula "43"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                           (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "35") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "35"))
                                                                           (rule "simplifySelectOfCreate" (formula "35"))
                                                                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "54")))
                                                                           (rule "castDel" (formula "35") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "35") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "54")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "35"))
                                                                           (rule "applyEqReverse" (formula "36") (term "0,0,0,0") (ifseqformula "35"))
                                                                           (rule "hideAuxiliaryEq" (formula "35"))
                                                                           (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                                                           (rule "hideAuxiliaryEq" (formula "35"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1100101120000012120000100_37" (formula "33") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1100101120000012120000100_41" (formula "33") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1100101120000012120000100_43" (formula "33") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "inEqSimp_subsumption1" (formula "45") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "45") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "true_left" (formula "45"))
                                                                           (rule "allLeft" (formula "46") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "46") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "46") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "46") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "closeFalse" (formula "46"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0010101120000012120000100_37" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0010101120000012120000100_38" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "simplifySelectOfAnon" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                           (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                           (rule "replaceKnownSelect_taclet1010101120000012120000100_38" (formula "34") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1010101120000012120000100_39" (formula "34") (term "0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_subsumption1" (formula "44") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "44") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1010101120000012120000100_37" (formula "33") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1010101120000012120000100_42" (formula "33") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "allLeft" (formula "46") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "46") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "46") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "46"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "57"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110101120000012120000100_37" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110101120000012120000100_38" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110101120000012120000100_37" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110101120000012120000100_38" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "closeFalse" (formula "43"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "45"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_153.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "cut_direct" (formula "29") (term "0,0"))
                                                                  (branch "CUT: result#2 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "true_left" (formula "30"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_subsumption1" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet00001101120000012120000100_39" (formula "32") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00001101120000012120000100_45" (formula "32") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_36" (formula "44") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_37" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_36" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_37" (formula "41") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "41") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "true_left" (formula "41"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "42"))
                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "true_left" (formula "25"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "41"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                              (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeFalse" (formula "45"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")) (ifInst ""  (formula "48")))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "45"))
                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "closeFalse" (formula "42"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "42"))
                                                                              (rule "qeq_literals" (formula "25") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "closeFalse" (formula "25"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "44"))
                                                                              (rule "leq_literals" (formula "27") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "true_left" (formula "27"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "closeFalse" (formula "43"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")) (ifInst ""  (formula "48")))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "60")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "61"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeFalse" (formula "45"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#2 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "cut_direct" (formula "25") (term "0,0"))
                                                                     (branch "CUT: result#9 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                        (rule "true_left" (formula "26"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                        (rule "qeq_literals" (formula "45"))
                                                                        (rule "true_left" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011101120000012120000100_37" (formula "41") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "41") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "true_left" (formula "41"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011101120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "43"))
                                                                              (rule "qeq_literals" (formula "1") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011101120000012120000100_37" (formula "41") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "41") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "true_left" (formula "41"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")) (ifInst ""  (formula "46")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011101120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "43"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "42"))
                                                                              (rule "qeq_literals" (formula "24") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "24"))
                                                                              (rule "closeFalse" (formula "24"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption1" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                                                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet01011101120000012120000100_37" (formula "33") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet01011101120000012120000100_43" (formula "33") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "allLeft" (formula "46") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "46") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "46") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "closeFalse" (formula "46"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "43") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")) (ifInst ""  (formula "48")))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")))
                                                                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "35") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "35"))
                                                                              (rule "simplifySelectOfCreate" (formula "35"))
                                                                               (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "56")))
                                                                              (rule "castDel" (formula "35") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "35") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "56"))
                                                                               (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "61")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "35"))
                                                                              (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "35"))
                                                                              (rule "hideAuxiliaryEq" (formula "35"))
                                                                              (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                                                              (rule "hideAuxiliaryEq" (formula "35"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet11011101120000012120000100_37" (formula "33") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet11011101120000012120000100_41" (formula "33") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "allLeft" (formula "46") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "46") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "46"))
                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "45"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#9 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_36" (formula "41") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_37" (formula "41") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "inEqSimp_subsumption1" (formula "41") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "41") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "true_left" (formula "41"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")) (ifInst ""  (formula "46")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "42") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_36" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111101120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "43"))
                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "true_left" (formula "25"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "closeFalse" (formula "42"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")))
                                                                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                              (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "45"))
                                                                              (rule "qeq_literals" (formula "27") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "closeFalse" (formula "27"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")) (ifInst ""  (formula "48")))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "61"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "45"))
                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "replace_char_MIN" (formula "72") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "68"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "70"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "69"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "68"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "69"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37"))
                                                            (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "27"))
                                                            (rule "leq_literals" (formula "30") (term "0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "22"))
                                                            (rule "leq_literals" (formula "25") (term "0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "34") (term "0"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0"))
                                                            (rule "qeq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "29"))
                                                            (rule "leq_literals" (formula "32") (term "0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "30"))
                                                            (rule "leq_literals" (formula "31") (term "0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "nnf_imp2or" (formula "45") (term "0"))
                                                            (rule "nnf_imp2or" (formula "20") (term "0"))
                                                            (rule "nnf_imp2or" (formula "36") (term "0"))
                                                            (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "45") (term "0,0"))
                                                            (rule "commute_or" (formula "20") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "45") (term "0"))
                                                            (rule "distr_forallAnd" (formula "45"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "commute_or" (formula "46") (term "0"))
                                                            (rule "cnf_rightDist" (formula "20") (term "0"))
                                                            (rule "distr_forallAnd" (formula "20"))
                                                            (rule "andLeft" (formula "20"))
                                                            (rule "commute_or" (formula "21") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "ifthenelse_split" (formula "6") (term "0"))
                                                            (branch "result_155.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "result_153.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "cut_direct" (formula "23") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfAnon" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
                                                                        (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                        (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "simplifySelectOfCreate" (formula "33"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                                        (rule "castDel" (formula "33") (term "1,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                        (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "simplifySelectOfCreate" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "47")))
                                                                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet000011120000012120000100_39" (formula "34") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet000011120000012120000100_43" (formula "34") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet000011120000012120000100_45" (formula "34") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "44") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "44") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                                                        (rule "qeq_literals" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfAnon" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                        (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                        (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                        (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "simplifySelectOfCreate" (formula "33"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                        (rule "castDel" (formula "33") (term "1,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "simplifySelectOfCreate" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "49")))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet100011120000012120000100_39" (formula "34") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet100011120000012120000100_45" (formula "34") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "44") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "44") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "43") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "closeFalse" (formula "43"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfAnon" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                        (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                        (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                        (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "simplifySelectOfCreate" (formula "33"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                        (rule "castDel" (formula "33") (term "1,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "simplifySelectOfCreate" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "49")))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet010011120000012120000100_39" (formula "34") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010011120000012120000100_45" (formula "34") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "43") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "closeFalse" (formula "43"))
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "arrayLengthIsAnInt" (formula "40") (term "0"))
                                                                        (rule "expand_inInt" (formula "40"))
                                                                        (rule "replace_int_MIN" (formula "40") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "40") (term "1,0"))
                                                                        (rule "andLeft" (formula "40"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "41"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "qeq_literals" (formula "40"))
                                                                        (rule "true_left" (formula "40"))
                                                                        (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfAnon" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")))
                                                                        (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                        (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                        (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                        (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                        (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "simplifySelectOfCreate" (formula "33"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                        (rule "castDel" (formula "33") (term "1,0"))
                                                                        (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "56"))
                                                                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                        (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "simplifySelectOfCreate" (formula "32"))
                                                                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                        (rule "hideAuxiliaryEq" (formula "32"))
                                                                        (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet110011120000012120000100_39" (formula "34") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet110011120000012120000100_45" (formula "34") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "44") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "44") (term "0,1"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                        (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                        (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "43") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "closeFalse" (formula "43"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_153.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "cut_direct" (formula "23") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0001011120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0001011120000012120000100_43" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "closeFalse" (formula "43"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption0" (formula "42") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")) (ifInst ""  (formula "46")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "51")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "51")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1001011120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1001011120000012120000100_44" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                        (rule "qeq_literals" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0101011120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0101011120000012120000100_45" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "46")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1101011120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1101011120000012120000100_43" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "44") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "cut_direct" (formula "27") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                                                        (rule "qeq_literals" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "41") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption0" (formula "42") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "true_left" (formula "42"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "46")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet1011011120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1011011120000012120000100_43" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "43"))
                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "true_left" (formula "25"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "arrayLengthIsAnInt" (formula "41") (term "0"))
                                                                        (rule "expand_inInt" (formula "41"))
                                                                        (rule "replace_int_MIN" (formula "41") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "41") (term "1,0"))
                                                                        (rule "andLeft" (formula "41"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "42"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "43"))
                                                                        (rule "leq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                                                        (rule "qeq_literals" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "true_left" (formula "31"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                                           (rule "simplifySelectOfAnon" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                           (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "51")))
                                                                           (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "51")))
                                                                           (rule "castDel" (formula "32") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "51"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "48"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0111011120000012120000100_39" (formula "34") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0111011120000012120000100_45" (formula "34") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "43"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                        (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "28"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")) (ifInst ""  (formula "46")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "32") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "52"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "57")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "49"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet011120000012120000100_36" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "25") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "true_left" (formula "25"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "result_155.<created> = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "ifthenelse_split" (formula "9") (term "0"))
                                                               (branch "result_153.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "cut_direct" (formula "25") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "50")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000111120000012120000100_37" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000111120000012120000100_38" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000111120000012120000100_39" (formula "32") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000111120000012120000100_45" (formula "32") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000111120000012120000100_37" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0000111120000012120000100_38" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "43"))
                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "57"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "replaceKnownSelect_taclet1000111120000012120000100_38" (formula "33") (term "0,0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet1000111120000012120000100_39" (formula "33") (term "0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfStore" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "closeFalse" (formula "44"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                           (rule "castDel" (formula "32") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "simplifySelectOfAnon" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                           (rule "replaceKnownSelect_taclet0100111120000012120000100_40" (formula "32") (term "0,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100111120000012120000100_41" (formula "32") (term "0,0,0"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "simplifySelectOfStore" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "49")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100111120000012120000100_37" (formula "43") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100111120000012120000100_38" (formula "43") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "43") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100111120000012120000100_37" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0100111120000012120000100_38" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "42") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "closeFalse" (formula "42"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "41") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "41") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0010111120000012120000100_38" (formula "41") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "41") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "41") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "closeFalse" (formula "41"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "44") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "true_left" (formula "44"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "44"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "qeq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "arrayLengthIsAnInt" (formula "43") (term "0"))
                                                                        (rule "expand_inInt" (formula "43"))
                                                                        (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                                        (rule "leq_literals" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "true_left" (formula "40"))
                                                                           (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")))
                                                                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                           (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "castDel" (formula "33") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "57"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                           (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                            (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "simplifySelectOfCreate" (formula "32"))
                                                                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110111120000012120000100_37" (formula "42") (term "0,1"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0110111120000012120000100_38" (formula "42") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "42"))
                                                                           (rule "leq_literals" (formula "26") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "41"))
                                                                           (rule "qeq_literals" (formula "4") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "41") (term "0,0,0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                           (rule "simplifySelectOfAnon" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")))
                                                                           (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                           (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                           (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                           (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "simplifySelectOfCreate" (formula "34"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                           (rule "castDel" (formula "34") (term "1,0"))
                                                                           (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "simplifySelectOfCreate" (formula "33"))
                                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                           (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "27"))
                                                                           (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "44") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "44"))
                                                                           (rule "closeFalse" (formula "44"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_153.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "10") (term "1,0") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "cut_direct" (formula "25") (term "0,0"))
                                                                  (branch "CUT: result#9 = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "32"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                                                                              (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                              (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "32"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                              (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "32"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                              (rule "castDel" (formula "32") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "50")))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "42"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "41") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "closeFalse" (formula "41"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")) (ifInst ""  (formula "46")))
                                                                              (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "32"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                                                                              (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                              (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet10001111120000012120000100_39" (formula "34") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet10001111120000012120000100_43" (formula "34") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_36" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0001111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                                                              (rule "qeq_literals" (formula "1") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "1,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "35") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet01001111120000012120000100_37" (formula "35") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet01001111120000012120000100_43" (formula "35") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeFalse" (formula "45"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")) (ifInst ""  (formula "48")))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "60"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "44"))
                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "closeFalse" (formula "43"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                        (rule "qeq_literals" (formula "45"))
                                                                        (rule "true_left" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101111120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet00101111120000012120000100_39" (formula "32") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00101111120000012120000100_43" (formula "32") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                                                              (rule "qeq_literals" (formula "1") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101111120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "42") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")) (ifInst ""  (formula "46")))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                              (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "32"))
                                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "57")))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0"))
                                                                              (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "32") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "58"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "53")))
                                                                              (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                                              (rule "hideAuxiliaryEq" (formula "32"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet10101111120000012120000100_39" (formula "34") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet10101111120000012120000100_44" (formula "34") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0101111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "43"))
                                                                              (rule "qeq_literals" (formula "1") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "true_left" (formula "45"))
                                                                              (rule "allLeft" (formula "35") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet01101111120000012120000100_37" (formula "35") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet01101111120000012120000100_43" (formula "35") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeFalse" (formula "45"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")) (ifInst ""  (formula "48")))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "60")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "56"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "61")))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "true_left" (formula "45"))
                                                                              (rule "allLeft" (formula "35") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet11101111120000012120000100_37" (formula "35") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet11101111120000012120000100_42" (formula "35") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "45") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeFalse" (formula "45"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: result#9 = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "cut_direct" (formula "29") (term "0,0"))
                                                                     (branch "CUT: result#2 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "true_left" (formula "30"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                        (rule "qeq_literals" (formula "45"))
                                                                        (rule "true_left" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_36" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet00011111120000012120000100_39" (formula "32") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00011111120000012120000100_43" (formula "32") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_36" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "closeFalse" (formula "43"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")) (ifInst ""  (formula "46")))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "58"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_36" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption0" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "allLeft" (formula "42") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_36" (formula "42") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0011111120000012120000100_37" (formula "42") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "42") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "42") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "closeFalse" (formula "42"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "35") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet01011111120000012120000100_37" (formula "35") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet01011111120000012120000100_43" (formula "35") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "allLeft" (formula "46") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "46") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "inEqSimp_subsumption0" (formula "46") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "46") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "true_left" (formula "46"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "45"))
                                                                              (rule "leq_literals" (formula "27") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "true_left" (formula "27"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "44"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")) (ifInst ""  (formula "48")))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "60")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "56"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "61")))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "35") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet11011111120000012120000100_37" (formula "35") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet11011111120000012120000100_41" (formula "35") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "allLeft" (formula "45") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "45"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "CUT: result#2 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "29"))
                                                                        (rule "arrayLengthIsAnInt" (formula "44") (term "0"))
                                                                        (rule "expand_inInt" (formula "44"))
                                                                        (rule "replace_int_MAX" (formula "44") (term "1,0"))
                                                                        (rule "replace_int_MIN" (formula "44") (term "0,1"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "45"))
                                                                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                                        (rule "qeq_literals" (formula "45"))
                                                                        (rule "true_left" (formula "45"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "leq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (rule "qeq_literals" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "6"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "29"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "52")))
                                                                              (rule "castDel" (formula "33") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "33") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "52"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")))
                                                                              (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet00111111120000012120000100_39" (formula "32") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet00111111120000012120000100_43" (formula "32") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111111120000012120000100_37" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "44") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "43"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "42") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "closeFalse" (formula "42"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "allLeft" (formula "33") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "57")) (ifInst ""  (formula "46")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                                                              (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_10"))
                                                                              (rule "simplifySelectOfAnon" (formula "33"))
                                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,1,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                                                              (rule "ifthenelse_negated" (formula "33") (term "0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                                              (rule "hideAuxiliaryEq" (formula "33"))
                                                                              (rule "allLeft" (formula "32") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet10111111120000012120000100_39" (formula "32") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet10111111120000012120000100_44" (formula "32") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111111120000012120000100_37" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "44") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0111111120000012120000100_37" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "25"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "43"))
                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "true_left" (formula "25"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "42"))
                                                                              (rule "qeq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "closeFalse" (formula "4"))
                                                                           )
                                                                        )
                                                                        (branch " result_155.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "hideAuxiliaryEq" (formula "9"))
                                                                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "8"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "leq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "allLeft" (formula "34") (inst "t=anonOut_second4Bits"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "27"))
                                                                              (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_9"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")) (ifInst ""  (formula "8")))
                                                                              (rule "simplifySelectOfAnon" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,1,0,0"))
                                                                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "ifthenelse_negated" (formula "34") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "1,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "1,0"))
                                                                              (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                                              (rule "simplifySelectOfCreate" (formula "34"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")))
                                                                              (rule "castDel" (formula "34") (term "1,0"))
                                                                              (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")))
                                                                              (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "hideAuxiliaryEq" (formula "34"))
                                                                              (rule "allLeft" (formula "44") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "44") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "44") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "44"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "43"))
                                                                              (rule "qeq_literals" (formula "26") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "closeFalse" (formula "26"))
                                                                           )
                                                                           (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "46"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "allLeft" (formula "43") (inst "t=anonOut_second4Bits"))
                                                                              (rule "replaceKnownSelect_taclet0000012120000100_25" (formula "43") (term "0,1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "4"))
                                                                              (rule "qeq_literals" (formula "43") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "26"))
                                                                              (rule "qeq_literals" (formula "43") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "closeFalse" (formula "43"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Null reference (var_4 = null)"
                                                    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "56")))
                                                   (rule "closeTrue" (formula "72"))
                                                )
                                             )
                                             (branch "Null Reference (x_arr_1 = null)"
                                                 (builtin "One Step Simplification" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (x_arr_1 != null, but second4Bits Out of Bounds!)"
                                                 (builtin "One Step Simplification" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "49"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "49"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                (rule "blockThrow" (formula "67") (term "1"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "pullOutSelect" (formula "48") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                                (rule "simplifySelectOfCreate" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "54")))
                                                (rule "castDel" (formula "48") (term "1,0"))
                                                (rule "eqSymm" (formula "48") (term "0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "48") (term "0,0"))
                                                (rule "replace_known_right" (formula "48") (term "1,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "53")))
                                                (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0") (ifseqformula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "commute_or" (formula "1"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "commute_and" (formula "50") (term "1,0"))
                                                (rule "commute_and" (formula "50") (term "0,0"))
                                                (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                                                (rule "expand_inInt" (formula "49"))
                                                (rule "replace_int_MAX" (formula "49") (term "1,0"))
                                                (rule "replace_int_MIN" (formula "49") (term "0,1"))
                                                (rule "andLeft" (formula "49"))
                                                (rule "inEqSimp_commuteLeq" (formula "50"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                (rule "qeq_literals" (formula "50"))
                                                (rule "true_left" (formula "50"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                                (rule "leq_literals" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "1,0") (ifseqformula "42"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                (rule "true_left" (formula "1"))
                                                (rule "methodCallParamThrow" (formula "68") (term "1,0,0,1"))
                                                (rule "tryCatchThrow" (formula "68") (term "1,0,0,1"))
                                                (rule "ifElseUnfold" (formula "68") (term "1,0,0,1") (inst "#boolv=x"))
                                                (rule "variableDeclaration" (formula "68") (term "1,0,0,1") (newnames "x_9"))
                                                (rule "equality_comparison_simple" (formula "68") (term "1,0,0,1"))
                                                (rule "throwUnfold" (formula "68") (term "1") (inst "#v0=a"))
                                                (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                                (rule "variableDeclaration" (formula "68") (term "1") (newnames "a"))
                                                (rule "instanceCreationAssignment" (formula "68") (term "1") (inst "#v0=a_1"))
                                                (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                                (rule "variableDeclaration" (formula "68") (term "1") (newnames "a_1"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "68") (term "1") (inst "#v0=a_2"))
                                                (rule "variableDeclaration" (formula "68") (term "1") (newnames "a_2"))
                                                (rule "methodBodyExpand" (formula "68") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "variableDeclaration" (formula "68") (term "1") (newnames "__NEW___1"))
                                                (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "68") (term "1") (inst "#v0=a_3"))
                                                (rule "variableDeclaration" (formula "68") (term "1") (newnames "a_3"))
                                                (rule "allocateInstance" (formula "68"))
                                                 (builtin "One Step Simplification" (formula "69"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "49"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "49"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "45"))
                                                (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "39"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "45"))
                                                (rule "wellFormedAnon" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "39"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "38")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")))
                                                (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0,1"))
                                                (rule "blockEmpty" (formula "71") (term "1"))
                                                (rule "assignment" (formula "71") (term "1"))
                                                 (builtin "One Step Simplification" (formula "71"))
                                                (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                                (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_lang_Object_created__8"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "54"))
                                                (rule "orRight" (formula "54"))
                                                (rule "orRight" (formula "54"))
                                                (rule "orRight" (formula "54"))
                                                (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "assignment_write_attribute_this" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallWithinClass" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "blockEmpty" (formula "75") (term "1"))
                                                (rule "assignment_write_attribute_this" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "assignment_write_attribute_this" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "blockEmpty" (formula "75") (term "1"))
                                                (rule "methodCallReturnIgnoreResult" (formula "75") (term "1"))
                                                (rule "methodCallReturn" (formula "75") (term "1"))
                                                (rule "assignment" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "blockEmpty" (formula "75") (term "1"))
                                                (rule "assignment" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallSuper" (formula "75") (term "1"))
                                                (rule "methodBodyExpand" (formula "75") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "blockEmpty" (formula "75") (term "1"))
                                                (rule "assignment_write_attribute_this" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "assignment_write_attribute_this" (formula "75") (term "1"))
                                                 (builtin "One Step Simplification" (formula "75"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "methodCallEmpty" (formula "75") (term "1"))
                                                (rule "blockEmpty" (formula "75") (term "1"))
                                                (rule "assignment_write_attribute" (formula "75") (term "1"))
                                                (branch "Normal Execution (a_1 != null)"
                                                    (builtin "One Step Simplification" (formula "76"))
                                                    (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "59")))
                                                   (rule "false_right" (formula "75"))
                                                   (rule "assignment" (formula "75") (term "1"))
                                                    (builtin "One Step Simplification" (formula "75"))
                                                   (rule "tryCatchThrow" (formula "75") (term "1"))
                                                   (rule "ifElseUnfold" (formula "75") (term "1") (inst "#boolv=x"))
                                                   (rule "variableDeclaration" (formula "75") (term "1") (newnames "x_10"))
                                                   (rule "equality_comparison_simple" (formula "75") (term "1"))
                                                    (builtin "One Step Simplification" (formula "75"))
                                                   (rule "replace_known_right" (formula "75") (term "0,0,1,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "75"))
                                                   (rule "ifElseSplit" (formula "75"))
                                                   (branch "if x_10 true"
                                                       (builtin "One Step Simplification" (formula "76"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "if x_10 false"
                                                       (builtin "One Step Simplification" (formula "76"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifElseSplit" (formula "75"))
                                                      (branch "if a instanceof java.lang.Throwable true"
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "variableDeclaration" (formula "75") (term "1") (newnames "e_2"))
                                                         (rule "delete_unnecessary_cast" (formula "75") (term "1"))
                                                          (builtin "One Step Simplification" (formula "76"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment" (formula "75") (term "1"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "assignment" (formula "75") (term "1"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "methodCallEmpty" (formula "75") (term "1"))
                                                         (rule "emptyModality" (formula "75") (term "1"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "replace_known_right" (formula "75") (term "0,0,1,0") (ifseqformula "59"))
                                                          (builtin "One Step Simplification" (formula "75"))
                                                         (rule "ifElseSplit" (formula "75"))
                                                         (branch "if x_9 true"
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "if x_9 false"
                                                             (builtin "One Step Simplification" (formula "76"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifElseSplit" (formula "75"))
                                                            (branch "if thrownExc instanceof java.lang.Throwable true"
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "variableDeclaration" (formula "75") (term "1") (newnames "e_3"))
                                                               (rule "delete_unnecessary_cast" (formula "75") (term "1"))
                                                                (builtin "One Step Simplification" (formula "76"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "assignment" (formula "75") (term "1"))
                                                                (builtin "One Step Simplification" (formula "75"))
                                                               (rule "emptyModality" (formula "75") (term "1"))
                                                               (rule "andRight" (formula "75"))
                                                               (branch ""
                                                                  (rule "andRight" (formula "75"))
                                                                  (branch ""
                                                                      (builtin "One Step Simplification" (formula "75"))
                                                                     (rule "notRight" (formula "75"))
                                                                     (rule "inEqSimp_ltRight" (formula "73"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "72"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "74"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "73"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                                                     (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                     (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                     (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "27"))
                                                                     (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "27") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                                                     (rule "mul_literals" (formula "6") (term "1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                                                     (rule "mul_literals" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "32"))
                                                                     (rule "leq_literals" (formula "35") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "32"))
                                                                     (rule "leq_literals" (formula "33") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                                                     (rule "leq_literals" (formula "22") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
                                                                     (rule "leq_literals" (formula "31") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "29"))
                                                                     (rule "qeq_literals" (formula "6") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "23"))
                                                                     (rule "leq_literals" (formula "24") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "27"))
                                                                     (rule "leq_literals" (formula "30") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "true_left" (formula "30"))
                                                                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                                                     (rule "leq_literals" (formula "24") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "6"))
                                                                     (rule "qeq_literals" (formula "28") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "closeFalse" (formula "28"))
                                                                  )
                                                                  (branch ""
                                                                      (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "59")))
                                                                     (rule "false_right" (formula "75"))
                                                                     (rule "inEqSimp_geqRight" (formula "73"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltRight" (formula "74"))
                                                                     (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltRight" (formula "73"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_leqRight" (formula "72"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                     (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "32") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                                     (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                                     (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                     (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "mul_literals" (formula "2") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                                                     (rule "mul_literals" (formula "5") (term "1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                                                     (rule "mul_literals" (formula "33") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "30"))
                                                                     (rule "leq_literals" (formula "36") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "true_left" (formula "36"))
                                                                     (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                                     (rule "leq_literals" (formula "26") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "31"))
                                                                     (rule "leq_literals" (formula "32") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "31"))
                                                                     (rule "qeq_literals" (formula "5") (term "0,1"))
                                                                      (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                                     (rule "leq_literals" (formula "26") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "20") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "20") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                                                     (rule "leq_literals" (formula "21") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                                     (rule "leq_literals" (formula "16") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                                     (rule "leq_literals" (formula "28") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "28") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "5"))
                                                                     (rule "leq_literals" (formula "27") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "26") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "closeFalse" (formula "26"))
                                                                  )
                                                               )
                                                               (branch ""
                                                                   (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "allRight" (formula "75") (inst "sk=f_0"))
                                                                  (rule "allRight" (formula "75") (inst "sk=o_0"))
                                                                  (rule "orRight" (formula "75"))
                                                                  (rule "eqSymm" (formula "76"))
                                                                  (rule "inEqSimp_ltRight" (formula "74"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "71"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "73"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "73"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "34") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                  (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                                                  (rule "mul_literals" (formula "33") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                                                  (rule "mul_literals" (formula "5") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "31"))
                                                                  (rule "qeq_literals" (formula "5") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "36") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "35") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "true_left" (formula "35"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "33") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "31"))
                                                                  (rule "leq_literals" (formula "32") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "true_left" (formula "32"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "25") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "24") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "27") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "closeFalse" (formula "27"))
                                                               )
                                                            )
                                                            (branch "if thrownExc instanceof java.lang.Throwable false"
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "if a instanceof java.lang.Throwable false"
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (a_1 = null)"
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "Exceptional Post (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "46"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "expand_inChar" (formula "46") (term "1,0,0,1,0,1,1"))
                                             (rule "replace_char_MAX" (formula "46") (term "1,0,1,0,0,1,0,1,1"))
                                             (rule "replace_char_MIN" (formula "46") (term "0,1,1,0,0,1,0,1,1"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "46"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0") (ifseqformula "42"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "49"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "close" (formula "51") (ifseqformula "50"))
                                          )
                                          (branch "Pre (hexCharacters)"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "wellFormedAnonEQ" (formula "59") (ifseqformula "42"))
                                             (rule "wellFormedAnonEQ" (formula "59") (term "0") (ifseqformula "36"))
                                             (rule "wellFormedAnon" (formula "59") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "59") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "59") (term "1,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "14")) (ifInst ""  (formula "41")))
                                             (rule "inEqSimp_geqRight" (formula "57"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltRight" (formula "57"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "57"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                             (rule "mul_literals" (formula "29") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "wellFormedStoreObject" (formula "46"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "wellFormedCreate" (formula "46") (term "0"))
                                             (rule "eqSymm" (formula "46") (term "0,1"))
                                             (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "43")))
                                             (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__7"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "47") (ifseqformula "7"))
                                          )
                                       )
                                       (branch "Exceptional Post (append)"
                                           (builtin "One Step Simplification" (formula "53"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,1") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "44"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "notLeft" (formula "43"))
                                          (rule "close" (formula "47") (ifseqformula "46"))
                                       )
                                       (branch "Pre (append)"
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "wellFormedAnonEQ" (formula "51") (term "0,1") (ifseqformula "36"))
                                          (rule "wellFormedAnon" (formula "51") (term "0,0,1"))
                                          (rule "wellFormedStorePrimitive" (formula "51") (term "0,0,0,1"))
                                          (rule "expand_inChar" (formula "51") (term "1,1"))
                                          (rule "replace_char_MIN" (formula "51") (term "0,1,1,1"))
                                          (rule "replace_char_MAX" (formula "51") (term "1,0,1,1"))
                                          (rule "replace_known_left" (formula "51") (term "1,0,1") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "14")))
                                          (rule "inEqSimp_geqRight" (formula "49"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "50"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "49"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                          (rule "mul_literals" (formula "30") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "27"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "wellFormedStoreObject" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "wellFormedCreate" (formula "38") (term "0,0,1"))
                                          (rule "replaceKnownSelect_taclet0_0" (formula "38") (term "0,1,1,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "38") (term "0,1,1,0,1"))
                                          (rule "eqSymm" (formula "38") (term "0,1,0,1"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,1") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "34")) (ifInst ""  (formula "6")))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "38") (term "0"))
                                          (rule "pullOutSelect" (formula "38") (term "0,0,0") (inst "selectSK=java_lang_StringBuilder_str_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                          (rule "replaceKnownSelect_taclet100_2" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100_3" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "cnf_rightDist" (formula "14") (term "0"))
                                          (rule "distr_forallAnd" (formula "14"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "commute_or" (formula "15") (term "0"))
                                          (rule "cnf_rightDist" (formula "32") (term "0"))
                                          (rule "distr_forallAnd" (formula "32"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "commute_or" (formula "33") (term "0"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "result_153.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "cut_direct" (formula "25") (term "0,0"))
                                             (branch "CUT: result#2 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cut_direct" (formula "20") (term "0,0"))
                                                (branch "CUT: result#9 = null TRUE"
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
                                                   (rule "expand_inInt" (formula "29"))
                                                   (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "leq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "31") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "31") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "31") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "31") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "CUT: result#9 = null FALSE"
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
                                                   (rule "expand_inInt" (formula "29"))
                                                   (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                   (rule "leq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_leqRight" (formula "40"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "32") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "32"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "closeFalse" (formula "31"))
                                                )
                                             )
                                             (branch "CUT: result#2 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "cut_direct" (formula "20") (term "0,0"))
                                                (branch "CUT: result#9 = null TRUE"
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
                                                   (rule "expand_inInt" (formula "29"))
                                                   (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                   (rule "leq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_leqRight" (formula "40"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "32") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "32"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: result#9 = null FALSE"
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
                                                   (rule "expand_inInt" (formula "29"))
                                                   (rule "replace_int_MIN" (formula "29") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "29") (term "1,0"))
                                                   (rule "andLeft" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                   (rule "leq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                   (rule "qeq_literals" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_leqRight" (formula "41"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                   (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet020012120000100_24" (formula "32") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "result_153.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "cut_direct" (formula "20") (term "0,0"))
                                             (branch "CUT: result#9 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "cut_direct" (formula "25") (term "0,0"))
                                                (branch "CUT: result#2 = null TRUE"
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "arrayLengthIsAnInt" (formula "30") (term "0"))
                                                   (rule "expand_inInt" (formula "30"))
                                                   (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_geqRight" (formula "40"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100120012120000100_24" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_leqRight" (formula "41"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100120012120000100_24" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "closeFalse" (formula "32"))
                                                   )
                                                )
                                                (branch "CUT: result#2 = null FALSE"
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "arrayLengthIsAnInt" (formula "30") (term "0"))
                                                   (rule "expand_inInt" (formula "30"))
                                                   (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_geqRight" (formula "41"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet110120012120000100_24" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_leqRight" (formula "42"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet110120012120000100_24" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "32"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result#9 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "cut_direct" (formula "25") (term "0,0"))
                                                (branch "CUT: result#2 = null TRUE"
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "arrayLengthIsAnInt" (formula "30") (term "0"))
                                                   (rule "expand_inInt" (formula "30"))
                                                   (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001120012120000100_24" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_leqRight" (formula "41"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001120012120000100_24" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "32"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_geqRight" (formula "42"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "closeFalse" (formula "31"))
                                                   )
                                                )
                                                (branch "CUT: result#2 = null FALSE"
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "arrayLengthIsAnInt" (formula "30") (term "0"))
                                                   (rule "expand_inInt" (formula "30"))
                                                   (rule "replace_int_MIN" (formula "30") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "30") (term "1,0"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                                   (rule "qeq_literals" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_geqRight" (formula "42"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "31") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011120012120000100_24" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "closeFalse" (formula "31"))
                                                   )
                                                   (branch " result_153.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "30") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111120012120000100_24" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_leqRight" (formula "43"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=anonOut_first4Bits"))
                                                      (rule "replaceKnownSelect_taclet0012120000100_13" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111120012120000100_24" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "closeFalse" (formula "32"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null reference (var_2 = null)"
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "44")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                        (builtin "One Step Simplification" (formula "48"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but first4Bits Out of Bounds!)"
                                        (builtin "One Step Simplification" (formula "48"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "38"))
                                       (rule "blockThrow" (formula "48") (term "1"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "blockThrow" (formula "48") (term "1"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "pullOutSelect" (formula "37") (term "0,0,0") (inst "selectSK=java_lang_Object_created__4"))
                                       (rule "simplifySelectOfCreate" (formula "37"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                                       (rule "castDel" (formula "37") (term "1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "37") (term "0,0"))
                                       (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                                       (rule "applyEqReverse" (formula "38") (term "0,0,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "commute_and" (formula "39") (term "1,0"))
                                       (rule "commute_and" (formula "39") (term "0,0"))
                                       (rule "arrayLengthIsAnInt" (formula "38") (term "0"))
                                       (rule "expand_inInt" (formula "38"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "39"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                       (rule "leq_literals" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "39"))
                                       (rule "qeq_literals" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "methodCallParamThrow" (formula "48") (term "1,0,0,1"))
                                       (rule "tryCatchThrow" (formula "48") (term "1,0,0,1"))
                                       (rule "ifElseUnfold" (formula "48") (term "1,0,0,1") (inst "#boolv=x"))
                                       (rule "variableDeclaration" (formula "48") (term "1,0,0,1") (newnames "x_9"))
                                       (rule "equality_comparison_simple" (formula "48") (term "1,0,0,1"))
                                       (rule "throwUnfold" (formula "48") (term "1") (inst "#v0=a"))
                                       (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                       (rule "variableDeclaration" (formula "48") (term "1") (newnames "a"))
                                       (rule "instanceCreationAssignment" (formula "48") (term "1") (inst "#v0=a_1"))
                                       (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                       (rule "variableDeclaration" (formula "48") (term "1") (newnames "a_1"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "48") (term "1") (inst "#v0=a_2"))
                                       (rule "variableDeclaration" (formula "48") (term "1") (newnames "a_2"))
                                       (rule "methodBodyExpand" (formula "48") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "variableDeclaration" (formula "48") (term "1") (newnames "__NEW___1"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "48") (term "1") (inst "#v0=a_3"))
                                       (rule "variableDeclaration" (formula "48") (term "1") (newnames "a_3"))
                                       (rule "allocateInstance" (formula "48"))
                                        (builtin "One Step Simplification" (formula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "36"))
                                       (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "35")))
                                       (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
                                       (rule "blockEmpty" (formula "51") (term "1"))
                                       (rule "assignment" (formula "51") (term "1"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "wellFormedStoreObject" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "wellFormedCreate" (formula "1") (term "0,0"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0,1,1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "6")))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "41"))
                                       (rule "orRight" (formula "41"))
                                       (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Object_created__5"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                       (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallWithinClass" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "blockEmpty" (formula "53") (term "1"))
                                       (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "blockEmpty" (formula "53") (term "1"))
                                       (rule "methodCallReturnIgnoreResult" (formula "53") (term "1"))
                                       (rule "methodCallReturn" (formula "53") (term "1"))
                                       (rule "assignment" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "blockEmpty" (formula "53") (term "1"))
                                       (rule "assignment" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallSuper" (formula "53") (term "1"))
                                       (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "blockEmpty" (formula "53") (term "1"))
                                       (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "assignment_write_attribute_this" (formula "53") (term "1"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "methodCallEmpty" (formula "53") (term "1"))
                                       (rule "blockEmpty" (formula "53") (term "1"))
                                       (rule "assignment_write_attribute" (formula "53") (term "1"))
                                       (branch "Normal Execution (a_1 != null)"
                                           (builtin "One Step Simplification" (formula "54"))
                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "44")))
                                          (rule "false_right" (formula "53"))
                                          (rule "assignment" (formula "53") (term "1"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "tryCatchThrow" (formula "53") (term "1"))
                                          (rule "ifElseUnfold" (formula "53") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_10"))
                                          (rule "equality_comparison_simple" (formula "53") (term "1"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replace_known_right" (formula "53") (term "0,0,1,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "ifElseSplit" (formula "53"))
                                          (branch "if x_10 true"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_10 false"
                                              (builtin "One Step Simplification" (formula "54"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ifElseSplit" (formula "53"))
                                             (branch "if a instanceof java.lang.Throwable true"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "true_left" (formula "1"))
                                                (rule "variableDeclaration" (formula "53") (term "1") (newnames "e_2"))
                                                (rule "delete_unnecessary_cast" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "assignment" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "methodCallEmpty" (formula "53") (term "1"))
                                                (rule "emptyModality" (formula "53") (term "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_right" (formula "53") (term "0,0,1,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "ifElseSplit" (formula "53"))
                                                (branch "if x_9 true"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_9 false"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "ifElseSplit" (formula "53"))
                                                   (branch "if thrownExc instanceof java.lang.Throwable true"
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "variableDeclaration" (formula "53") (term "1") (newnames "e_3"))
                                                      (rule "delete_unnecessary_cast" (formula "53") (term "1"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "assignment" (formula "53") (term "1"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "emptyModality" (formula "53") (term "1"))
                                                      (rule "andRight" (formula "53"))
                                                      (branch ""
                                                         (rule "andRight" (formula "53"))
                                                         (branch ""
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "notRight" (formula "53"))
                                                            (rule "inEqSimp_ltRight" (formula "53"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "52"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31"))
                                                            (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                            (rule "mul_literals" (formula "31") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                            (rule "mul_literals" (formula "22") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "28"))
                                                            (rule "leq_literals" (formula "29") (term "0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "26"))
                                                            (rule "leq_literals" (formula "30") (term "0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "19"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "4") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "qeq_literals" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "19"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "23") (term "0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "closeFalse" (formula "23"))
                                                         )
                                                         (branch ""
                                                             (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "44")))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "inEqSimp_leqRight" (formula "51"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "52"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22"))
                                                            (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30"))
                                                            (rule "mul_literals" (formula "30") (term "1,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                                            (rule "mul_literals" (formula "3") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                            (rule "mul_literals" (formula "22") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                            (rule "mul_literals" (formula "30") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "qeq_literals" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (term "1") (ifseqformula "26"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "19"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "27") (term "0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "21"))
                                                            (rule "leq_literals" (formula "25") (term "0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "closeFalse" (formula "21"))
                                                         )
                                                      )
                                                      (branch ""
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "allRight" (formula "53") (inst "sk=f_0"))
                                                         (rule "allRight" (formula "53") (inst "sk=o_0"))
                                                         (rule "orRight" (formula "53"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "inEqSimp_leqRight" (formula "51"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "52"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28"))
                                                         (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                         (rule "mul_literals" (formula "27") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                         (rule "mul_literals" (formula "21") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                         (rule "mul_literals" (formula "29") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (term "1") (ifseqformula "27"))
                                                         (rule "qeq_literals" (formula "3") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0"))
                                                         (rule "qeq_literals" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "12") (term "0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "17"))
                                                         (rule "leq_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "24"))
                                                         (rule "leq_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "18"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                   )
                                                   (branch "if thrownExc instanceof java.lang.Throwable false"
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch "if a instanceof java.lang.Throwable false"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "Null Reference (a_1 = null)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "42"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "expand_inChar" (formula "34") (term "1,0,0,1,0,1,1"))
                                    (rule "replace_char_MIN" (formula "34") (term "0,1,1,0,0,1,0,1,1"))
                                    (rule "replace_char_MAX" (formula "34") (term "1,0,1,0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "close" (formula "38") (ifseqformula "37"))
                                 )
                                 (branch "Pre (hexCharacters)"
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "wellFormedAnon" (formula "40"))
                                    (rule "wellFormedStorePrimitive" (formula "40") (term "0"))
                                    (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_ltRight" (formula "39"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "wellFormedStoreObject" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "wellFormedCreate" (formula "29") (term "0"))
                                    (rule "replaceKnownSelect_taclet0_0" (formula "29") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "29") (term "0,1,1"))
                                    (rule "eqSymm" (formula "29") (term "0,1"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")))
                                    (rule "closeTrue" (formula "29"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (_bytes_2 = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_bytes_2 != null, but i Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "blockThrow" (formula "22") (term "1"))
                     (rule "commute_or" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "12"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "methodCallParamThrow" (formula "23") (term "1,0,0,1"))
                     (rule "tryCatchThrow" (formula "23") (term "1,0,0,1"))
                     (rule "ifElseUnfold" (formula "23") (term "1,0,0,1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "23") (term "1,0,0,1") (newnames "x_6"))
                     (rule "equality_comparison_simple" (formula "23") (term "1,0,0,1"))
                     (rule "throwUnfold" (formula "23") (term "1") (inst "#v0=a"))
                     (rule "variableDeclarationAssign" (formula "23") (term "1"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "a"))
                     (rule "instanceCreationAssignment" (formula "23") (term "1") (inst "#v0=a_1"))
                     (rule "variableDeclarationAssign" (formula "23") (term "1"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_1"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_2"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_2"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "__NEW___1"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_3"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_3"))
                     (rule "allocateInstance" (formula "23"))
                      (builtin "One Step Simplification" (formula "24"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                     (rule "wellFormedStorePrimitive" (formula "1") (term "0,0,1,0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
                     (rule "blockEmpty" (formula "26") (term "1"))
                     (rule "assignment" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "wellFormedStoreObject" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "wellFormedCreate" (formula "1") (term "0,0"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0,1,1,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "6")))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "19"))
                     (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "assignment_write_attribute_this" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallWithinClass" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "assignment_write_attribute_this" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "27") (term "1"))
                     (rule "methodCallReturn" (formula "27") (term "1"))
                     (rule "assignment" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "assignment" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallSuper" (formula "27") (term "1"))
                     (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "assignment_write_attribute_this" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "methodCallEmpty" (formula "27") (term "1"))
                     (rule "blockEmpty" (formula "27") (term "1"))
                     (rule "assignment_write_attribute" (formula "27") (term "1"))
                     (branch "Normal Execution (a_1 != null)"
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "21")))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "false_right" (formula "27"))
                        (rule "assignment" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "tryCatchThrow" (formula "27") (term "1"))
                        (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_7"))
                        (rule "equality_comparison_simple" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "ifElseSplit" (formula "27"))
                        (branch "if x_7 true"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_7 false"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "27"))
                           (branch "if a instanceof java.lang.Throwable true"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "27") (term "1") (newnames "e_2"))
                              (rule "delete_unnecessary_cast" (formula "27") (term "1"))
                               (builtin "One Step Simplification" (formula "28"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "27") (term "1"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "assignment" (formula "27") (term "1"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "methodCallEmpty" (formula "27") (term "1"))
                              (rule "emptyModality" (formula "27") (term "1"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "replace_known_right" (formula "27") (term "0,0,1,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "ifElseSplit" (formula "27"))
                              (branch "if x_6 true"
                                  (builtin "One Step Simplification" (formula "28"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_6 false"
                                  (builtin "One Step Simplification" (formula "28"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "27"))
                                 (branch "if thrownExc instanceof java.lang.Throwable true"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "27") (term "1") (newnames "e_3"))
                                    (rule "delete_unnecessary_cast" (formula "27") (term "1"))
                                     (builtin "One Step Simplification" (formula "28"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "27") (term "1"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "emptyModality" (formula "27") (term "1"))
                                    (rule "andRight" (formula "27"))
                                    (branch ""
                                       (rule "andRight" (formula "27"))
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                          (rule "mul_literals" (formula "4") (term "1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "15"))
                                          (rule "qeq_literals" (formula "4") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "5"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "21")))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                          (rule "leq_literals" (formula "3") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "closeFalse" (formula "14"))
                                       )
                                    )
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "allRight" (formula "27") (inst "sk=f_0"))
                                       (rule "allRight" (formula "27") (inst "sk=o_0"))
                                       (rule "orRight" (formula "27"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                                 (branch "if thrownExc instanceof java.lang.Throwable false"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "if a instanceof java.lang.Throwable false"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a_1 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "if x_3 false"
                   (builtin "One Step Simplification" (formula "22"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_bytes_2 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_bytes_2 = null)"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
          (builtin "One Step Simplification" (formula "11"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "expand_inInt" (formula "11") (term "1"))
         (rule "replace_int_MAX" (formula "11") (term "1,0,1"))
         (rule "replace_int_MIN" (formula "11") (term "0,1,1"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_5_1"))
         (rule "blockEmpty" (formula "20") (term "1,0,1"))
         (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_lang_StringBuilder_str_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
         (rule "assignment" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_2"))
         (rule "assignment_read_length" (formula "20") (term "1"))
         (branch "Normal Execution (_bytes_2 != null)"
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
            (rule "false_right" (formula "20"))
            (rule "less_than_comparison_simple" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "methodCallEmpty" (formula "20") (term "1"))
            (rule "emptyModality" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "impRight" (formula "20"))
            (rule "notLeft" (formula "1"))
            (rule "returnUnfold" (formula "21") (term "1") (inst "#v0=s"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "s_4"))
             (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_toString,result_153,exc_174,heapAfter_toString,anon_heap_toString") (contract "java.lang.StringBuilder[java.lang.StringBuilder::toString()].JML normal_behavior operation contract.0"))
            (branch "Post (toString)"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "20"))
               (rule "eqSymm" (formula "18"))
               (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
               (rule "assignment" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=java_lang_StringBuilder_str_1"))
               (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")))
               (rule "replaceKnownSelect_taclet200_2" (formula "18") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet200_3" (formula "18") (term "2,0"))
               (rule "eqSymm" (formula "19"))
               (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
               (rule "hideAuxiliaryEq" (formula "19"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0"))
               (rule "ifthenelse_negated" (formula "18") (term "0"))
               (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "17") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfCreate" (formula "17"))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "26")))
               (rule "castDel" (formula "17") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "17") (term "0,0"))
               (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
               (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "17"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "pullOutSelect" (formula "18") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__2"))
               (rule "simplifySelectOfCreate" (formula "18"))
                (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")))
               (rule "castDel" (formula "18") (term "0"))
               (rule "applyEqReverse" (formula "19") (term "0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "hideAuxiliaryEq" (formula "18"))
               (rule "applyEq" (formula "23") (term "0") (ifseqformula "18"))
               (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "19"))
               (rule "replaceKnownSelect_taclet00200_4" (formula "19") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00200_5" (formula "19") (term "0,0"))
               (rule "notLeft" (formula "19"))
               (rule "methodCallReturn" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (rule "tryEmpty" (formula "26") (term "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (rule "andRight" (formula "26"))
               (branch ""
                  (rule "andRight" (formula "26"))
                  (branch ""
                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "20")))
                     (rule "closeTrue" (formula "26"))
                  )
                  (branch ""
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
               )
               (branch ""
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "allRight" (formula "26") (inst "sk=f_0"))
                  (rule "allRight" (formula "26") (inst "sk=o_0"))
                  (rule "orRight" (formula "26"))
                  (rule "eqSymm" (formula "27"))
                  (rule "inEqSimp_ltRight" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "12"))
                  (rule "leq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                  (rule "leq_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "26"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "2"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "13"))
                  (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "11"))
                  (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "times_zero_1" (formula "11") (term "0"))
                  (rule "leq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                  (rule "applyEq" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and_2" (formula "4") (term "0,0,0"))
                  (rule "commute_and" (formula "4") (term "1,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "cnf_rightDist" (formula "12") (term "0"))
                  (rule "distr_forallAnd" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "commute_or" (formula "13") (term "0"))
                  (rule "applyEq_and_gen3" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "commute_and" (formula "4") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "4") (term "0,0"))
                  (rule "commute_or" (formula "4") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "4") (term "1,0,0"))
                  (rule "commute_or" (formula "4") (term "0,1,0,0"))
                  (rule "commute_or" (formula "4") (term "1,1,0,0"))
                  (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                  (rule "commute_or" (formula "4") (term "1,0,0,0"))
                  (rule "shift_paren_and" (formula "4") (term "0,0"))
                  (rule "ifthenelse_split" (formula "5") (term "0"))
                  (branch "o_0 = s_2 TRUE"
                     (rule "applyEqReverse" (formula "7") (term "0,0,0,1,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,0,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "5"))
                     (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "notRight" (formula "27"))
                     (rule "applyEq" (formula "5") (term "0,0,1,1,0,0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "5") (term "0,1,1,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                     (rule "close" (formula "26") (ifseqformula "1"))
                  )
                  (branch "o_0 = s_2 FALSE"
                     (rule "applyEqReverse" (formula "6") (term "0,0,0,1,0,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0,0,0,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,1,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "commute_and_2" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "cut_direct" (formula "24") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "false_right" (formula "25"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "notRight" (formula "25"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "26")))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
            (branch "Exceptional Post (toString)"
                (builtin "One Step Simplification" (formula "23"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "19"))
               (rule "notLeft" (formula "17"))
               (rule "close" (formula "20") (ifseqformula "19"))
            )
            (branch "Pre (toString)"
                (builtin "One Step Simplification" (formula "21"))
               (rule "wellFormedAnon" (formula "21") (term "1"))
               (rule "wellFormedStorePrimitive" (formula "21") (term "0,1"))
               (rule "replace_known_left" (formula "21") (term "1,1") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_ltRight" (formula "15"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "12"))
               (rule "leq_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "wellFormedStoreObject" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "wellFormedCreate" (formula "19") (term "0,1"))
               (rule "replaceKnownSelect_taclet0_0" (formula "19") (term "0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "19") (term "0,1,1,1"))
               (rule "eqSymm" (formula "19") (term "0,1,1"))
               (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")))
               (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,0"))
               (rule "times_zero_1" (formula "13") (term "0"))
               (rule "leq_literals" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "8") (term "1,1,0,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
               (rule "applyEq" (formula "6") (term "0") (ifseqformula "10"))
               (rule "nnf_imp2or" (formula "6") (term "0"))
               (rule "nnf_notAnd" (formula "6") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
               (rule "mul_literals" (formula "6") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
               (rule "Class_invariant_axiom_for_java_lang_StringBuilder" (formula "16"))
               (rule "replaceKnownSelect_taclet200_2" (formula "16") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet200_3" (formula "16") (term "0,0"))
               (rule "notRight" (formula "16"))
               (rule "close" (formula "12") (ifseqformula "1"))
            )
            (branch "Null reference (r_5 = null)"
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "Null Reference (_bytes_2 = null)"
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (s = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (_bytes_2 = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "closeFalse" (formula "1"))
)
)
}
