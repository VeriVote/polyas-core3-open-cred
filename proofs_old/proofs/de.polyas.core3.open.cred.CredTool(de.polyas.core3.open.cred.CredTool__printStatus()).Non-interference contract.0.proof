\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Nov 19 21:47:19 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Nov 19 21:47:19 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:printStatus()].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:printStatus()].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "104301")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "5") (term "0,0,0,1"))
(rule "eqSymm" (formula "5") (term "1,0,0,1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "boxToDiamond" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "4") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "exLeft" (formula "9") (inst "sk=i_0"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "exLeft" (formula "6") (inst "sk=i_2_0"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0"))
(rule "castedGetAny" (formula "9") (term "0,0,1,0"))
(rule "castedGetAny" (formula "5") (term "0,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0"))
(rule "castedGetAny" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "4"))
(rule "commute_and" (formula "10") (term "0,0"))
(rule "commute_and" (formula "9") (term "0,0"))
(rule "commute_and" (formula "5") (term "0,0"))
(rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_printStatus,savedHeapBefore_printStatus"))
 (builtin "One Step Simplification" (formula "36"))
(rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "36") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "36") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "36") (term "1"))
(rule "variableDeclaration" (formula "36") (term "1") (newnames "x_1"))
(rule "compound_modulo_1" (formula "36") (term "1") (inst "#v=x_2"))
(rule "variableDeclarationAssign" (formula "36") (term "1"))
(rule "variableDeclaration" (formula "36") (term "1") (newnames "x_2"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "36") (term "1") (inst "#v0=c"))
(rule "variableDeclaration" (formula "36") (term "1") (newnames "c_1"))
(rule "assignment_read_attribute_this" (formula "36") (term "1"))
 (builtin "One Step Simplification" (formula "36"))
 (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_getCurrentLineNumber,result_99,exc_130") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
(branch "Post (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")))
    (builtin "One Step Simplification" (formula "40"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "insert_constant_string_value" (formula "23") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "insert_constant_string_value" (formula "22") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "insert_constant_string_value" (formula "24") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "castDel" (formula "23") (term "0,0"))
   (rule "castDel" (formula "22") (term "0,0"))
   (rule "castDel" (formula "24") (term "0,0"))
   (rule "expand_inLong" (formula "16") (term "1,0"))
   (rule "replace_long_MIN" (formula "16") (term "0,1,1,0"))
   (rule "replace_long_MAX" (formula "16") (term "1,0,1,0"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "17"))
   (rule "assignment" (formula "42") (term "1"))
    (builtin "One Step Simplification" (formula "42"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "assignmentModulo" (formula "41") (term "1"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "equal_literals" (formula "41") (term "0,0"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "translateJavaMod" (formula "41") (term "0,1,0"))
   (rule "equality_comparison_simple" (formula "41") (term "1"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "lenNonNegative" (formula "12") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "lenNonNegative" (formula "7") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "seqGetAlphaCast" (formula "15") (term "0"))
   (rule "castedGetAny" (formula "15") (term "0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "seqGetAlphaCast" (formula "9") (term "0"))
   (rule "castedGetAny" (formula "9") (term "0"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "ifSplit" (formula "43"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "44"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "activeUseStaticFieldWriteAccess" (formula "44") (term "1") (inst "#v0=s"))
      (rule "variableDeclarationAssign" (formula "44") (term "1"))
      (rule "variableDeclaration" (formula "44") (term "1") (newnames "s"))
      (rule "compound_addition_2" (formula "44") (term "1") (inst "#v1=s_2") (inst "#v0=s_1"))
      (rule "variableDeclarationAssign" (formula "44") (term "1"))
      (rule "variableDeclaration" (formula "44") (term "1") (newnames "s_1"))
      (rule "compound_addition_2" (formula "44") (term "1") (inst "#v1=x") (inst "#v0=s_3"))
      (rule "variableDeclarationAssign" (formula "44") (term "1"))
      (rule "variableDeclaration" (formula "44") (term "1") (newnames "s_3"))
      (rule "stringAssignment" (formula "44") (term "1"))
       (builtin "One Step Simplification" (formula "2"))
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "notLeft" (formula "1"))
      (rule "variableDeclarationAssign" (formula "46") (term "1"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_3"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "46") (term "1") (inst "#v0=c"))
      (rule "variableDeclaration" (formula "46") (term "1") (newnames "c_2"))
      (rule "assignment_read_attribute_this" (formula "46") (term "1"))
       (builtin "One Step Simplification" (formula "46"))
       (builtin "Use Operation Contract" (formula "46") (newnames "heapBefore_getCurrentLineNumber_0,result_100,exc_131") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
      (branch "Post (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "25"))
          (builtin "One Step Simplification" (formula "49"))
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "3")))
         (rule "expand_inLong" (formula "24") (term "1,0"))
         (rule "replace_long_MIN" (formula "24") (term "0,1,1,0"))
         (rule "replace_long_MAX" (formula "24") (term "1,0,1,0"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "26"))
         (rule "andLeft" (formula "25"))
         (rule "inEqSimp_commuteLeq" (formula "26"))
         (rule "assignment" (formula "51") (term "1"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "stringConcatIntExpRight" (formula "51") (term "1") (inst "sk=sk_0"))
          (builtin "One Step Simplification" (formula "53"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
         (rule "variableDeclarationAssign" (formula "53") (term "1"))
         (rule "variableDeclaration" (formula "53") (term "1") (newnames "s_2"))
         (rule "stringAssignment" (formula "53") (term "1"))
          (builtin "One Step Simplification" (formula "55"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "stringConcat" (formula "55") (term "1") (inst "sk=sk_1"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "57"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
         (rule "assignment_write_static_attribute" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "eqSeqConcat" (formula "3"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "3"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
         (rule "add_literals" (formula "5") (term "0,1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "0,2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
         (rule "add_literals" (formula "3") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "add_literals" (formula "5") (term "1,1,0"))
         (rule "add_literals" (formula "5") (term "1,0"))
         (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "add_literals" (formula "4") (term "1,2,0"))
         (rule "add_literals" (formula "4") (term "2,0"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "add_literals" (formula "3") (term "1,0,1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
         (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
         (rule "mul_literals" (formula "3") (term "1,1,1,1"))
         (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
         (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfCreate" (formula "2"))
          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
         (rule "castDel" (formula "2") (term "1,0"))
         (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "eqSeqConcat" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addComm0" (formula "1") (term "1"))
         (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_literals" (formula "1") (term "1,0,1"))
         (rule "add_literals" (formula "1") (term "0,1"))
         (rule "applyEqRigid" (formula "3") (term "2,0") (ifseqformula "1"))
         (rule "eqSeqConcat" (formula "7"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "lenOfSeqSub" (formula "9") (term "2,0"))
         (rule "sub_literals" (formula "9") (term "1,2,0"))
         (rule "less_literals" (formula "9") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "eqSeqSingleton" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "lenOfSeqSub" (formula "7") (term "0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "sub_literals" (formula "7") (term "0"))
         (rule "lenOfSeqSub" (formula "8") (term "0"))
         (rule "sub_literals" (formula "8") (term "1,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "equal_literals" (formula "8") (term "1"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "less_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_addAssoc" (formula "7") (term "1"))
         (rule "add_literals" (formula "7") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "add_literals" (formula "7") (term "1,1"))
         (rule "add_literals" (formula "7") (term "1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "sub_literals" (formula "7") (term "1,1,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "sub_literals" (formula "7") (term "1,1,0,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSubEQ" (formula "7") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "1,0,0"))
         (rule "eqSeqConcat" (formula "3"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "3"))
         (rule "lenOfSeqSub" (formula "5") (term "2,0"))
         (rule "polySimp_elimSub" (formula "5") (term "1,2,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,2,0"))
         (rule "add_literals" (formula "5") (term "1,1,1,2,0"))
         (rule "times_zero_1" (formula "5") (term "1,1,2,0"))
         (rule "add_literals" (formula "5") (term "1,2,0"))
         (rule "lenOfSeqSub" (formula "3") (term "0"))
         (rule "polySimp_elimSub" (formula "3") (term "1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
         (rule "add_literals" (formula "3") (term "1,1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,1,0"))
         (rule "add_zero_right" (formula "3") (term "1,0"))
         (rule "eqSeqSingleton" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "lenOfSeqSub" (formula "4") (term "0"))
         (rule "sub_literals" (formula "4") (term "1,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "less_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "polySimp_addAssoc" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "add_literals" (formula "3") (term "1,1"))
         (rule "add_literals" (formula "3") (term "1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "equal_literals" (formula "3") (term "1"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "replace_known_left" (formula "5") (term "0,2,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "getOfSeqSub" (formula "4") (term "0"))
         (rule "castDel" (formula "4") (term "2,0"))
         (rule "add_literals" (formula "4") (term "1,1,0"))
         (rule "sub_literals" (formula "4") (term "1,1,0,0"))
         (rule "leq_literals" (formula "4") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "less_literals" (formula "4") (term "0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "eqSeqConcat" (formula "10"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "lenOfSeqSub" (formula "12") (term "2,0"))
         (rule "less_literals" (formula "12") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "sub_literals" (formula "12") (term "2,0"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "eqSeqSingleton" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "lenOfSeqSub" (formula "10") (term "0"))
         (rule "less_literals" (formula "10") (term "0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "sub_literals" (formula "10") (term "0"))
         (rule "lenOfSeqSub" (formula "11") (term "0"))
         (rule "sub_literals" (formula "11") (term "1,0"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "equal_literals" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "less_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addAssoc" (formula "10") (term "1"))
         (rule "add_literals" (formula "10") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "add_literals" (formula "10") (term "1,1"))
         (rule "add_literals" (formula "10") (term "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "getOfSeqSub" (formula "4") (term "0"))
         (rule "castDel" (formula "4") (term "2,0"))
         (rule "leq_literals" (formula "4") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "add_zero_left" (formula "4") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
         (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "4") (term "1,0,0"))
         (rule "less_literals" (formula "4") (term "0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "getOfSeqSub" (formula "10") (term "0"))
         (rule "castDel" (formula "10") (term "2,0"))
         (rule "sub_literals" (formula "10") (term "1,1,0,0"))
         (rule "leq_literals" (formula "10") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "less_literals" (formula "10") (term "0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "getOfSeqSub" (formula "10") (term "0"))
         (rule "castDel" (formula "10") (term "2,0"))
         (rule "leq_literals" (formula "10") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "sub_literals" (formula "10") (term "1,0,0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "less_literals" (formula "10") (term "0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "getOfSeqSub" (formula "10") (term "0"))
         (rule "castDel" (formula "10") (term "2,0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "sub_literals" (formula "10") (term "1,1,0,0"))
         (rule "leq_literals" (formula "10") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "less_literals" (formula "10") (term "0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "getOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "10") (term "2,0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "leq_literals" (formula "10") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "10") (term "1,0,0"))
         (rule "eqSeqConcat" (formula "5"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "lenOfSeqSub" (formula "7") (term "2,0"))
         (rule "sub_literals" (formula "7") (term "1,2,0"))
         (rule "less_literals" (formula "7") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1"))
         (rule "add_literals" (formula "5") (term "0,1"))
         (rule "eqSeqSingleton" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "lenOfSeqSub" (formula "5") (term "0"))
         (rule "sub_literals" (formula "5") (term "1,0"))
         (rule "less_literals" (formula "5") (term "0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "lenOfSeqSub" (formula "6") (term "0"))
         (rule "sub_literals" (formula "6") (term "1,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "equal_literals" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "less_literals" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_addAssoc" (formula "5") (term "1"))
         (rule "add_literals" (formula "5") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "add_literals" (formula "5") (term "1,1"))
         (rule "add_literals" (formula "5") (term "1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "eqSeqConcat" (formula "12"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "lenOfSeqSub" (formula "14") (term "2,0"))
         (rule "sub_literals" (formula "14") (term "1,2,0"))
         (rule "less_literals" (formula "14") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "eqSeqSingleton" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "lenOfSeqSub" (formula "12") (term "0"))
         (rule "less_literals" (formula "12") (term "0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "sub_literals" (formula "12") (term "0"))
         (rule "lenOfSeqSub" (formula "13") (term "0"))
         (rule "sub_literals" (formula "13") (term "1,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "equal_literals" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "less_literals" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_addAssoc" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_addAssoc" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_addAssoc" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_addAssoc" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "polySimp_addAssoc" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "add_literals" (formula "12") (term "1,1"))
         (rule "add_literals" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "getOfSeqSub" (formula "5") (term "0"))
         (rule "castDel" (formula "5") (term "2,0"))
         (rule "sub_literals" (formula "5") (term "1,1,0,0"))
         (rule "leq_literals" (formula "5") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "add_literals" (formula "5") (term "1,1,0"))
         (rule "less_literals" (formula "5") (term "0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "getOfSeqSub" (formula "12") (term "0"))
         (rule "castDel" (formula "12") (term "2,0"))
         (rule "add_zero_left" (formula "12") (term "1,1,0"))
         (rule "leq_literals" (formula "12") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "sub_literals" (formula "12") (term "1,0,0"))
         (rule "less_literals" (formula "12") (term "0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "getOfSeqSub" (formula "5") (term "0"))
         (rule "castDel" (formula "5") (term "2,0"))
         (rule "add_zero_left" (formula "5") (term "1,1,0"))
         (rule "sub_literals" (formula "5") (term "1,1,0,0"))
         (rule "leq_literals" (formula "5") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "less_literals" (formula "5") (term "0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "getOfSeqSub" (formula "12") (term "0"))
         (rule "castDel" (formula "12") (term "2,0"))
         (rule "leq_literals" (formula "12") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "sub_literals" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0"))
         (rule "less_literals" (formula "12") (term "0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "getOfSeqSub" (formula "5") (term "0"))
         (rule "castDel" (formula "5") (term "2,0"))
         (rule "leq_literals" (formula "5") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0"))
         (rule "add_literals" (formula "5") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,1,0,0"))
         (rule "add_literals" (formula "5") (term "1,0,0"))
         (rule "less_literals" (formula "5") (term "0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "eqSeqConcat" (formula "6"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "lenOfSeqSub" (formula "8") (term "2,0"))
         (rule "sub_literals" (formula "8") (term "1,2,0"))
         (rule "less_literals" (formula "8") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "lenOfSeqSub" (formula "6") (term "0"))
         (rule "less_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "sub_literals" (formula "6") (term "0"))
         (rule "eqSeqSingleton" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_addAssoc" (formula "6") (term "1"))
         (rule "add_literals" (formula "6") (term "0,1"))
         (rule "lenOfSeqSub" (formula "7") (term "0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "sub_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "add_literals" (formula "6") (term "1,1"))
         (rule "add_literals" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "getOfSeqSub" (formula "13") (term "0"))
         (rule "castDel" (formula "13") (term "2,0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "sub_literals" (formula "13") (term "1,1,0,0"))
         (rule "leq_literals" (formula "13") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "less_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "getOfSeqSub" (formula "6") (term "0"))
         (rule "castDel" (formula "6") (term "2,0"))
         (rule "add_zero_left" (formula "6") (term "1,1,0"))
         (rule "leq_literals" (formula "6") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "sub_literals" (formula "6") (term "1,0,0"))
         (rule "less_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "eqSeqConcat" (formula "14"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "lenOfSeqSub" (formula "16") (term "2,0"))
         (rule "sub_literals" (formula "16") (term "1,2,0"))
         (rule "less_literals" (formula "16") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "lenOfSeqSub" (formula "14") (term "0"))
         (rule "sub_literals" (formula "14") (term "1,0"))
         (rule "less_literals" (formula "14") (term "0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "eqSeqSingleton" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "1"))
         (rule "add_literals" (formula "14") (term "0,1"))
         (rule "lenOfSeqSub" (formula "15") (term "0"))
         (rule "less_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "sub_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "1"))
         (rule "add_literals" (formula "14") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "1"))
         (rule "add_literals" (formula "14") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "1"))
         (rule "add_literals" (formula "14") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "add_literals" (formula "14") (term "1,1"))
         (rule "add_literals" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "getOfSeqSub" (formula "13") (term "0"))
         (rule "castDel" (formula "13") (term "2,0"))
         (rule "add_zero_right" (formula "13") (term "1,1,0"))
         (rule "sub_literals" (formula "13") (term "1,1,0,0"))
         (rule "leq_literals" (formula "13") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "less_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "getOfSeqSub" (formula "6") (term "0"))
         (rule "castDel" (formula "6") (term "2,0"))
         (rule "add_literals" (formula "6") (term "1,1,0"))
         (rule "sub_literals" (formula "6") (term "1,1,0,0"))
         (rule "leq_literals" (formula "6") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "less_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "getOfSeqSub" (formula "14") (term "0"))
         (rule "castDel" (formula "14") (term "2,0"))
         (rule "sub_literals" (formula "14") (term "1,1,0,0"))
         (rule "leq_literals" (formula "14") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "add_literals" (formula "14") (term "1,1,0"))
         (rule "less_literals" (formula "14") (term "0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "getOfSeqSub" (formula "6") (term "0"))
         (rule "castDel" (formula "6") (term "2,0"))
         (rule "sub_literals" (formula "6") (term "1,1,0,0"))
         (rule "leq_literals" (formula "6") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "add_literals" (formula "6") (term "1,1,0"))
         (rule "less_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "eqSeqConcat" (formula "7"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "lenOfSeqSub" (formula "9") (term "2,0"))
         (rule "less_literals" (formula "9") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "sub_literals" (formula "9") (term "2,0"))
         (rule "lenOfSeqSub" (formula "7") (term "0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "sub_literals" (formula "7") (term "0"))
         (rule "eqSeqSingleton" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "add_literals" (formula "7") (term "1,1"))
         (rule "add_literals" (formula "7") (term "1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "lenOfSeqSub" (formula "7") (term "0"))
         (rule "sub_literals" (formula "7") (term "1,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "less_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "getOfSeqSub" (formula "15") (term "0"))
         (rule "castDel" (formula "15") (term "2,0"))
         (rule "leq_literals" (formula "15") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "sub_literals" (formula "15") (term "1,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0"))
         (rule "less_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "getOfSeqSubEQ" (formula "14") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "14") (term "2,0"))
         (rule "leq_literals" (formula "14") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "add_literals" (formula "14") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "14") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "6") (term "0"))
         (rule "castDel" (formula "6") (term "2,0"))
         (rule "leq_literals" (formula "6") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
         (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "6") (term "1,0,0"))
         (rule "less_literals" (formula "6") (term "0,0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "add_zero_left" (formula "7") (term "1,1,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "sub_literals" (formula "7") (term "1,0,0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSub" (formula "15") (term "0"))
         (rule "castDel" (formula "15") (term "2,0"))
         (rule "sub_literals" (formula "15") (term "1,1,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0"))
         (rule "leq_literals" (formula "15") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "less_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "eqSeqConcat" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "lenOfSeqSub" (formula "18") (term "2,0"))
         (rule "less_literals" (formula "18") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "sub_literals" (formula "18") (term "2,0"))
         (rule "eqSeqSingleton" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "polySimp_addAssoc" (formula "16") (term "1"))
         (rule "add_literals" (formula "16") (term "0,1"))
         (rule "lenOfSeqSub" (formula "17") (term "0"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "sub_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "lenOfSeqSub" (formula "16") (term "0"))
         (rule "less_literals" (formula "16") (term "0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "0"))
         (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "polySimp_addAssoc" (formula "16") (term "1"))
         (rule "add_literals" (formula "16") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "polySimp_addAssoc" (formula "16") (term "1"))
         (rule "add_literals" (formula "16") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "add_literals" (formula "16") (term "1,1"))
         (rule "add_literals" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "sub_literals" (formula "7") (term "1,0,0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSub" (formula "15") (term "0"))
         (rule "castDel" (formula "15") (term "2,0"))
         (rule "sub_literals" (formula "15") (term "1,1,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0"))
         (rule "leq_literals" (formula "15") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "less_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "getOfSeqSub" (formula "16") (term "0"))
         (rule "castDel" (formula "16") (term "2,0"))
         (rule "sub_literals" (formula "16") (term "1,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "1,1,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "less_literals" (formula "16") (term "0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "eqSeqConcat" (formula "8"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "add_literals" (formula "8") (term "1,0,0"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "lenOfSeqSub" (formula "10") (term "2,0"))
         (rule "less_literals" (formula "10") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "sub_literals" (formula "10") (term "2,0"))
         (rule "lenOfSeqSub" (formula "8") (term "0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "sub_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "eqSeqSingleton" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "eqSeqSingleton" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "lenOfSeqSub" (formula "8") (term "0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "sub_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "lenOfSeqSub" (formula "9") (term "0"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "sub_literals" (formula "9") (term "0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "sub_literals" (formula "7") (term "1,1,0,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSub" (formula "16") (term "0"))
         (rule "castDel" (formula "16") (term "2,0"))
         (rule "add_zero_right" (formula "16") (term "1,1,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "1,0,0"))
         (rule "less_literals" (formula "16") (term "0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "getOfSeqSub" (formula "17") (term "0"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "sub_literals" (formula "17") (term "1,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "sub_literals" (formula "8") (term "1,0,0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "sub_literals" (formula "9") (term "1,0,0"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "sub_literals" (formula "7") (term "1,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "eqSeqConcat" (formula "18"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "lenOfSeqSub" (formula "20") (term "2,0"))
         (rule "sub_literals" (formula "20") (term "1,2,0"))
         (rule "less_literals" (formula "20") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "lenOfSeqSub" (formula "18") (term "0"))
         (rule "sub_literals" (formula "18") (term "1,0"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "eqSeqSingleton" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "polySimp_addAssoc" (formula "18") (term "1"))
         (rule "add_literals" (formula "18") (term "0,1"))
         (rule "lenOfSeqSub" (formula "19") (term "0"))
         (rule "sub_literals" (formula "19") (term "1,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "polySimp_addAssoc" (formula "18") (term "1"))
         (rule "add_literals" (formula "18") (term "0,1"))
         (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "add_literals" (formula "18") (term "1,1"))
         (rule "add_literals" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "getOfSeqSub" (formula "17") (term "0"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "sub_literals" (formula "17") (term "1,0,0"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "sub_literals" (formula "8") (term "1,1,0,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "sub_literals" (formula "9") (term "1,1,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "add_literals" (formula "9") (term "1,0"))
         (rule "getOfSeqSubEQ" (formula "16") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "16") (term "2,0"))
         (rule "add_literals" (formula "16") (term "1,1,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "16") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "7") (term "0"))
         (rule "castDel" (formula "7") (term "2,0"))
         (rule "leq_literals" (formula "7") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "1,0,0"))
         (rule "less_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "sub_literals" (formula "18") (term "1,0,0"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "17") (term "0"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "sub_literals" (formula "17") (term "1,0,0"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "sub_literals" (formula "8") (term "1,1,0,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "sub_literals" (formula "9") (term "1,1,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "sub_literals" (formula "18") (term "1,0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "17") (term "0"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "sub_literals" (formula "17") (term "1,1,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "sub_literals" (formula "8") (term "1,0,0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "eqSeqConcat" (formula "19"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "lenOfSeqSub" (formula "21") (term "2,0"))
         (rule "less_literals" (formula "21") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "2,0"))
         (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "polySimp_addAssoc" (formula "19") (term "1"))
         (rule "add_literals" (formula "19") (term "0,1"))
         (rule "eqSeqSingleton" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "lenOfSeqSub" (formula "19") (term "0"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "sub_literals" (formula "19") (term "0"))
         (rule "lenOfSeqSub" (formula "20") (term "0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "add_literals" (formula "19") (term "1,1"))
         (rule "add_literals" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "sub_literals" (formula "9") (term "1,1,0,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "sub_literals" (formula "18") (term "1,0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "17") (term "0"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "sub_literals" (formula "17") (term "1,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "less_literals" (formula "17") (term "0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "sub_literals" (formula "8") (term "1,0,0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "add_literals" (formula "19") (term "1,0"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "sub_literals" (formula "9") (term "1,0,0"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "sub_literals" (formula "18") (term "1,1,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "8") (term "0"))
         (rule "castDel" (formula "8") (term "2,0"))
         (rule "leq_literals" (formula "8") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "1,0,0"))
         (rule "add_literals" (formula "8") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "8") (term "1,0,0"))
         (rule "less_literals" (formula "8") (term "0,0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "sub_literals" (formula "19") (term "1,0,0"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "getOfSeqSub" (formula "9") (term "0"))
         (rule "castDel" (formula "9") (term "2,0"))
         (rule "leq_literals" (formula "9") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
         (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
         (rule "add_literals" (formula "9") (term "1,0,0"))
         (rule "less_literals" (formula "9") (term "0,0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "getOfSeqSubEQ" (formula "17") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "17") (term "2,0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "17") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "sub_literals" (formula "18") (term "1,1,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "add_literals" (formula "18") (term "1,0"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "eqSeqConcat" (formula "20"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "lenOfSeqSub" (formula "22") (term "2,0"))
         (rule "less_literals" (formula "22") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "2,0"))
         (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "add_literals" (formula "20") (term "1,1"))
         (rule "add_literals" (formula "20") (term "1"))
         (rule "eqSeqSingleton" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "lenOfSeqSub" (formula "20") (term "0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "lenOfSeqSub" (formula "20") (term "0"))
         (rule "sub_literals" (formula "20") (term "1,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "equal_literals" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "less_literals" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "sub_literals" (formula "18") (term "1,1,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "sub_literals" (formula "20") (term "1,1,0,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "18") (term "0"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "add_zero_right" (formula "18") (term "1,1,0"))
         (rule "sub_literals" (formula "18") (term "1,1,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "less_literals" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "add_literals" (formula "19") (term "1,0"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSubEQ" (formula "18") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "18") (term "2,0"))
         (rule "add_literals" (formula "18") (term "1,1,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "18") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "sub_literals" (formula "19") (term "1,0,0"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "sub_literals" (formula "20") (term "1,1,0,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "19") (term "0"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "sub_literals" (formula "19") (term "1,1,0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_literals" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "eqSeqConcat" (formula "21"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "add_literals" (formula "21") (term "1,0,0"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "lenOfSeqSub" (formula "23") (term "2,0"))
         (rule "less_literals" (formula "23") (term "0,2,0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "sub_literals" (formula "23") (term "2,0"))
         (rule "lenOfSeqSub" (formula "21") (term "0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "eqSeqSingleton" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "eqSeqSingleton" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "lenOfSeqSub" (formula "21") (term "0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "lenOfSeqSub" (formula "22") (term "0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "sub_literals" (formula "20") (term "1,1,0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSubEQ" (formula "19") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "19") (term "2,0"))
         (rule "add_literals" (formula "19") (term "1,1,0"))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
         (rule "mul_literals" (formula "19") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "19") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "sub_literals" (formula "21") (term "1,1,0,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "add_zero_left" (formula "21") (term "1,0"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "sub_literals" (formula "22") (term "1,1,0,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "sub_literals" (formula "21") (term "1,1,0,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "sub_literals" (formula "22") (term "1,1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "add_literals" (formula "20") (term "1,1,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "1,0,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "20") (term "0"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "sub_literals" (formula "20") (term "1,0,0"))
         (rule "add_zero_right" (formula "20") (term "1,1,0"))
         (rule "less_literals" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "1,0,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "sub_literals" (formula "21") (term "1,1,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "sub_literals" (formula "22") (term "1,1,0,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSubEQ" (formula "20") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "20") (term "2,0"))
         (rule "add_zero_right" (formula "20") (term "1,1,0"))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
         (rule "mul_literals" (formula "20") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "20") (term "1,0,0"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "sub_literals" (formula "22") (term "1,1,0,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "sub_literals" (formula "21") (term "1,1,0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "sub_literals" (formula "22") (term "1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSub" (formula "21") (term "0"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "1,0,0"))
         (rule "less_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "getOfSeqSub" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "sub_literals" (formula "22") (term "1,1,0,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "less_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "getOfSeqSubEQ" (formula "21") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "21") (term "2,0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "leq_literals" (formula "21") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "21") (term "1,0,0"))
         (rule "getOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "2"))
         (rule "castDel" (formula "22") (term "2,0"))
         (rule "leq_literals" (formula "22") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "add_literals" (formula "22") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
         (rule "mul_literals" (formula "22") (term "1,1,0,0"))
         (rule "add_zero_right" (formula "22") (term "1,0,0"))
         (rule "hideAuxiliaryEqConcrete" (formula "11"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "50"))
         (rule "true_left" (formula "50"))
         (rule "methodCallEmpty" (formula "75") (term "1"))
         (rule "lenNonNegative" (formula "35") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "35"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "25"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0,1") (ifseqformula "26"))
         (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "69"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "26"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "27"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "28"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "29"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "30"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "31"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "32"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "33"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "34"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "35"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "36"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "37"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "38"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "1") (ifseqformula "39"))
         (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "42"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "39"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "40"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "41"))
         (rule "applyEqRigid" (formula "45") (term "1,0,1") (ifseqformula "46"))
         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "44"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "true_left" (formula "45"))
         (rule "charLiteral_to_int" (formula "28") (term "1"))
         (rule "ifEqualsInteger" (formula "28"))
         (rule "lenNonNegative" (formula "38") (term "2,0"))
         (rule "inEqSimp_commuteLeq" (formula "38"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
         (rule "andLeft" (formula "39"))
         (rule "lenOfSeqSub" (formula "39") (term "0"))
         (rule "polySimp_elimSub" (formula "39") (term "1,0"))
         (rule "mul_literals" (formula "39") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,0"))
         (rule "lenOfSeqSub" (formula "40") (term "1,1,0,0"))
         (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "40") (term "1,1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0,0"))
         (rule "lenOfSeqSubEQ" (formula "39") (term "1") (ifseqformula "41"))
         (rule "eqSymm" (formula "39"))
         (rule "polySimp_elimSub" (formula "39") (term "1,0"))
         (rule "mul_literals" (formula "39") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,0"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "true_left" (formula "39"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
         (rule "getOfSeqSub" (formula "39") (term "0,1,0"))
         (rule "castDel" (formula "39") (term "2,0,1,0"))
         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0"))
         (rule "getOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "40"))
         (rule "castDel" (formula "39") (term "2,1,1,0"))
         (rule "eqSymm" (formula "39") (term "1,0"))
         (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "39") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "true_left" (formula "39"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "18") (inst "iv=iv"))
         (rule "andLeft" (formula "18"))
         (rule "lenOfSeqSub" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0"))
         (rule "add_zero_right" (formula "19") (term "1,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "18") (term "0"))
         (rule "polySimp_elimSub" (formula "18") (term "1,0"))
         (rule "times_zero_2" (formula "18") (term "1,1,0"))
         (rule "add_zero_right" (formula "18") (term "1,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "eqSymm" (formula "18") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "applyEqRigid" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "charLiteral_to_int" (formula "21") (term "1"))
         (rule "lenNonNegative" (formula "17") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "18"))
         (rule "charLiteral_to_int" (formula "31") (term "1"))
         (rule "ifEqualsInteger" (formula "31"))
         (rule "charLiteral_to_int" (formula "23") (term "1"))
         (rule "seqGetAlphaCast" (formula "22") (term "0"))
         (rule "castDel" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "charLiteral_to_int" (formula "32") (term "1"))
         (rule "ifEqualsInteger" (formula "32"))
         (rule "charLiteral_to_int" (formula "24") (term "1"))
         (rule "seqGetAlphaCast" (formula "23") (term "0"))
         (rule "castDel" (formula "23") (term "0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "seqGetAlphaCast" (formula "24") (term "0"))
         (rule "castDel" (formula "24") (term "0"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "charLiteral_to_int" (formula "33") (term "1"))
         (rule "ifEqualsInteger" (formula "33"))
         (rule "charLiteral_to_int" (formula "25") (term "1"))
         (rule "charLiteral_to_int" (formula "26") (term "1"))
         (rule "charLiteral_to_int" (formula "27") (term "1"))
         (rule "charLiteral_to_int" (formula "34") (term "1"))
         (rule "ifEqualsInteger" (formula "34"))
         (rule "seqGetAlphaCast" (formula "25") (term "0"))
         (rule "castDel" (formula "25") (term "0"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "charLiteral_to_int" (formula "35") (term "1"))
         (rule "ifEqualsInteger" (formula "35"))
         (rule "seqGetAlphaCast" (formula "26") (term "0"))
         (rule "castDel" (formula "26") (term "0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "seqGetAlphaCast" (formula "27") (term "0"))
         (rule "castDel" (formula "27") (term "0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "charLiteral_to_int" (formula "36") (term "1"))
         (rule "ifEqualsInteger" (formula "36"))
         (rule "charLiteral_to_int" (formula "37") (term "1"))
         (rule "ifEqualsInteger" (formula "37"))
         (rule "commute_and" (formula "30") (term "0"))
         (rule "commute_and" (formula "30") (term "1"))
         (rule "charLiteral_to_int" (formula "38") (term "1"))
         (rule "ifEqualsInteger" (formula "38"))
         (rule "charLiteral_to_int" (formula "39") (term "1"))
         (rule "ifEqualsInteger" (formula "39"))
         (rule "tryEmpty" (formula "97") (term "1"))
         (rule "commute_and" (formula "31") (term "1"))
         (rule "commute_and" (formula "31") (term "0"))
         (rule "commute_and" (formula "32") (term "1"))
         (rule "commute_and" (formula "32") (term "0"))
         (rule "commute_and" (formula "33") (term "1"))
         (rule "commute_and" (formula "33") (term "0"))
         (rule "commute_and" (formula "34") (term "0"))
         (rule "commute_and" (formula "34") (term "1"))
         (rule "commute_and" (formula "35") (term "1"))
         (rule "commute_and" (formula "35") (term "0"))
         (rule "commute_and" (formula "36") (term "0"))
         (rule "commute_and" (formula "36") (term "1"))
         (rule "commute_and" (formula "37") (term "0"))
         (rule "commute_and" (formula "37") (term "1"))
         (rule "commute_and" (formula "38") (term "0"))
         (rule "commute_and" (formula "38") (term "1"))
         (rule "commute_and" (formula "39") (term "0"))
         (rule "commute_and" (formula "39") (term "1"))
         (rule "cnf_rightDist" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "commute_or" (formula "30"))
         (rule "cnf_rightDist" (formula "32"))
         (rule "andLeft" (formula "32"))
         (rule "commute_or" (formula "32"))
         (rule "cnf_rightDist" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "commute_or" (formula "34"))
         (rule "cnf_rightDist" (formula "31"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "commute_or" (formula "31"))
         (rule "cnf_rightDist" (formula "36"))
         (rule "andLeft" (formula "36"))
         (rule "commute_or" (formula "36"))
         (rule "cnf_rightDist" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "commute_or" (formula "31"))
         (rule "cnf_rightDist" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "commute_or" (formula "39"))
         (rule "cnf_rightDist" (formula "34"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "commute_or" (formula "34"))
         (rule "cnf_rightDist" (formula "33"))
         (rule "andLeft" (formula "33"))
         (rule "commute_or" (formula "34"))
         (rule "cnf_rightDist" (formula "42"))
         (rule "andLeft" (formula "42"))
         (rule "commute_or" (formula "42"))
         (rule "cnf_rightDist" (formula "37"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "commute_or" (formula "37"))
         (rule "cnf_rightDist" (formula "36"))
         (rule "andLeft" (formula "36"))
         (rule "commute_or" (formula "37"))
         (rule "cnf_rightDist" (formula "45"))
         (rule "andLeft" (formula "45"))
         (rule "commute_or" (formula "45"))
         (rule "cnf_rightDist" (formula "47"))
         (rule "andLeft" (formula "47"))
         (rule "commute_or" (formula "47"))
         (rule "cnf_rightDist" (formula "49"))
         (rule "andLeft" (formula "49"))
         (rule "commute_or" (formula "49"))
         (rule "cnf_rightDist" (formula "40"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "commute_or" (formula "40"))
         (rule "cnf_rightDist" (formula "39"))
         (rule "andLeft" (formula "39"))
         (rule "commute_or" (formula "40"))
         (rule "cnf_rightDist" (formula "52"))
         (rule "andLeft" (formula "52"))
         (rule "commute_or" (formula "52"))
         (rule "cnf_rightDist" (formula "43"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "commute_or" (formula "43"))
         (rule "cnf_rightDist" (formula "42"))
         (rule "andLeft" (formula "42"))
         (rule "commute_or" (formula "43"))
         (rule "cnf_rightDist" (formula "46"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "commute_or" (formula "46"))
         (rule "cnf_rightDist" (formula "45"))
         (rule "andLeft" (formula "45"))
         (rule "commute_or" (formula "46"))
         (rule "cnf_rightDist" (formula "49"))
          (builtin "One Step Simplification" (formula "49"))
         (rule "commute_or" (formula "49"))
         (rule "cnf_rightDist" (formula "48"))
         (rule "andLeft" (formula "48"))
         (rule "commute_or" (formula "49"))
         (rule "cnf_rightDist" (formula "52"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "commute_or" (formula "52"))
         (rule "cnf_rightDist" (formula "51"))
         (rule "andLeft" (formula "51"))
         (rule "commute_or" (formula "52"))
         (rule "cnf_rightDist" (formula "55"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "commute_or" (formula "55"))
         (rule "cnf_rightDist" (formula "54"))
         (rule "andLeft" (formula "54"))
         (rule "commute_or" (formula "55"))
         (rule "cnf_rightDist" (formula "58"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "commute_or" (formula "58"))
         (rule "cnf_rightDist" (formula "57"))
         (rule "andLeft" (formula "57"))
         (rule "commute_or" (formula "58"))
         (rule "emptyModality" (formula "117") (term "1"))
          (builtin "One Step Simplification" (formula "117"))
         (rule "notRight" (formula "117"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "3"))
         (rule "eqSymm" (formula "2"))
         (rule "substringSubstring2" (formula "64") (term "0") (inst "newSym=newSym_0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "64") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "63")))
         (rule "qeq_literals" (formula "64") (term "0,0,0,0"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "add_zero_right" (formula "64") (term "1,0,1,1"))
         (rule "add_zero_left" (formula "64") (term "2,0,1,1"))
         (rule "polySimp_elimSub" (formula "64") (term "1,1,0"))
         (rule "mul_literals" (formula "64") (term "1,1,1,0"))
         (rule "add_zero_right" (formula "64") (term "1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
         (rule "applyEqRigid" (formula "64") (term "0,0,0,0") (ifseqformula "21"))
         (rule "commute_and" (formula "64") (term "0,0"))
         (rule "commute_and_2" (formula "64") (term "0"))
         (rule "seqGetAlphaCast" (formula "35") (term "0,0"))
         (rule "castDel" (formula "35") (term "0"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "seqGetAlphaCast" (formula "38") (term "0,0"))
         (rule "castDel" (formula "38") (term "0"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "true_left" (formula "38"))
         (rule "seqGetAlphaCast" (formula "41") (term "0,0"))
         (rule "castDel" (formula "41") (term "0"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "seqGetAlphaCast" (formula "44") (term "0,0"))
         (rule "castDel" (formula "44") (term "0"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "true_left" (formula "44"))
         (rule "seqGetAlphaCast" (formula "47") (term "0,0"))
         (rule "castDel" (formula "47") (term "0"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "true_left" (formula "47"))
         (rule "seqGetAlphaCast" (formula "50") (term "0,0"))
         (rule "castDel" (formula "50") (term "0"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "true_left" (formula "50"))
         (rule "seqGetAlphaCast" (formula "53") (term "0,0"))
         (rule "castDel" (formula "53") (term "0"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "true_left" (formula "53"))
         (rule "seqGetAlphaCast" (formula "56") (term "0,0"))
         (rule "castDel" (formula "56") (term "0"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "true_left" (formula "56"))
         (rule "seqGetAlphaCast" (formula "59") (term "0,0"))
         (rule "castDel" (formula "59") (term "0"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "true_left" (formula "59"))
         (rule "seqGetAlphaCast" (formula "62") (term "0,0"))
         (rule "castDel" (formula "62") (term "0"))
          (builtin "One Step Simplification" (formula "62"))
         (rule "true_left" (formula "62"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "95") (ifseqformula "91"))
         (rule "true_left" (formula "95"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_0" (formula "95") (ifseqformula "91"))
         (rule "true_left" (formula "95"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_0" (formula "95") (ifseqformula "95"))
         (rule "true_left" (formula "95"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "95") (ifseqformula "95"))
         (rule "true_left" (formula "95"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_0" (formula "91") (ifseqformula "95"))
         (rule "true_left" (formula "91"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_0" (formula "91") (ifseqformula "91"))
         (rule "true_left" (formula "91"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "91") (ifseqformula "91"))
         (rule "true_left" (formula "91"))
         (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "91") (ifseqformula "95"))
         (rule "true_left" (formula "91"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "andLeft" (formula "86"))
         (rule "notLeft" (formula "87"))
         (rule "eqSymm" (formula "90") (term "1,0,0,1"))
         (rule "eqSymm" (formula "90") (term "0,0,0,1"))
         (rule "assignment" (formula "90") (term "1"))
          (builtin "One Step Simplification" (formula "90"))
         (rule "boxToDiamond" (formula "90") (term "1"))
          (builtin "One Step Simplification" (formula "90"))
         (rule "notLeft" (formula "90"))
         (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "89") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "insert_constant_string_value" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "90"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "insert_constant_string_value" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "90"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "insert_constant_string_value" (formula "89") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "90"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "castDel" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "castDel" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "castDel" (formula "89") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "90"))
         (rule "andLeft" (formula "89"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "andLeft" (formula "89"))
         (rule "notLeft" (formula "91"))
         (rule "notLeft" (formula "90"))
         (rule "notLeft" (formula "89"))
         (rule "exLeft" (formula "94") (inst "sk=i_1"))
         (rule "andLeft" (formula "94"))
         (rule "andLeft" (formula "94"))
         (rule "exLeft" (formula "91") (inst "sk=i_2_1"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "castedGetAny" (formula "95") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "94") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "90") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "98") (term "0"))
         (rule "castedGetAny" (formula "93") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "90") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "96"))
         (rule "inEqSimp_commuteLeq" (formula "91"))
         (rule "applyEqRigid" (formula "111") (term "0") (ifseqformula "89"))
         (rule "methodBodyExpand" (formula "126") (term "1") (newnames "heapBefore_printStatus_0,savedHeapBefore_printStatus_0"))
          (builtin "One Step Simplification" (formula "126"))
         (rule "commute_and" (formula "95") (term "0,0"))
         (rule "commute_and" (formula "94") (term "0,0"))
         (rule "commute_and" (formula "90") (term "0,0"))
         (rule "ifUnfold" (formula "126") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_4"))
         (rule "compound_equality_comparison_1" (formula "126") (term "1") (inst "#v0=x_5"))
         (rule "variableDeclarationAssign" (formula "126") (term "1"))
         (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_5"))
         (rule "compound_modulo_1" (formula "126") (term "1") (inst "#v=x_6"))
         (rule "variableDeclarationAssign" (formula "126") (term "1"))
         (rule "variableDeclaration" (formula "126") (term "1") (newnames "x_6"))
         (rule "methodCallWithAssignmentUnfoldTarget" (formula "126") (term "1") (inst "#v0=c"))
         (rule "variableDeclaration" (formula "126") (term "1") (newnames "c_3"))
         (rule "assignment_read_attribute_this" (formula "126") (term "1"))
          (builtin "One Step Simplification" (formula "126"))
          (builtin "Use Operation Contract" (formula "126") (newnames "heapBefore_getCurrentLineNumber_1,result_101,exc_132") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
         (branch "Post (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "109"))
             (builtin "One Step Simplification" (formula "129"))
             (builtin "One Step Simplification" (formula "108"))
             (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "86")))
            (rule "expand_inLong" (formula "108") (term "1,0"))
            (rule "replace_long_MAX" (formula "108") (term "1,0,1,0"))
            (rule "replace_long_MIN" (formula "108") (term "0,1,1,0"))
            (rule "andLeft" (formula "108"))
            (rule "andLeft" (formula "109"))
            (rule "andLeft" (formula "108"))
            (rule "andLeft" (formula "108"))
            (rule "inEqSimp_commuteLeq" (formula "109"))
            (rule "assignment" (formula "131") (term "1"))
             (builtin "One Step Simplification" (formula "131"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "112"))
            (rule "true_left" (formula "112"))
            (rule "assignmentModulo" (formula "130") (term "1"))
             (builtin "One Step Simplification" (formula "130"))
            (rule "equal_literals" (formula "130") (term "0,0"))
             (builtin "One Step Simplification" (formula "130"))
            (rule "translateJavaMod" (formula "130") (term "0,1,0"))
            (rule "equality_comparison_simple" (formula "130") (term "1"))
             (builtin "One Step Simplification" (formula "130"))
            (rule "lenNonNegative" (formula "97") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "97"))
            (rule "lenNonNegative" (formula "92") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "92"))
            (rule "ifSplit" (formula "132"))
            (branch "if x_4 true"
                (builtin "One Step Simplification" (formula "133"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "activeUseStaticFieldWriteAccess" (formula "133") (term "1") (inst "#v0=s"))
               (rule "variableDeclarationAssign" (formula "133") (term "1"))
               (rule "variableDeclaration" (formula "133") (term "1") (newnames "s_4"))
               (rule "compound_addition_2" (formula "133") (term "1") (inst "#v1=s_6") (inst "#v0=s_5"))
               (rule "variableDeclarationAssign" (formula "133") (term "1"))
               (rule "variableDeclaration" (formula "133") (term "1") (newnames "s_5"))
               (rule "compound_addition_2" (formula "133") (term "1") (inst "#v1=x") (inst "#v0=s_7"))
               (rule "variableDeclarationAssign" (formula "133") (term "1"))
               (rule "variableDeclaration" (formula "133") (term "1") (newnames "s_7"))
               (rule "stringAssignment" (formula "133") (term "1"))
                (builtin "One Step Simplification" (formula "135"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "138")))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationAssign" (formula "134") (term "1"))
               (rule "variableDeclaration" (formula "134") (term "1") (newnames "x_7"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "134") (term "1") (inst "#v0=c"))
               (rule "variableDeclaration" (formula "134") (term "1") (newnames "c_4"))
               (rule "assignment_read_attribute_this" (formula "134") (term "1"))
                (builtin "One Step Simplification" (formula "134"))
                (builtin "Use Operation Contract" (formula "134") (newnames "heapBefore_getCurrentLineNumber_2,result_102,exc_133") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
               (branch "Post (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "88")))
                   (builtin "One Step Simplification" (formula "137"))
                   (builtin "One Step Simplification" (formula "117"))
                   (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "118")))
                  (rule "expand_inLong" (formula "116") (term "1,0"))
                  (rule "replace_long_MIN" (formula "116") (term "0,1,1,0"))
                  (rule "replace_long_MAX" (formula "116") (term "1,0,1,0"))
                  (rule "andLeft" (formula "116"))
                  (rule "andLeft" (formula "116"))
                  (rule "andLeft" (formula "116"))
                  (rule "inEqSimp_commuteLeq" (formula "117"))
                  (rule "assignment" (formula "139") (term "1"))
                   (builtin "One Step Simplification" (formula "139"))
                  (rule "stringConcatIntExpRight" (formula "139") (term "1") (inst "sk=sk_2"))
                   (builtin "One Step Simplification" (formula "141"))
                   (builtin "One Step Simplification" (formula "140"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
                  (rule "variableDeclarationAssign" (formula "141") (term "1"))
                  (rule "variableDeclaration" (formula "141") (term "1") (newnames "s_6"))
                  (rule "stringAssignment" (formula "141") (term "1"))
                   (builtin "One Step Simplification" (formula "143"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "1"))
                  (rule "stringConcat" (formula "142") (term "1") (inst "sk=sk_3"))
                   (builtin "One Step Simplification" (formula "144"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "143"))
                  (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
                  (rule "assignment_write_static_attribute" (formula "144") (term "1"))
                   (builtin "One Step Simplification" (formula "144"))
                  (rule "eqSeqConcat" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
                  (rule "add_literals" (formula "4") (term "0,2,0"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,0,1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "add_literals" (formula "4") (term "1,2,0"))
                  (rule "add_literals" (formula "4") (term "2,0"))
                  (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                  (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "145")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "eqSeqConcat" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "add_literals" (formula "1") (term "1,0,1"))
                  (rule "add_literals" (formula "1") (term "0,1"))
                  (rule "applyEqRigid" (formula "3") (term "2,0") (ifseqformula "1"))
                  (rule "eqSeqConcat" (formula "7"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "9") (term "2,0"))
                  (rule "sub_literals" (formula "9") (term "1,2,0"))
                  (rule "less_literals" (formula "9") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "0"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,1"))
                  (rule "add_literals" (formula "7") (term "1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "sub_literals" (formula "7") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_zero_left" (formula "7") (term "1,1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_zero_right" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSubEQ" (formula "7") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_zero_left" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "1,0,0"))
                  (rule "eqSeqConcat" (formula "3"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "lenOfSeqSub" (formula "5") (term "2,0"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,2,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,2,0"))
                  (rule "add_literals" (formula "5") (term "1,1,1,2,0"))
                  (rule "times_zero_1" (formula "5") (term "1,1,2,0"))
                  (rule "add_literals" (formula "5") (term "1,2,0"))
                  (rule "eqSeqSingleton" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "lenOfSeqSub" (formula "3") (term "0"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "1,1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,1,0"))
                  (rule "add_zero_right" (formula "3") (term "1,0"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "4") (term "0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "sub_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "add_literals" (formula "3") (term "1,1"))
                  (rule "add_literals" (formula "3") (term "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "equal_literals" (formula "3") (term "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "5") (term "0,2,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "sub_literals" (formula "4") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "4") (term "1,1,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSeqConcat" (formula "10"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,2,0"))
                  (rule "less_literals" (formula "12") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSeqSingleton" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "11") (term "0"))
                  (rule "less_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "lenOfSeqSub" (formula "10") (term "0"))
                  (rule "sub_literals" (formula "10") (term "1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1"))
                  (rule "add_literals" (formula "10") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_literals" (formula "10") (term "1,1"))
                  (rule "add_literals" (formula "10") (term "1"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "getOfSeqSub" (formula "4") (term "0"))
                  (rule "castDel" (formula "4") (term "2,0"))
                  (rule "add_zero_left" (formula "4") (term "1,1,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
                  (rule "add_literals" (formula "4") (term "1,0,0"))
                  (rule "less_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSub" (formula "10") (term "0"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "add_zero_right" (formula "10") (term "1,1,0"))
                  (rule "sub_literals" (formula "10") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "less_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "getOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "10") (term "2,0"))
                  (rule "leq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "add_zero_right" (formula "10") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "1,0,0"))
                  (rule "eqSeqConcat" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "lenOfSeqSub" (formula "7") (term "2,0"))
                  (rule "sub_literals" (formula "7") (term "1,2,0"))
                  (rule "less_literals" (formula "7") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "lenOfSeqSub" (formula "5") (term "0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "0"))
                  (rule "lenOfSeqSub" (formula "6") (term "0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "add_literals" (formula "5") (term "1,1"))
                  (rule "add_literals" (formula "5") (term "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "eqSeqConcat" (formula "12"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqSub" (formula "14") (term "2,0"))
                  (rule "less_literals" (formula "14") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "12") (term "0"))
                  (rule "sub_literals" (formula "12") (term "1,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSeqSingleton" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1"))
                  (rule "add_literals" (formula "12") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "13") (term "0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1"))
                  (rule "add_literals" (formula "12") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1"))
                  (rule "add_literals" (formula "12") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1"))
                  (rule "add_literals" (formula "12") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "12") (term "1"))
                  (rule "add_literals" (formula "12") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "1,1"))
                  (rule "add_literals" (formula "12") (term "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "1,0,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "sub_literals" (formula "12") (term "1,1,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "sub_literals" (formula "5") (term "1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "1,1,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "getOfSeqSub" (formula "12") (term "0"))
                  (rule "castDel" (formula "12") (term "2,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "1,0,0"))
                  (rule "less_literals" (formula "12") (term "0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "getOfSeqSub" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "2,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,1,0,0"))
                  (rule "add_literals" (formula "5") (term "1,0,0"))
                  (rule "less_literals" (formula "5") (term "0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "eqSeqConcat" (formula "6"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "lenOfSeqSub" (formula "8") (term "2,0"))
                  (rule "less_literals" (formula "8") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "6") (term "0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "0"))
                  (rule "eqSeqSingleton" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_addAssoc" (formula "6") (term "1"))
                  (rule "add_literals" (formula "6") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_literals" (formula "6") (term "1,1"))
                  (rule "add_literals" (formula "6") (term "1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0"))
                  (rule "sub_literals" (formula "6") (term "1,0,0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "eqSeqConcat" (formula "14"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "lenOfSeqSub" (formula "16") (term "2,0"))
                  (rule "sub_literals" (formula "16") (term "1,2,0"))
                  (rule "less_literals" (formula "16") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "lenOfSeqSub" (formula "14") (term "0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "sub_literals" (formula "14") (term "0"))
                  (rule "eqSeqSingleton" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "15") (term "0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                  (rule "add_literals" (formula "14") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_literals" (formula "14") (term "1,1"))
                  (rule "add_literals" (formula "14") (term "1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "getOfSeqSub" (formula "13") (term "0"))
                  (rule "castDel" (formula "13") (term "2,0"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "sub_literals" (formula "13") (term "1,0,0"))
                  (rule "less_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "sub_literals" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "getOfSeqSub" (formula "14") (term "0"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_zero_right" (formula "14") (term "1,1,0"))
                  (rule "sub_literals" (formula "14") (term "1,0,0"))
                  (rule "less_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "sub_literals" (formula "6") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "add_literals" (formula "6") (term "1,0"))
                  (rule "eqSeqConcat" (formula "7"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "lenOfSeqSub" (formula "9") (term "2,0"))
                  (rule "less_literals" (formula "9") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,0"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "sub_literals" (formula "7") (term "1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "eqSeqSingleton" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,1"))
                  (rule "add_literals" (formula "7") (term "1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "lenOfSeqSub" (formula "7") (term "0"))
                  (rule "sub_literals" (formula "7") (term "1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "less_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "getOfSeqSubEQ" (formula "14") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "14") (term "2,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                  (rule "times_zero_2" (formula "14") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "6") (term "0"))
                  (rule "castDel" (formula "6") (term "2,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,0,0"))
                  (rule "less_literals" (formula "6") (term "0,0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "eqSeqConcat" (formula "16"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "lenOfSeqSub" (formula "18") (term "2,0"))
                  (rule "less_literals" (formula "18") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1"))
                  (rule "add_literals" (formula "16") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "lenOfSeqSub" (formula "16") (term "0"))
                  (rule "sub_literals" (formula "16") (term "1,0"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "lenOfSeqSub" (formula "17") (term "0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1"))
                  (rule "add_literals" (formula "16") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1"))
                  (rule "add_literals" (formula "16") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "add_literals" (formula "16") (term "1,1"))
                  (rule "add_literals" (formula "16") (term "1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "sub_literals" (formula "15") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "sub_literals" (formula "7") (term "1,1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "sub_literals" (formula "16") (term "1,1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "getOfSeqSub" (formula "15") (term "0"))
                  (rule "castDel" (formula "15") (term "2,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "leq_literals" (formula "15") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "sub_literals" (formula "15") (term "1,0,0"))
                  (rule "less_literals" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSeqConcat" (formula "8"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,0,0"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "lenOfSeqSub" (formula "10") (term "2,0"))
                  (rule "less_literals" (formula "10") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,0"))
                  (rule "eqSeqSingleton" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "eqSeqSingleton" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "lenOfSeqSub" (formula "8") (term "0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenOfSeqSub" (formula "9") (term "0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "16") (term "0"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "sub_literals" (formula "16") (term "1,1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "less_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_zero_left" (formula "9") (term "1,1,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "eqSeqConcat" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "lenOfSeqSub" (formula "20") (term "2,0"))
                  (rule "less_literals" (formula "20") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "2,0"))
                  (rule "eqSeqSingleton" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "0,1"))
                  (rule "lenOfSeqSub" (formula "19") (term "0"))
                  (rule "sub_literals" (formula "19") (term "1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "less_literals" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "lenOfSeqSub" (formula "18") (term "0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "0"))
                  (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "0,1"))
                  (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "add_literals" (formula "18") (term "1,1"))
                  (rule "add_literals" (formula "18") (term "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "sub_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "sub_literals" (formula "18") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "add_zero_left" (formula "18") (term "1,1,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "7") (term "0"))
                  (rule "castDel" (formula "7") (term "2,0"))
                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,0,0"))
                  (rule "less_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSubEQ" (formula "16") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "16") (term "2,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0"))
                  (rule "leq_literals" (formula "16") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "sub_literals" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_zero_left" (formula "18") (term "1,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "sub_literals" (formula "17") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSeqConcat" (formula "19"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "lenOfSeqSub" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,2,0"))
                  (rule "less_literals" (formula "21") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1"))
                  (rule "add_literals" (formula "19") (term "0,1"))
                  (rule "eqSeqSingleton" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "lenOfSeqSub" (formula "19") (term "0"))
                  (rule "sub_literals" (formula "19") (term "1,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "lenOfSeqSub" (formula "20") (term "0"))
                  (rule "sub_literals" (formula "20") (term "1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,1"))
                  (rule "add_literals" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "sub_literals" (formula "18") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "17") (term "0"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "add_zero_right" (formula "17") (term "1,1,0"))
                  (rule "sub_literals" (formula "17") (term "1,0,0"))
                  (rule "less_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "sub_literals" (formula "8") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "sub_literals" (formula "9") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "2,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "1,0,0"))
                  (rule "less_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "getOfSeqSub" (formula "9") (term "0"))
                  (rule "castDel" (formula "9") (term "2,0"))
                  (rule "leq_literals" (formula "9") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
                  (rule "add_literals" (formula "9") (term "1,0,0"))
                  (rule "less_literals" (formula "9") (term "0,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "sub_literals" (formula "18") (term "1,0,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSubEQ" (formula "17") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "17") (term "2,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                  (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "eqSeqConcat" (formula "20"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "lenOfSeqSub" (formula "22") (term "2,0"))
                  (rule "less_literals" (formula "22") (term "0,2,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "2,0"))
                  (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_literals" (formula "20") (term "1,1"))
                  (rule "add_literals" (formula "20") (term "1"))
                  (rule "eqSeqSingleton" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "lenOfSeqSub" (formula "20") (term "0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "lenOfSeqSub" (formula "20") (term "0"))
                  (rule "sub_literals" (formula "20") (term "1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "equal_literals" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "sub_literals" (formula "18") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "sub_literals" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "18") (term "0"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,0"))
                  (rule "sub_literals" (formula "18") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "less_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "sub_literals" (formula "19") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSubEQ" (formula "18") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "18") (term "2,0"))
                  (rule "add_literals" (formula "18") (term "1,1,0"))
                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "sub_literals" (formula "19") (term "1,0,0"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "19") (term "0"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0"))
                  (rule "sub_literals" (formula "19") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "less_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "eqSeqConcat" (formula "21"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,0,0"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "eqSeqSingleton" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "lenOfSeqSub" (formula "21") (term "0"))
                  (rule "sub_literals" (formula "21") (term "1,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "eqSeqSingleton" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "lenOfSeqSub" (formula "23") (term "2,0,0"))
                  (rule "sub_literals" (formula "23") (term "1,2,0,0"))
                  (rule "less_literals" (formula "23") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "lenOfSeqSub" (formula "24") (term "2,0,0"))
                  (rule "sub_literals" (formula "24") (term "1,2,0,0"))
                  (rule "less_literals" (formula "24") (term "0,2,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "lenOfSeqSub" (formula "21") (term "0"))
                  (rule "sub_literals" (formula "21") (term "1,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "lenOfSeqSub" (formula "22") (term "0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_zero_left" (formula "22") (term "1,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSubEQ" (formula "19") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "19") (term "2,0"))
                  (rule "add_zero_right" (formula "19") (term "1,1,0"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "19") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_zero_left" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "1,0,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "1,0,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "sub_literals" (formula "20") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "20") (term "0"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_zero_right" (formula "20") (term "1,1,0"))
                  (rule "sub_literals" (formula "20") (term "1,0,0"))
                  (rule "less_literals" (formula "20") (term "0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "1,0,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSubEQ" (formula "20") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "20") (term "2,0"))
                  (rule "leq_literals" (formula "20") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "add_zero_right" (formula "20") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "1,0,0"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "add_literals" (formula "21") (term "1,0"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "sub_literals" (formula "22") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "add_literals" (formula "22") (term "1,0"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "sub_literals" (formula "22") (term "1,1,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSub" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "sub_literals" (formula "21") (term "1,1,0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "getOfSeqSub" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "1,0,0"))
                  (rule "less_literals" (formula "22") (term "0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "22") (term "2,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "1,0,0"))
                  (rule "getOfSeqSubEQ" (formula "21") (term "0") (ifseqformula "2"))
                  (rule "castDel" (formula "21") (term "2,0"))
                  (rule "add_zero_right" (formula "21") (term "1,1,0"))
                  (rule "leq_literals" (formula "21") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "add_zero_right" (formula "21") (term "1,0,0"))
                  (rule "hideAuxiliaryEqConcrete" (formula "11"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "142"))
                  (rule "true_left" (formula "142"))
                  (rule "methodCallEmpty" (formula "162") (term "1"))
                  (rule "seqGetAlphaCast" (formula "124") (term "0"))
                  (rule "castedGetAny" (formula "124") (term "0"))
                   (builtin "One Step Simplification" (formula "124"))
                  (rule "true_left" (formula "124"))
                  (rule "seqGetAlphaCast" (formula "118") (term "0"))
                  (rule "castedGetAny" (formula "118") (term "0"))
                   (builtin "One Step Simplification" (formula "118"))
                  (rule "true_left" (formula "118"))
                  (rule "lenNonNegative" (formula "120") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "120"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "143") (term "0") (ifseqformula "110"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "144"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "1,0,1") (ifseqformula "111"))
                  (rule "replace_known_right" (formula "125") (term "0") (ifseqformula "156"))
                   (builtin "One Step Simplification" (formula "125"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "146") (term "0") (ifseqformula "111"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "147"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "155") (term "0") (ifseqformula "112"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "156"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "157") (term "0") (ifseqformula "113"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "158"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "152") (term "0") (ifseqformula "114"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "153"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "154") (term "0") (ifseqformula "115"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "155"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "1") (ifseqformula "116"))
                  (rule "replace_known_right" (formula "132") (term "0") (ifseqformula "158"))
                   (builtin "One Step Simplification" (formula "132"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "153") (term "0") (ifseqformula "116"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "154"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "117"))
                  (rule "applyEqRigid" (formula "120") (term "0,0") (ifseqformula "121"))
                  (rule "replace_known_right" (formula "120") (term "0") (ifseqformula "156"))
                   (builtin "One Step Simplification" (formula "120"))
                  (rule "applyEqRigid" (formula "120") (term "1,0") (ifseqformula "121"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "159") (term "0") (ifseqformula "117"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "160"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "162") (term "0") (ifseqformula "118"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "163"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "168") (term "0") (ifseqformula "119"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "169"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "0") (ifseqformula "120"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "171"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "173") (term "0") (ifseqformula "121"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "174"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "173") (term "0") (ifseqformula "122"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "174"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "176") (term "0") (ifseqformula "123"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "177"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "172") (term "0") (ifseqformula "124"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "173"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "129") (term "1") (ifseqformula "125"))
                  (rule "replace_known_right" (formula "129") (term "0") (ifseqformula "165"))
                   (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "128")))
                  (rule "true_left" (formula "129"))
                  (rule "charLiteral_to_int" (formula "27") (term "1"))
                  (rule "ifEqualsInteger" (formula "27"))
                  (rule "lenNonNegative" (formula "37") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "37"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                  (rule "andLeft" (formula "38"))
                  (rule "lenOfSeqSub" (formula "38") (term "0"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "39") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "39") (term "1,1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "40"))
                  (rule "eqSymm" (formula "38"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                  (rule "getOfSeqSub" (formula "38") (term "0,1,0"))
                  (rule "castDel" (formula "38") (term "2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                  (rule "getOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "39"))
                  (rule "castDel" (formula "38") (term "2,1,1,0"))
                  (rule "eqSymm" (formula "38") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
                  (rule "andLeft" (formula "17"))
                  (rule "lenOfSeqSub" (formula "17") (term "0"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0"))
                  (rule "add_zero_right" (formula "17") (term "1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSymm" (formula "17") (term "1"))
                  (rule "lenOfSeqSub" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "18") (term "0,0,1,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "charLiteral_to_int" (formula "20") (term "1"))
                  (rule "lenNonNegative" (formula "16") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "17"))
                  (rule "charLiteral_to_int" (formula "30") (term "1"))
                  (rule "ifEqualsInteger" (formula "30"))
                  (rule "charLiteral_to_int" (formula "22") (term "1"))
                  (rule "seqGetAlphaCast" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "ifEqualsInteger" (formula "31"))
                  (rule "charLiteral_to_int" (formula "23") (term "1"))
                  (rule "seqGetAlphaCast" (formula "22") (term "0"))
                  (rule "castDel" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "seqGetAlphaCast" (formula "23") (term "0"))
                  (rule "castDel" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "charLiteral_to_int" (formula "24") (term "1"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "ifEqualsInteger" (formula "32"))
                  (rule "charLiteral_to_int" (formula "25") (term "1"))
                  (rule "charLiteral_to_int" (formula "26") (term "1"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "ifEqualsInteger" (formula "33"))
                  (rule "seqGetAlphaCast" (formula "24") (term "0"))
                  (rule "castDel" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "ifEqualsInteger" (formula "34"))
                  (rule "seqGetAlphaCast" (formula "25") (term "0"))
                  (rule "castDel" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "seqGetAlphaCast" (formula "26") (term "0"))
                  (rule "castDel" (formula "26") (term "0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "charLiteral_to_int" (formula "35") (term "1"))
                  (rule "ifEqualsInteger" (formula "35"))
                  (rule "charLiteral_to_int" (formula "36") (term "1"))
                  (rule "ifEqualsInteger" (formula "36"))
                  (rule "commute_and" (formula "29") (term "0"))
                  (rule "commute_and" (formula "29") (term "1"))
                  (rule "charLiteral_to_int" (formula "38") (term "1"))
                  (rule "ifEqualsInteger" (formula "38"))
                  (rule "charLiteral_to_int" (formula "37") (term "1"))
                  (rule "ifEqualsInteger" (formula "37"))
                  (rule "tryEmpty" (formula "184") (term "1"))
                  (rule "commute_and" (formula "30") (term "1"))
                  (rule "commute_and" (formula "30") (term "0"))
                  (rule "commute_and" (formula "31") (term "1"))
                  (rule "commute_and" (formula "31") (term "0"))
                  (rule "commute_and" (formula "32") (term "1"))
                  (rule "commute_and" (formula "32") (term "0"))
                  (rule "commute_and" (formula "33") (term "1"))
                  (rule "commute_and" (formula "33") (term "0"))
                  (rule "commute_and" (formula "34") (term "1"))
                  (rule "commute_and" (formula "34") (term "0"))
                  (rule "commute_and" (formula "35") (term "0"))
                  (rule "commute_and" (formula "35") (term "1"))
                  (rule "commute_and" (formula "36") (term "1"))
                  (rule "commute_and" (formula "36") (term "0"))
                  (rule "commute_and" (formula "38") (term "1"))
                  (rule "commute_and" (formula "38") (term "0"))
                  (rule "commute_and" (formula "37") (term "0"))
                  (rule "commute_and" (formula "37") (term "1"))
                  (rule "cnf_rightDist" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "commute_or" (formula "29"))
                  (rule "cnf_rightDist" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "commute_or" (formula "31"))
                  (rule "cnf_rightDist" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "commute_or" (formula "33"))
                  (rule "cnf_rightDist" (formula "30"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "commute_or" (formula "30"))
                  (rule "cnf_rightDist" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "commute_or" (formula "35"))
                  (rule "cnf_rightDist" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "commute_or" (formula "30"))
                  (rule "cnf_rightDist" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "commute_or" (formula "38"))
                  (rule "cnf_rightDist" (formula "33"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "commute_or" (formula "33"))
                  (rule "cnf_rightDist" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "commute_or" (formula "33"))
                  (rule "cnf_rightDist" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "commute_or" (formula "41"))
                  (rule "cnf_rightDist" (formula "36"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "commute_or" (formula "36"))
                  (rule "cnf_rightDist" (formula "43"))
                  (rule "andLeft" (formula "43"))
                  (rule "commute_or" (formula "43"))
                  (rule "cnf_rightDist" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "commute_or" (formula "36"))
                  (rule "cnf_rightDist" (formula "46"))
                  (rule "andLeft" (formula "46"))
                  (rule "commute_or" (formula "46"))
                  (rule "cnf_rightDist" (formula "49"))
                  (rule "andLeft" (formula "49"))
                  (rule "commute_or" (formula "49"))
                  (rule "cnf_rightDist" (formula "39"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "commute_or" (formula "39"))
                  (rule "cnf_rightDist" (formula "48"))
                  (rule "andLeft" (formula "48"))
                  (rule "commute_or" (formula "48"))
                  (rule "cnf_rightDist" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "commute_or" (formula "39"))
                  (rule "cnf_rightDist" (formula "42"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "commute_or" (formula "42"))
                  (rule "cnf_rightDist" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "commute_or" (formula "42"))
                  (rule "cnf_rightDist" (formula "45"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "commute_or" (formula "45"))
                  (rule "cnf_rightDist" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "commute_or" (formula "45"))
                  (rule "cnf_rightDist" (formula "48"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "commute_or" (formula "48"))
                  (rule "cnf_rightDist" (formula "47"))
                  (rule "andLeft" (formula "47"))
                  (rule "commute_or" (formula "48"))
                  (rule "cnf_rightDist" (formula "51"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "commute_or" (formula "51"))
                  (rule "cnf_rightDist" (formula "50"))
                  (rule "andLeft" (formula "50"))
                  (rule "commute_or" (formula "51"))
                  (rule "cnf_rightDist" (formula "56"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "commute_or" (formula "56"))
                  (rule "cnf_rightDist" (formula "55"))
                  (rule "andLeft" (formula "55"))
                  (rule "commute_or" (formula "56"))
                  (rule "cnf_rightDist" (formula "54"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "commute_or" (formula "54"))
                  (rule "cnf_rightDist" (formula "53"))
                  (rule "andLeft" (formula "53"))
                  (rule "commute_or" (formula "54"))
                  (rule "emptyModality" (formula "204") (term "1"))
                  (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_2" (formula "179") (ifseqformula "171"))
                  (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "180") (ifseqformula "171"))
                  (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_0" (formula "180") (ifseqformula "171"))
                  (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_1" (formula "180") (ifseqformula "171"))
                   (builtin "One Step Simplification" (formula "205"))
                  (rule "true_left" (formula "179"))
                  (rule "impRight" (formula "232"))
                  (rule "notRight" (formula "205"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "4"))
                  (rule "eqSymm" (formula "235"))
                  (rule "eqSymm" (formula "3"))
                  (rule "eqSymm" (formula "2"))
                  (rule "polySimp_homoEq" (formula "98"))
                  (rule "polySimp_homoEq" (formula "32"))
                  (rule "polySimp_addComm1" (formula "98") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                  (rule "dismissNonSelectedFieldEQ" (formula "235") (term "1") (ifseqformula "69"))
                  (rule "eqSymm" (formula "235"))
                  (rule "dismissNonSelectedFieldEQ" (formula "235") (term "1") (ifseqformula "3"))
                  (rule "eqSymm" (formula "235"))
                  (rule "dismissNonSelectedFieldEQ" (formula "235") (term "1,1") (ifseqformula "69"))
                  (rule "dismissNonSelectedFieldEQ" (formula "235") (term "1,0") (ifseqformula "3"))
                  (rule "inEqSimp_ltToLeq" (formula "164") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "164") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "55") (term "0,1"))
                  (rule "add_literals" (formula "55") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1"))
                  (rule "add_zero_right" (formula "34") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "157") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "157") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "88") (term "0"))
                  (rule "add_zero_right" (formula "88") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                  (rule "add_literals" (formula "44") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "61") (term "0,1"))
                  (rule "add_literals" (formula "61") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "112") (term "1"))
                  (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "112") (term "0,1"))
                  (rule "add_literals" (formula "112") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "113") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "113") (term "0,0,1"))
                  (rule "add_literals" (formula "113") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "124") (term "1"))
                  (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "124") (term "0,1"))
                  (rule "add_literals" (formula "124") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "106") (term "1"))
                  (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "106") (term "0,1"))
                  (rule "add_literals" (formula "106") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "59") (term "0,0,1"))
                  (rule "add_literals" (formula "59") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "162") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "116") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "116") (term "0,0,1"))
                  (rule "add_literals" (formula "116") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "100") (term "1"))
                  (rule "add_zero_right" (formula "100") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "100") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "109") (term "1"))
                  (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "109") (term "0,1"))
                  (rule "add_literals" (formula "109") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "128") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "125") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                  (rule "add_zero_right" (formula "35") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "168"))
                  (rule "polySimp_mulComm0" (formula "168") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "101") (term "0,1"))
                  (rule "add_zero_right" (formula "101") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "122") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "122") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "150"))
                  (rule "polySimp_mulComm0" (formula "150") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "90"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "1"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "139") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "139") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "1"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "142"))
                  (rule "polySimp_mulComm0" (formula "142") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "115") (term "1"))
                  (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "127") (term "1"))
                  (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "107") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "144") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "119") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "110") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "104") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "24"))
                  (rule "inEqSimp_ltToLeq" (formula "103") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "160"))
                  (rule "inEqSimp_ltToLeq" (formula "118") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "121") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "146") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1"))
                  (rule "polySimp_addComm1" (formula "128") (term "0,0,1"))
                  (rule "add_literals" (formula "128") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,1"))
                  (rule "add_literals" (formula "47") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                  (rule "add_literals" (formula "37") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "125") (term "0,0,1"))
                  (rule "add_literals" (formula "125") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "168") (term "0"))
                  (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "98") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "122") (term "0,0,1"))
                  (rule "add_literals" (formula "122") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "150") (term "0"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,1"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                  (rule "add_literals" (formula "53") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                  (rule "add_literals" (formula "49") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                  (rule "add_literals" (formula "43") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "142") (term "0"))
                  (rule "polySimp_rightDist" (formula "90") (term "1,0,0"))
                  (rule "mul_literals" (formula "90") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "115") (term "0,1"))
                  (rule "add_literals" (formula "115") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "127") (term "0,1"))
                  (rule "add_literals" (formula "127") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "107") (term "0,0,1"))
                  (rule "add_literals" (formula "107") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "119") (term "0,0,1"))
                  (rule "add_literals" (formula "119") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,0,1"))
                  (rule "add_literals" (formula "62") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "110") (term "0,0,1"))
                  (rule "add_literals" (formula "110") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "38") (term "0,0,1"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                  (rule "add_literals" (formula "46") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "104") (term "0,0,1"))
                  (rule "add_literals" (formula "104") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "103") (term "0,1"))
                  (rule "add_literals" (formula "103") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "160") (term "0"))
                  (rule "polySimp_addComm1" (formula "118") (term "0,1"))
                  (rule "add_literals" (formula "118") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "121") (term "0,1"))
                  (rule "add_literals" (formula "121") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "130") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "130") (term "0,1,0,0"))
                  (rule "add_literals" (formula "130") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "130") (term "0,1,0,0"))
                  (rule "qeq_literals" (formula "130") (term "1,0,0"))
                   (builtin "One Step Simplification" (formula "130"))
                  (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                  (rule "add_literals" (formula "58") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                  (rule "add_literals" (formula "40") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                  (rule "add_literals" (formula "52") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "98") (term "0,0,1,0"))
                  (rule "add_literals" (formula "98") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "90") (term "0,0"))
                  (rule "add_literals" (formula "90") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "90") (term "0"))
                  (rule "add_literals" (formula "90") (term "1,1,0"))
                  (rule "times_zero_1" (formula "90") (term "1,0"))
                  (rule "add_zero_right" (formula "90") (term "0"))
                  (rule "leq_literals" (formula "90"))
                  (rule "true_left" (formula "90"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "1,1,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0"))
                  (rule "add_zero_right" (formula "24") (term "0"))
                  (rule "leq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "inEqSimp_homoInEq1" (formula "128") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "128") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "128") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "128") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "128") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "128") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "128") (term "0,1,0"))
                  (rule "add_literals" (formula "128") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "128") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "128") (term "0,1,0"))
                  (rule "leq_literals" (formula "128") (term "1,0"))
                   (builtin "One Step Simplification" (formula "128"))
                  (rule "applyEq" (formula "128") (term "0,0,1") (ifseqformula "129"))
                  (rule "applyEq" (formula "148") (term "1,1,0,0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "147") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "206") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "228") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "159") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "177") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "220") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "160") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "221") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "164") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "66"))
                  (rule "applyEq" (formula "181") (term "1,2") (ifseqformula "1"))
                  (rule "applyEq" (formula "162") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "78") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "149") (term "1,1,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "160") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "177") (term "4") (ifseqformula "174"))
                  (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "144") (term "1,1,0,0,0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "222") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "151") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "194") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "227") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "66"))
                  (rule "applyEq" (formula "134") (term "0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "137") (term "1,1,0,0,0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "157") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "177") (term "1,2") (ifseqformula "66"))
                  (rule "applyEq" (formula "232") (term "0") (ifseqformula "66"))
                  (rule "applyEq" (formula "217") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "226") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "200") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "84") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "197") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "167") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "144") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "162") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "143") (term "1,1,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "158") (term "1,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "142") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "155") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "166") (term "1,1,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "161") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                  (rule "applyEq" (formula "173") (term "1,2") (ifseqformula "66"))
                  (rule "applyEq" (formula "155") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "159") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "139") (term "1,1,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "216") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "223") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "225") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "190") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "199") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "142") (term "1,1,0,0,0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "218") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "168") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "229") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "185") (term "4") (ifseqformula "184"))
                  (rule "applyEq" (formula "165") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "82") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "146") (term "1,1,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "137") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "77") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "224") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "185") (term "1,2") (ifseqformula "1"))
                  (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "181") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "173") (term "4") (ifseqformula "172"))
                  (rule "applyEq" (formula "192") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "219") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "152") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "173") (term "1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "185") (term "1,0") (ifseqformula "1"))
                  (rule "jmod_axiom" (formula "131") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "131") (term "1,0"))
                  (rule "jmod_axiom" (formula "65") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "85"))
                  (rule "mul_literals" (formula "85") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "54") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "87") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "87") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "87") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "43") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "60") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "110") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "110") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "110") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "111") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "111") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "111") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "122") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "122") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "122") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "104") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "104") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "104") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "58") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "114") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "114") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "114") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "98") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "98") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "98") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "107") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "107") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "107") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "96"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1"))
                  (rule "polySimp_rightDist" (formula "96") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "1,1"))
                  (rule "mul_literals" (formula "96") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "96") (term "1,1"))
                   (builtin "One Step Simplification" (formula "96"))
                  (rule "polySimp_homoEq" (formula "96") (term "1"))
                  (rule "times_zero_2" (formula "96") (term "1,0,1"))
                  (rule "add_zero_right" (formula "96") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                  (rule "mul_literals" (formula "31") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "polySimp_homoEq" (formula "31") (term "1"))
                  (rule "times_zero_2" (formula "31") (term "1,0,1"))
                  (rule "add_zero_right" (formula "31") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "99") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "99") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "99") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "126") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "126") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "126") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "123") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "123") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "123") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "49") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "120") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "120") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "120") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "55") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "52") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "48") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "113") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "113") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "113") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "125") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "125") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "125") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "105") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "105") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "105") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "117") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "117") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "117") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "61") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "108") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "108") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "108") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "45") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "102") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "102") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "102") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "101") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "101") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "101") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "116") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "116") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "116") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "119") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "119") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "119") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "39") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "51") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "131"))
                  (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "65"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "148"))
                  (rule "polySimp_mulLiterals" (formula "148") (term "0"))
                  (rule "polySimp_elimOne" (formula "148") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "140"))
                  (rule "polySimp_mulLiterals" (formula "140") (term "0"))
                  (rule "polySimp_elimOne" (formula "140") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "162") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "162") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "162") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "162") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "162") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "160") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "160") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "160") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "160") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "160") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "160") (term "1,1,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "96") (term "1"))
                  (rule "mul_literals" (formula "96") (term "1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "31") (term "1"))
                  (rule "mul_literals" (formula "31") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "144") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "144") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "158"))
                  (rule "polySimp_mulLiterals" (formula "158") (term "0"))
                  (rule "polySimp_elimOne" (formula "158") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "142") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "142") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "142") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "142") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "142") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "142") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                  (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                  (rule "polySimp_elimOne" (formula "166") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "155") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "155") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "155") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "155") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "155") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "155") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "137") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "137") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "137") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "96") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "96") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "233") (inst "iv=iv"))
                  (rule "inEqSimp_ltToLeq" (formula "233") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "233") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "233") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "233") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "233") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "233") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "233") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "233") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "233") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "62"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "inEqSimp_subsumption1" (formula "84") (ifseqformula "126"))
                  (rule "leq_literals" (formula "84") (term "0"))
                   (builtin "One Step Simplification" (formula "84"))
                  (rule "true_left" (formula "84"))
                  (rule "newSym_eq" (formula "129") (inst "l=l_0") (inst "newSymDef=mul(result_99, Z(0(#)))"))
                  (rule "times_zero_1" (formula "129") (term "1,1"))
                  (rule "add_zero_right" (formula "129") (term "1"))
                  (rule "applyEq" (formula "130") (term "0,0") (ifseqformula "129"))
                  (rule "eqSymm" (formula "130"))
                  (rule "applyEq" (formula "170") (term "0") (ifseqformula "130"))
                  (rule "applyEq" (formula "169") (term "0") (ifseqformula "130"))
                  (rule "applyEq" (formula "172") (term "3") (ifseqformula "130"))
                  (rule "applyEq" (formula "129") (term "0,0") (ifseqformula "130"))
                  (rule "elimGcdLeq_antec" (formula "169") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                  (rule "neg_literal" (formula "169") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "169") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "169") (term "0,0"))
                   (builtin "One Step Simplification" (formula "169"))
                  (rule "mul_literals" (formula "169") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "169") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "169") (term "0,0,0,0"))
                  (rule "add_literals" (formula "169") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "169") (term "0,0"))
                  (rule "add_literals" (formula "169") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "169") (term "1,0,0"))
                  (rule "add_zero_right" (formula "169") (term "0,0"))
                  (rule "qeq_literals" (formula "169") (term "0"))
                   (builtin "One Step Simplification" (formula "169"))
                  (rule "elimGcdGeq_antec" (formula "170") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                  (rule "polySimp_mulLiterals" (formula "170") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "170") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "170") (term "0,0"))
                   (builtin "One Step Simplification" (formula "170"))
                  (rule "mul_literals" (formula "170") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "170") (term "0,0,0,0"))
                  (rule "add_literals" (formula "170") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "170") (term "0,0"))
                  (rule "add_literals" (formula "170") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "170") (term "1,0,0"))
                  (rule "add_zero_right" (formula "170") (term "0,0"))
                  (rule "leq_literals" (formula "170") (term "0"))
                   (builtin "One Step Simplification" (formula "170"))
                  (rule "newSym_eq" (formula "64") (inst "l=l_1") (inst "newSymDef=mul(result_101, Z(0(#)))"))
                  (rule "times_zero_1" (formula "64") (term "1,1"))
                  (rule "add_zero_right" (formula "64") (term "1"))
                  (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "64"))
                  (rule "eqSymm" (formula "65"))
                  (rule "applyEq" (formula "178") (term "0") (ifseqformula "65"))
                  (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "65"))
                  (rule "applyEq" (formula "179") (term "0") (ifseqformula "65"))
                  (rule "applyEq" (formula "181") (term "3") (ifseqformula "65"))
                  (rule "elimGcdGeq_antec" (formula "179") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                  (rule "polySimp_mulLiterals" (formula "179") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "179") (term "0,0"))
                   (builtin "One Step Simplification" (formula "179"))
                  (rule "mul_literals" (formula "179") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "179") (term "1,0,0"))
                  (rule "polySimp_addLiterals" (formula "179") (term "0,0,0,0"))
                  (rule "add_literals" (formula "179") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "179") (term "0,0"))
                  (rule "add_literals" (formula "179") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "179") (term "1,0,0"))
                  (rule "add_zero_right" (formula "179") (term "0,0"))
                  (rule "leq_literals" (formula "179") (term "0"))
                   (builtin "One Step Simplification" (formula "179"))
                  (rule "elimGcdLeq_antec" (formula "178") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(0(0(0(1(#)))))"))
                  (rule "leq_literals" (formula "178") (term "0,0"))
                   (builtin "One Step Simplification" (formula "178"))
                  (rule "neg_literal" (formula "178") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "178") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "178") (term "1,0,0"))
                  (rule "mul_literals" (formula "178") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "178") (term "0,0,0,0"))
                  (rule "add_literals" (formula "178") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "178") (term "0,0"))
                  (rule "add_literals" (formula "178") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "178") (term "1,0,0"))
                  (rule "add_zero_right" (formula "178") (term "0,0"))
                  (rule "qeq_literals" (formula "178") (term "0"))
                   (builtin "One Step Simplification" (formula "178"))
                  (rule "pullOutSelect" (formula "233") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_0"))
                  (rule "applyEq" (formula "234") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "234") (term "0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "206")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "205")))
                  (rule "eqSymm" (formula "234") (term "1,0,1"))
                  (rule "eqSymm" (formula "234") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "207")) (ifInst ""  (formula "207")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "206")) (ifInst ""  (formula "206")))
                  (rule "applyEqReverse" (formula "235") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "235") (term "0,1,1,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "235") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "235") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "235") (term "1,0,1,1,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "235") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEqRigid" (formula "233") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "233") (term "0,1,1,0,1") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "233") (term "0,1,0") (ifseqformula "4"))
                  (rule "pullOutSelect" (formula "233") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
                  (rule "applyEq" (formula "234") (term "0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "231")))
                  (rule "eqSymm" (formula "234") (term "1,0,1"))
                  (rule "eqSymm" (formula "234") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "233")) (ifInst ""  (formula "233")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")) (ifInst ""  (formula "232")))
                  (rule "applyEqReverse" (formula "235") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "235") (term "0,1,1,0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "235") (term "1,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "235"))
                  (rule "allRight" (formula "235") (inst "sk=iv_0"))
                  (rule "impRight" (formula "235"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "237") (term "1,0,1") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "237"))
                  (rule "closeTrue" (formula "237"))
               )
               (branch "Exceptional Post (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "135"))
                   (builtin "One Step Simplification" (formula "116"))
                  (rule "andLeft" (formula "116"))
                  (rule "andLeft" (formula "116"))
                  (rule "andLeft" (formula "118"))
                  (rule "notLeft" (formula "116"))
                  (rule "close" (formula "119") (ifseqformula "118"))
               )
               (branch "Pre (getCurrentLineNumber)"
                   (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "88")))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "134") (userinteraction))
                  (rule "closeTrue" (formula "134") (userinteraction))
               )
               (branch "Null reference (c_4 = null)"
                   (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "128")))
                  (rule "closeTrue" (formula "134") (userinteraction))
               )
            )
            (branch "if x_4 false"
                (builtin "One Step Simplification" (formula "133"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "methodCallEmpty" (formula "133") (term "1"))
               (rule "tryEmpty" (formula "133") (term "1"))
               (rule "emptyModality" (formula "133") (term "1"))
                (builtin "One Step Simplification" (formula "133"))
               (rule "impRight" (formula "161"))
               (rule "notRight" (formula "134"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "4"))
               (rule "eqSymm" (formula "164"))
               (rule "eqSymm" (formula "2"))
               (rule "polySimp_homoEq" (formula "36"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "dismissNonSelectedFieldEQ" (formula "164") (term "1") (ifseqformula "7"))
               (rule "eqSymm" (formula "164"))
               (rule "dismissNonSelectedFieldEQ" (formula "164") (term "1,0") (ifseqformula "7"))
               (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "1"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "62") (term "0,1"))
               (rule "add_literals" (formula "62") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0"))
               (rule "add_zero_right" (formula "26") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
               (rule "add_literals" (formula "48") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
               (rule "add_literals" (formula "54") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "63") (term "0,0,1"))
               (rule "add_literals" (formula "63") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,1"))
               (rule "add_literals" (formula "45") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "47") (term "0,1"))
               (rule "add_literals" (formula "47") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "97"))
               (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "97") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "60") (term "0,0,1"))
               (rule "add_literals" (formula "60") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "1"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "53") (term "0,1"))
               (rule "add_literals" (formula "53") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "56") (term "1"))
               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "56") (term "0,1"))
               (rule "add_literals" (formula "56") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "44") (term "0,1"))
               (rule "add_literals" (formula "44") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "1"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,1"))
               (rule "add_literals" (formula "41") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "103"))
               (rule "polySimp_mulComm0" (formula "103") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "103") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "1"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "66") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "80"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "1"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "1"))
               (rule "add_zero_right" (formula "38") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "88"))
               (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1"))
               (rule "add_zero_right" (formula "39") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "59") (term "1"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "50") (term "0,1"))
               (rule "add_literals" (formula "50") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "66") (term "0,0,1"))
               (rule "add_literals" (formula "66") (term "0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0"))
               (rule "add_literals" (formula "28") (term "0"))
               (rule "leq_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "polySimp_addComm1" (formula "79") (term "0"))
               (rule "polySimp_addComm1" (formula "64") (term "0,1"))
               (rule "add_literals" (formula "64") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "87") (term "0"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
               (rule "add_literals" (formula "50") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
               (rule "add_literals" (formula "41") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1"))
               (rule "add_literals" (formula "58") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "56") (term "0,0,1"))
               (rule "add_literals" (formula "56") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "67") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "67") (term "0,1,0,0"))
               (rule "add_literals" (formula "67") (term "1,0,1,0,0"))
               (rule "times_zero_1" (formula "67") (term "0,1,0,0"))
               (rule "qeq_literals" (formula "67") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "67"))
               (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
               (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "67") (term "0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,1,0"))
               (rule "add_literals" (formula "67") (term "1,1,0,1,0"))
               (rule "times_zero_1" (formula "67") (term "1,0,1,0"))
               (rule "add_literals" (formula "67") (term "0,1,0"))
               (rule "leq_literals" (formula "67") (term "1,0"))
                (builtin "One Step Simplification" (formula "67"))
               (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "163") (term "0,1") (ifseqformula "3"))
               (rule "applyEqRigid" (formula "163") (term "0,1,1") (ifseqformula "3"))
               (rule "applyEq" (formula "91") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "76") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "108") (term "1,2") (ifseqformula "5"))
               (rule "applyEq" (formula "116") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "112") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "88") (term "1,1") (ifseqformula "5"))
               (rule "applyEq" (formula "67") (term "0,0,1") (ifseqformula "68"))
               (rule "applyEq" (formula "93") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "147") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "87") (term "1,1,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "86") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "108") (term "4") (ifseqformula "107"))
               (rule "applyEq" (formula "76") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "81") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "156") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "116") (term "4") (ifseqformula "115"))
               (rule "applyEq" (formula "112") (term "4") (ifseqformula "109"))
               (rule "applyEq" (formula "158") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "96") (term "1,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "97") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "93") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "162") (term "0") (ifseqformula "5"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "136") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "5"))
               (rule "applyEq" (formula "81") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "159") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "116") (term "1,2") (ifseqformula "1"))
               (rule "applyEq" (formula "149") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "155") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "148") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "150") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "153") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "90") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "98") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "154") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "151") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "112") (term "1,2") (ifseqformula "5"))
               (rule "applyEq" (formula "146") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "157") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "152") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "95") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "101") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "163") (term "1") (ifseqformula "4"))
               (rule "jmod_axiom" (formula "70") (term "0"))
               (rule "polySimp_mulLiterals" (formula "70") (term "1,0"))
               (rule "jmod_axiom" (formula "117") (term "0"))
               (rule "polySimp_mulLiterals" (formula "117") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24"))
               (rule "mul_literals" (formula "24") (term "1"))
               (rule "polySimp_sepPosMonomial" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1"))
               (rule "polySimp_rightDist" (formula "35") (term "1"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
               (rule "mul_literals" (formula "35") (term "0,1"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "polySimp_homoEq" (formula "35") (term "1"))
               (rule "times_zero_2" (formula "35") (term "1,0,1"))
               (rule "add_zero_right" (formula "35") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "1"))
               (rule "polySimp_mulLiterals" (formula "61") (term "0,1"))
               (rule "polySimp_elimOne" (formula "61") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "47") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "53") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "62") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "62") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "44") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
               (rule "polySimp_elimOne" (formula "46") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "59") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "1"))
               (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
               (rule "polySimp_elimOne" (formula "52") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "1"))
               (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
               (rule "polySimp_elimOne" (formula "55") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,1"))
               (rule "polySimp_elimOne" (formula "40") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
               (rule "polySimp_elimOne" (formula "37") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "38") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "1"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,1"))
               (rule "polySimp_elimOne" (formula "49") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "65") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "65") (term "0,0,1"))
               (rule "polySimp_sepNegMonomial" (formula "70"))
               (rule "polySimp_mulLiterals" (formula "70") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "117"))
               (rule "polySimp_mulLiterals" (formula "117") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "1"))
               (rule "polySimp_mulLiterals" (formula "64") (term "0,1"))
               (rule "polySimp_elimOne" (formula "64") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "50") (term "0,0,1"))
               (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
               (rule "mul_literals" (formula "35") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "41") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1"))
               (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
               (rule "polySimp_elimOne" (formula "58") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "56") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "56") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "93") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "87"))
               (rule "polySimp_mulLiterals" (formula "87") (term "0"))
               (rule "polySimp_elimOne" (formula "87") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "102"))
               (rule "polySimp_mulLiterals" (formula "102") (term "0"))
               (rule "polySimp_elimOne" (formula "102") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "79"))
               (rule "polySimp_mulLiterals" (formula "79") (term "0"))
               (rule "polySimp_elimOne" (formula "79") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "96"))
               (rule "polySimp_mulLiterals" (formula "96") (term "0"))
               (rule "polySimp_elimOne" (formula "96") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
               (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
               (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "0,0"))
               (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "66"))
               (rule "leq_literals" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "pullOutSelect" (formula "162") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "161")) (ifInst ""  (formula "161")))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "160")) (ifInst ""  (formula "160")))
               (rule "applyEqReverse" (formula "163") (term "1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "162") (inst "iv=iv"))
               (rule "inEqSimp_ltToLeq" (formula "162") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "162") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "162") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "162") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "162") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "162") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "162") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "162") (term "1,1,1,0,0,1"))
               (rule "newSym_eq" (formula "69") (inst "l=l_0") (inst "newSymDef=mul(result_99, Z(0(#)))"))
               (rule "times_zero_1" (formula "69") (term "1,1"))
               (rule "add_zero_right" (formula "69") (term "1"))
               (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "69"))
               (rule "eqSymm" (formula "70"))
               (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "70"))
               (rule "applyEq" (formula "105") (term "0") (ifseqformula "70"))
               (rule "applyEq" (formula "108") (term "3") (ifseqformula "70"))
               (rule "applyEq" (formula "106") (term "0") (ifseqformula "70"))
               (rule "elimGcdGeq_antec" (formula "106") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "106") (term "1,0,1,0"))
               (rule "leq_literals" (formula "106") (term "0,0"))
                (builtin "One Step Simplification" (formula "106"))
               (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "106") (term "0,0,0,0"))
               (rule "add_literals" (formula "106") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "106") (term "0,0"))
               (rule "add_literals" (formula "106") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "106") (term "1,0,0"))
               (rule "add_zero_right" (formula "106") (term "0,0"))
               (rule "leq_literals" (formula "106") (term "0"))
                (builtin "One Step Simplification" (formula "106"))
               (rule "elimGcdLeq_antec" (formula "105") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "105") (term "0,0"))
                (builtin "One Step Simplification" (formula "105"))
               (rule "neg_literal" (formula "105") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "105") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "105") (term "1,0,0"))
               (rule "mul_literals" (formula "105") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "105") (term "0,0,0,0"))
               (rule "add_literals" (formula "105") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "105") (term "0,0"))
               (rule "add_literals" (formula "105") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "105") (term "1,0,0"))
               (rule "add_zero_right" (formula "105") (term "0,0"))
               (rule "qeq_literals" (formula "105") (term "0"))
                (builtin "One Step Simplification" (formula "105"))
               (rule "pullOutSelect" (formula "163") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_0"))
               (rule "applyEq" (formula "164") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
               (rule "applyEq" (formula "164") (term "0,0,1,0,1") (ifseqformula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "162")))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "161")))
               (rule "applyEqReverse" (formula "164") (term "0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "164"))
               (rule "allRight" (formula "164") (inst "sk=iv_0"))
               (rule "impRight" (formula "164"))
               (rule "andLeft" (formula "1"))
               (rule "applyEqReverse" (formula "166") (term "0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "166"))
               (rule "closeTrue" (formula "166"))
            )
         )
         (branch "Exceptional Post (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "108"))
             (builtin "One Step Simplification" (formula "127"))
            (rule "andLeft" (formula "108"))
            (rule "andLeft" (formula "108"))
            (rule "andLeft" (formula "110"))
            (rule "notLeft" (formula "108"))
            (rule "close" (formula "111") (ifseqformula "110"))
         )
         (branch "Pre (getCurrentLineNumber)"
             (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "86")))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "126") (userinteraction))
            (rule "closeTrue" (formula "126") (userinteraction))
         )
         (branch "Null reference (c_3 = null)"
             (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "120")))
            (rule "closeTrue" (formula "126") (userinteraction))
         )
      )
      (branch "Exceptional Post (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "24"))
         (rule "close" (formula "27") (ifseqformula "26"))
      )
      (branch "Pre (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "3")))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "46"))
         (rule "closeTrue" (formula "46"))
      )
      (branch "Null reference (c_2 = null)"
          (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "40")))
         (rule "closeTrue" (formula "46"))
      )
   )
   (branch "if x false"
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "eqSymm" (formula "21") (term "0,0,0,1"))
      (rule "eqSymm" (formula "21") (term "1,0,0,1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "boxToDiamond" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "notLeft" (formula "21"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "20") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "insert_constant_string_value" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "insert_constant_string_value" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "insert_constant_string_value" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "castDel" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castDel" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "21"))
      (rule "notLeft" (formula "20"))
      (rule "exLeft" (formula "25") (inst "sk=i_1"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "exLeft" (formula "22") (inst "sk=i_2_1"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "castedGetAny" (formula "26") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "25") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "21") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "29") (term "0"))
      (rule "castedGetAny" (formula "24") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "27"))
      (rule "inEqSimp_commuteLeq" (formula "22"))
      (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "20"))
      (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_printStatus_0,savedHeapBefore_printStatus_0"))
       (builtin "One Step Simplification" (formula "53"))
      (rule "commute_and" (formula "26") (term "0,0"))
      (rule "commute_and" (formula "25") (term "0,0"))
      (rule "commute_and" (formula "21") (term "0,0"))
      (rule "ifUnfold" (formula "53") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_3"))
      (rule "compound_equality_comparison_1" (formula "53") (term "1") (inst "#v0=x_4"))
      (rule "variableDeclarationAssign" (formula "53") (term "1"))
      (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_4"))
      (rule "compound_modulo_1" (formula "53") (term "1") (inst "#v=x_5"))
      (rule "variableDeclarationAssign" (formula "53") (term "1"))
      (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_5"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "53") (term "1") (inst "#v0=c"))
      (rule "variableDeclaration" (formula "53") (term "1") (newnames "c_2"))
      (rule "assignment_read_attribute_this" (formula "53") (term "1"))
       (builtin "One Step Simplification" (formula "53"))
       (builtin "Use Operation Contract" (formula "53") (newnames "heapBefore_getCurrentLineNumber_0,result_100,exc_131") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
      (branch "Post (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "35"))
          (builtin "One Step Simplification" (formula "36"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "17")))
          (builtin "One Step Simplification" (formula "56"))
         (rule "expand_inLong" (formula "35") (term "1,0"))
         (rule "replace_long_MAX" (formula "35") (term "1,0,1,0"))
         (rule "replace_long_MIN" (formula "35") (term "0,1,1,0"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "inEqSimp_commuteLeq" (formula "36"))
         (rule "assignment" (formula "58") (term "1"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "39"))
         (rule "true_left" (formula "39"))
         (rule "assignmentModulo" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "equal_literals" (formula "57") (term "0,0"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "translateJavaMod" (formula "57") (term "0,1,0"))
         (rule "equality_comparison_simple" (formula "57") (term "1"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "lenNonNegative" (formula "28") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "lenNonNegative" (formula "23") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "ifSplit" (formula "59"))
         (branch "if x_3 true"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "activeUseStaticFieldWriteAccess" (formula "60") (term "1") (inst "#v0=s"))
            (rule "variableDeclarationAssign" (formula "60") (term "1"))
            (rule "variableDeclaration" (formula "60") (term "1") (newnames "s"))
            (rule "compound_addition_2" (formula "60") (term "1") (inst "#v1=s_2") (inst "#v0=s_1"))
            (rule "variableDeclarationAssign" (formula "60") (term "1"))
            (rule "variableDeclaration" (formula "60") (term "1") (newnames "s_1"))
            (rule "compound_addition_2" (formula "60") (term "1") (inst "#v1=x") (inst "#v0=s_3"))
            (rule "variableDeclarationAssign" (formula "60") (term "1"))
            (rule "variableDeclaration" (formula "60") (term "1") (newnames "s_3"))
            (rule "stringAssignment" (formula "60") (term "1"))
             (builtin "One Step Simplification" (formula "62"))
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "1"))
            (rule "variableDeclarationAssign" (formula "62") (term "1"))
            (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_6"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "62") (term "1") (inst "#v0=c"))
            (rule "variableDeclaration" (formula "62") (term "1") (newnames "c_3"))
            (rule "assignment_read_attribute_this" (formula "62") (term "1"))
             (builtin "One Step Simplification" (formula "62"))
             (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_getCurrentLineNumber_1,result_101,exc_132") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getCurrentLineNumber()].JML normal_behavior operation contract.0"))
            (branch "Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "65"))
                (builtin "One Step Simplification" (formula "44"))
                (builtin "One Step Simplification" (formula "43"))
                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "19")))
               (rule "expand_inLong" (formula "43") (term "1,0"))
               (rule "replace_long_MAX" (formula "43") (term "1,0,1,0"))
               (rule "replace_long_MIN" (formula "43") (term "0,1,1,0"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "inEqSimp_commuteLeq" (formula "44"))
               (rule "assignment" (formula "67") (term "1"))
                (builtin "One Step Simplification" (formula "67"))
               (rule "stringConcatIntExpRight" (formula "67") (term "1") (inst "sk=sk_0"))
                (builtin "One Step Simplification" (formula "69"))
                (builtin "One Step Simplification" (formula "68"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
               (rule "variableDeclarationAssign" (formula "69") (term "1"))
               (rule "variableDeclaration" (formula "69") (term "1") (newnames "s_2"))
               (rule "stringAssignment" (formula "69") (term "1"))
                (builtin "One Step Simplification" (formula "71"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "1"))
               (rule "stringConcat" (formula "71") (term "1") (inst "sk=sk_1"))
                (builtin "One Step Simplification" (formula "73"))
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "72"))
               (rule "poolKeyIsContentOfValue" (formula "1") (term "1,1"))
               (rule "assignment_write_static_attribute" (formula "73") (term "1"))
                (builtin "One Step Simplification" (formula "73"))
               (rule "eqSeqConcat" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "lenOfSeqConcat" (formula "4") (term "2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
               (rule "add_literals" (formula "5") (term "0,1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_addAssoc" (formula "4") (term "2,0"))
               (rule "add_literals" (formula "4") (term "0,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "add_literals" (formula "5") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "4") (term "1,2,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "add_literals" (formula "4") (term "1,2,0"))
               (rule "add_literals" (formula "4") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,0,1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqSubEQ" (formula "3") (term "1,1") (ifseqformula "5"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
               (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "74")))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "eqSeqConcat" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1"))
               (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "add_literals" (formula "1") (term "1,0,1"))
               (rule "add_literals" (formula "1") (term "0,1"))
               (rule "applyEqRigid" (formula "3") (term "2,0") (ifseqformula "1"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_addAssoc" (formula "7") (term "1"))
               (rule "add_literals" (formula "7") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1"))
               (rule "add_literals" (formula "7") (term "1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSubEQ" (formula "7") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_zero_left" (formula "7") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
               (rule "times_zero_2" (formula "7") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "1,0,0"))
               (rule "eqSeqConcat" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "lenOfSeqSub" (formula "5") (term "2,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,2,0"))
               (rule "add_literals" (formula "5") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "5") (term "1,1,2,0"))
               (rule "add_literals" (formula "5") (term "1,2,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "eqSeqSingleton" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "lenOfSeqSub" (formula "3") (term "0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "1,0"))
               (rule "add_literals" (formula "3") (term "1,1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,1,0"))
               (rule "add_zero_right" (formula "3") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqSub" (formula "4") (term "0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "add_literals" (formula "3") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "3") (term "1,1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "add_literals" (formula "3") (term "1,1"))
               (rule "add_literals" (formula "3") (term "1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "equal_literals" (formula "3") (term "1"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "5") (term "0,2,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "sub_literals" (formula "4") (term "1,0,0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "eqSeqConcat" (formula "10"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqSub" (formula "12") (term "2,0"))
               (rule "sub_literals" (formula "12") (term "1,2,0"))
               (rule "less_literals" (formula "12") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "eqSeqSingleton" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "lenOfSeqSub" (formula "10") (term "0"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "0"))
               (rule "lenOfSeqSub" (formula "11") (term "0"))
               (rule "sub_literals" (formula "11") (term "1,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "equal_literals" (formula "11") (term "1"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "less_literals" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_addAssoc" (formula "10") (term "1"))
               (rule "add_literals" (formula "10") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "10") (term "1,1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "add_literals" (formula "10") (term "1,1"))
               (rule "add_literals" (formula "10") (term "1"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "getOfSeqSub" (formula "4") (term "0"))
               (rule "castDel" (formula "4") (term "2,0"))
               (rule "add_zero_left" (formula "4") (term "1,1,0"))
               (rule "leq_literals" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
               (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
               (rule "add_literals" (formula "4") (term "1,0,0"))
               (rule "less_literals" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_right" (formula "10") (term "1,1,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSub" (formula "10") (term "0"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "sub_literals" (formula "10") (term "1,1,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "less_literals" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "getOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "10") (term "2,0"))
               (rule "add_zero_right" (formula "10") (term "1,1,0"))
               (rule "leq_literals" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "10") (term "1,0,0"))
               (rule "eqSeqConcat" (formula "5"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "lenOfSeqSub" (formula "7") (term "2,0"))
               (rule "less_literals" (formula "7") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "2,0"))
               (rule "eqSeqSingleton" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "less_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "lenOfSeqSub" (formula "5") (term "0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "0"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "add_literals" (formula "5") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "5") (term "1,1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "add_literals" (formula "5") (term "1,1"))
               (rule "add_literals" (formula "5") (term "1"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "sub_literals" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "eqSeqConcat" (formula "12"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "lenOfSeqSub" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,2,0"))
               (rule "less_literals" (formula "14") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "eqSeqSingleton" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "lenOfSeqSub" (formula "12") (term "0"))
               (rule "sub_literals" (formula "12") (term "1,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "lenOfSeqSub" (formula "13") (term "0"))
               (rule "sub_literals" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "12") (term "1,1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "add_literals" (formula "12") (term "1,1"))
               (rule "add_literals" (formula "12") (term "1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "sub_literals" (formula "5") (term "1,1,0,0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "getOfSeqSub" (formula "5") (term "0"))
               (rule "castDel" (formula "5") (term "2,0"))
               (rule "leq_literals" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "polySimp_elimSub" (formula "5") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0"))
               (rule "add_literals" (formula "5") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,0,0"))
               (rule "less_literals" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "getOfSeqSub" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "2,0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "leq_literals" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "1,0,0"))
               (rule "less_literals" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "eqSeqConcat" (formula "6"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "lenOfSeqSub" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,2,0"))
               (rule "less_literals" (formula "8") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "lenOfSeqSub" (formula "6") (term "0"))
               (rule "sub_literals" (formula "6") (term "1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqSingleton" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_addAssoc" (formula "6") (term "1"))
               (rule "add_literals" (formula "6") (term "0,1"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,1"))
               (rule "add_literals" (formula "6") (term "1"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "sub_literals" (formula "13") (term "1,0,0"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "14"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "lenOfSeqSub" (formula "16") (term "2,0"))
               (rule "less_literals" (formula "16") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "0,1"))
               (rule "eqSeqSingleton" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "lenOfSeqSub" (formula "14") (term "0"))
               (rule "sub_literals" (formula "14") (term "1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "lenOfSeqSub" (formula "15") (term "0"))
               (rule "sub_literals" (formula "15") (term "1,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_addAssoc" (formula "14") (term "1"))
               (rule "add_literals" (formula "14") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,1"))
               (rule "add_literals" (formula "14") (term "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "getOfSeqSub" (formula "13") (term "0"))
               (rule "castDel" (formula "13") (term "2,0"))
               (rule "sub_literals" (formula "13") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "1,1,0"))
               (rule "leq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "less_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "add_zero_left" (formula "6") (term "1,1,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "sub_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "14") (term "0"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "sub_literals" (formula "14") (term "1,1,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_zero_left" (formula "14") (term "1,1,0"))
               (rule "less_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "sub_literals" (formula "6") (term "1,1,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "eqSeqConcat" (formula "7"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "lenOfSeqSub" (formula "9") (term "2,0"))
               (rule "less_literals" (formula "9") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1"))
               (rule "add_literals" (formula "7") (term "1"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "equal_literals" (formula "7") (term "1"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "lenOfSeqSub" (formula "7") (term "0"))
               (rule "sub_literals" (formula "7") (term "1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "1,0,0"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSubEQ" (formula "14") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "14") (term "2,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "times_zero_2" (formula "14") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "6") (term "0"))
               (rule "castDel" (formula "6") (term "2,0"))
               (rule "leq_literals" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,1,0,0"))
               (rule "add_literals" (formula "6") (term "1,0,0"))
               (rule "less_literals" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSeqConcat" (formula "16"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "lenOfSeqSub" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,2,0"))
               (rule "less_literals" (formula "18") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_addAssoc" (formula "16") (term "1"))
               (rule "add_literals" (formula "16") (term "0,1"))
               (rule "eqSeqSingleton" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "lenOfSeqSub" (formula "16") (term "0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "0"))
               (rule "lenOfSeqSub" (formula "17") (term "0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_addAssoc" (formula "16") (term "1"))
               (rule "add_literals" (formula "16") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_addAssoc" (formula "16") (term "1"))
               (rule "add_literals" (formula "16") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,1"))
               (rule "add_literals" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "sub_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "15") (term "0"))
               (rule "castDel" (formula "15") (term "2,0"))
               (rule "add_literals" (formula "15") (term "1,1,0"))
               (rule "sub_literals" (formula "15") (term "1,1,0,0"))
               (rule "leq_literals" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_literals" (formula "15") (term "0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "eqSeqConcat" (formula "8"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "add_literals" (formula "8") (term "1,0,0"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "eqSeqSingleton" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "sub_literals" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "equal_literals" (formula "8") (term "1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "eqSeqSingleton" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "lenOfSeqSub" (formula "10") (term "2,0,0"))
               (rule "less_literals" (formula "10") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "sub_literals" (formula "10") (term "2,0,0"))
               (rule "lenOfSeqSub" (formula "11") (term "2,0,0"))
               (rule "less_literals" (formula "11") (term "0,2,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,0,0"))
               (rule "lenOfSeqSub" (formula "8") (term "0"))
               (rule "sub_literals" (formula "8") (term "1,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "lenOfSeqSub" (formula "9") (term "0"))
               (rule "sub_literals" (formula "9") (term "1,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "equal_literals" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSub" (formula "16") (term "0"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "1,0,0"))
               (rule "less_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "eqSeqConcat" (formula "18"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "lenOfSeqSub" (formula "20") (term "2,0"))
               (rule "less_literals" (formula "20") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "2,0"))
               (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "polySimp_addAssoc" (formula "18") (term "1"))
               (rule "add_literals" (formula "18") (term "0,1"))
               (rule "eqSeqSingleton" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "lenOfSeqSub" (formula "18") (term "0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "sub_literals" (formula "18") (term "0"))
               (rule "lenOfSeqSub" (formula "19") (term "0"))
               (rule "sub_literals" (formula "19") (term "1,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "polySimp_addAssoc" (formula "18") (term "1"))
               (rule "add_literals" (formula "18") (term "0,1"))
               (rule "lenOfSeqConcat" (formula "18") (term "1,1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,1"))
               (rule "add_literals" (formula "18") (term "1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "sub_literals" (formula "7") (term "1,1,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "sub_literals" (formula "17") (term "1,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "sub_literals" (formula "18") (term "1,0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "7") (term "0"))
               (rule "castDel" (formula "7") (term "2,0"))
               (rule "leq_literals" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,1,0,0"))
               (rule "add_literals" (formula "7") (term "1,0,0"))
               (rule "less_literals" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSubEQ" (formula "16") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "16") (term "2,0"))
               (rule "add_literals" (formula "16") (term "1,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "sub_literals" (formula "9") (term "1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "sub_literals" (formula "18") (term "1,0,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSeqConcat" (formula "19"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "lenOfSeqSub" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,2,0"))
               (rule "less_literals" (formula "21") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "lenOfSeqSub" (formula "19") (term "0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "0"))
               (rule "eqSeqSingleton" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_addAssoc" (formula "19") (term "1"))
               (rule "add_literals" (formula "19") (term "0,1"))
               (rule "lenOfSeqSub" (formula "20") (term "0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "lenOfSeqConcat" (formula "19") (term "1,1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_literals" (formula "19") (term "1,1"))
               (rule "add_literals" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "sub_literals" (formula "8") (term "1,1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "17") (term "0"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "sub_literals" (formula "17") (term "1,1,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "less_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_zero_right" (formula "19") (term "1,0"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "add_literals" (formula "8") (term "1,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "sub_literals" (formula "9") (term "1,1,0,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "sub_literals" (formula "18") (term "1,0,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "8") (term "0"))
               (rule "castDel" (formula "8") (term "2,0"))
               (rule "leq_literals" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_elimSub" (formula "8") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,1,0,0"))
               (rule "add_literals" (formula "8") (term "1,0,0"))
               (rule "less_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "getOfSeqSub" (formula "9") (term "0"))
               (rule "castDel" (formula "9") (term "2,0"))
               (rule "leq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "1,0,0"))
               (rule "add_literals" (formula "9") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,1,0,0"))
               (rule "add_literals" (formula "9") (term "1,0,0"))
               (rule "less_literals" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "sub_literals" (formula "18") (term "1,0,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSubEQ" (formula "17") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "17") (term "2,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "add_zero_right" (formula "17") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
               (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "sub_literals" (formula "19") (term "1,0,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "eqSeqConcat" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "lenOfSeqSub" (formula "22") (term "2,0"))
               (rule "less_literals" (formula "22") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "2,0"))
               (rule "eqSeqSingleton" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_literals" (formula "20") (term "1,1"))
               (rule "add_literals" (formula "20") (term "1"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "sub_literals" (formula "21") (term "1,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "lenOfSeqSub" (formula "20") (term "0"))
               (rule "sub_literals" (formula "20") (term "1,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "sub_literals" (formula "20") (term "1,1,0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "18") (term "0"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "sub_literals" (formula "18") (term "1,1,0,0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "less_literals" (formula "18") (term "0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "sub_literals" (formula "19") (term "1,0,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "sub_literals" (formula "20") (term "1,1,0,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_zero_left" (formula "20") (term "1,1,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSubEQ" (formula "18") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "18") (term "2,0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "leq_literals" (formula "18") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "add_literals" (formula "19") (term "1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "sub_literals" (formula "19") (term "1,0,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "19") (term "0"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "sub_literals" (formula "19") (term "1,1,0,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "add_zero_right" (formula "19") (term "1,1,0"))
               (rule "less_literals" (formula "19") (term "0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "eqSeqConcat" (formula "21"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,0,0"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "lenOfSeqSub" (formula "23") (term "2,0"))
               (rule "sub_literals" (formula "23") (term "1,2,0"))
               (rule "less_literals" (formula "23") (term "0,2,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "eqSeqSingleton" (formula "22"))
               (rule "andLeft" (formula "22"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "eqSeqSingleton" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "lenOfSeqSub" (formula "21") (term "0"))
               (rule "sub_literals" (formula "21") (term "1,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "lenOfSeqSub" (formula "22") (term "0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSubEQ" (formula "19") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "19") (term "2,0"))
               (rule "add_zero_right" (formula "19") (term "1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
               (rule "times_zero_2" (formula "19") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "19") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "sub_literals" (formula "20") (term "1,0,0"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "sub_literals" (formula "20") (term "1,1,0,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "sub_literals" (formula "20") (term "1,1,0,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSubEQ" (formula "20") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "20") (term "2,0"))
               (rule "leq_literals" (formula "20") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "add_literals" (formula "20") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "20") (term "1,0,0"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "sub_literals" (formula "21") (term "1,1,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "sub_literals" (formula "22") (term "1,1,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSub" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "sub_literals" (formula "21") (term "1,0,0"))
               (rule "less_literals" (formula "21") (term "0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "getOfSeqSub" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "sub_literals" (formula "22") (term "1,0,0"))
               (rule "less_literals" (formula "22") (term "0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "getOfSeqSubEQ" (formula "21") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "21") (term "2,0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
               (rule "mul_literals" (formula "21") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "21") (term "1,0,0"))
               (rule "getOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "2"))
               (rule "castDel" (formula "22") (term "2,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "add_literals" (formula "22") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "22") (term "1,0,0"))
               (rule "hideAuxiliaryEqConcrete" (formula "11"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "69"))
               (rule "true_left" (formula "69"))
               (rule "methodCallEmpty" (formula "91") (term "1"))
               (rule "seqGetAlphaCast" (formula "55") (term "0"))
               (rule "castedGetAny" (formula "55") (term "0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "true_left" (formula "55"))
               (rule "seqGetAlphaCast" (formula "49") (term "0"))
               (rule "castedGetAny" (formula "49") (term "0"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "true_left" (formula "49"))
               (rule "lenNonNegative" (formula "51") (term "1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "51"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0,1") (ifseqformula "41"))
               (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "84"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "41"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "42"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "43"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "44"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "45"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "46"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "1") (ifseqformula "47"))
               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "87"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1") (ifseqformula "47"))
               (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "84"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "47"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "48"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "49"))
               (rule "applyEqRigid" (formula "53") (term "1,0,1") (ifseqformula "54"))
               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "53"))
               (rule "true_left" (formula "53"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "49"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "50"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "51"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "52"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "53"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "54"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "0") (ifseqformula "55"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "ifEqualsInteger" (formula "27"))
               (rule "lenNonNegative" (formula "37") (term "2,0"))
               (rule "inEqSimp_commuteLeq" (formula "37"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
               (rule "andLeft" (formula "38"))
               (rule "lenOfSeqSub" (formula "38") (term "0"))
               (rule "polySimp_elimSub" (formula "38") (term "1,0"))
               (rule "mul_literals" (formula "38") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,0"))
               (rule "lenOfSeqSub" (formula "39") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "39") (term "1,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "39") (term "1,1,1,0,0"))
               (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "40"))
               (rule "eqSymm" (formula "38"))
               (rule "polySimp_elimSub" (formula "38") (term "1,0"))
               (rule "mul_literals" (formula "38") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
               (rule "getOfSeqSub" (formula "38") (term "0,1,0"))
               (rule "castDel" (formula "38") (term "2,0,1,0"))
               (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "38") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
               (rule "getOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "39"))
               (rule "castDel" (formula "38") (term "2,1,1,0"))
               (rule "eqSymm" (formula "38") (term "1,0"))
               (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "38") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
               (rule "andLeft" (formula "17"))
               (rule "lenOfSeqSub" (formula "17") (term "0"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0"))
               (rule "times_zero_2" (formula "17") (term "1,1,0"))
               (rule "add_zero_right" (formula "17") (term "1,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "eqSymm" (formula "17") (term "1"))
               (rule "lenOfSeqSub" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
               (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0"))
               (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "applyEqRigid" (formula "18") (term "0,0,1,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "charLiteral_to_int" (formula "20") (term "1"))
               (rule "lenNonNegative" (formula "16") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "16"))
               (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "17"))
               (rule "charLiteral_to_int" (formula "30") (term "1"))
               (rule "ifEqualsInteger" (formula "30"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "31") (term "1"))
               (rule "ifEqualsInteger" (formula "31"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "charLiteral_to_int" (formula "32") (term "1"))
               (rule "ifEqualsInteger" (formula "32"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "charLiteral_to_int" (formula "33") (term "1"))
               (rule "ifEqualsInteger" (formula "33"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "34") (term "1"))
               (rule "ifEqualsInteger" (formula "34"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "35") (term "1"))
               (rule "ifEqualsInteger" (formula "35"))
               (rule "charLiteral_to_int" (formula "36") (term "1"))
               (rule "ifEqualsInteger" (formula "36"))
               (rule "commute_and" (formula "29") (term "0"))
               (rule "commute_and" (formula "29") (term "1"))
               (rule "charLiteral_to_int" (formula "37") (term "1"))
               (rule "ifEqualsInteger" (formula "37"))
               (rule "charLiteral_to_int" (formula "38") (term "1"))
               (rule "ifEqualsInteger" (formula "38"))
               (rule "tryEmpty" (formula "113") (term "1"))
               (rule "commute_and" (formula "30") (term "0"))
               (rule "commute_and" (formula "30") (term "1"))
               (rule "commute_and" (formula "31") (term "1"))
               (rule "commute_and" (formula "31") (term "0"))
               (rule "commute_and" (formula "32") (term "0"))
               (rule "commute_and" (formula "32") (term "1"))
               (rule "commute_and" (formula "33") (term "0"))
               (rule "commute_and" (formula "33") (term "1"))
               (rule "commute_and" (formula "34") (term "1"))
               (rule "commute_and" (formula "34") (term "0"))
               (rule "commute_and" (formula "35") (term "0"))
               (rule "commute_and" (formula "35") (term "1"))
               (rule "commute_and" (formula "36") (term "0"))
               (rule "commute_and" (formula "36") (term "1"))
               (rule "commute_and" (formula "37") (term "0"))
               (rule "commute_and" (formula "37") (term "1"))
               (rule "commute_and" (formula "38") (term "1"))
               (rule "commute_and" (formula "38") (term "0"))
               (rule "cnf_rightDist" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "commute_or" (formula "29"))
               (rule "cnf_rightDist" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "commute_or" (formula "31"))
               (rule "cnf_rightDist" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "commute_or" (formula "33"))
               (rule "cnf_rightDist" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "commute_or" (formula "30"))
               (rule "cnf_rightDist" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "commute_or" (formula "30"))
               (rule "cnf_rightDist" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "commute_or" (formula "36"))
               (rule "cnf_rightDist" (formula "33"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "commute_or" (formula "33"))
               (rule "cnf_rightDist" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "commute_or" (formula "38"))
               (rule "cnf_rightDist" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "commute_or" (formula "33"))
               (rule "cnf_rightDist" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "commute_or" (formula "41"))
               (rule "cnf_rightDist" (formula "36"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "commute_or" (formula "36"))
               (rule "cnf_rightDist" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "commute_or" (formula "43"))
               (rule "cnf_rightDist" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "commute_or" (formula "36"))
               (rule "cnf_rightDist" (formula "46"))
               (rule "andLeft" (formula "46"))
               (rule "commute_or" (formula "46"))
               (rule "cnf_rightDist" (formula "48"))
               (rule "andLeft" (formula "48"))
               (rule "commute_or" (formula "48"))
               (rule "cnf_rightDist" (formula "50"))
               (rule "andLeft" (formula "50"))
               (rule "commute_or" (formula "50"))
               (rule "cnf_rightDist" (formula "39"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "commute_or" (formula "39"))
               (rule "cnf_rightDist" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "commute_or" (formula "39"))
               (rule "cnf_rightDist" (formula "42"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "commute_or" (formula "42"))
               (rule "cnf_rightDist" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "commute_or" (formula "42"))
               (rule "cnf_rightDist" (formula "45"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "commute_or" (formula "45"))
               (rule "cnf_rightDist" (formula "44"))
               (rule "andLeft" (formula "44"))
               (rule "commute_or" (formula "45"))
               (rule "cnf_rightDist" (formula "48"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "commute_or" (formula "48"))
               (rule "cnf_rightDist" (formula "47"))
               (rule "andLeft" (formula "47"))
               (rule "commute_or" (formula "48"))
               (rule "cnf_rightDist" (formula "51"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "commute_or" (formula "51"))
               (rule "cnf_rightDist" (formula "50"))
               (rule "andLeft" (formula "50"))
               (rule "commute_or" (formula "51"))
               (rule "cnf_rightDist" (formula "54"))
                (builtin "One Step Simplification" (formula "54"))
               (rule "commute_or" (formula "54"))
               (rule "cnf_rightDist" (formula "53"))
               (rule "andLeft" (formula "53"))
               (rule "commute_or" (formula "54"))
               (rule "cnf_rightDist" (formula "57"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "commute_or" (formula "57"))
               (rule "cnf_rightDist" (formula "56"))
               (rule "andLeft" (formula "56"))
               (rule "commute_or" (formula "57"))
               (rule "emptyModality" (formula "133") (term "1"))
                (builtin "One Step Simplification" (formula "133"))
               (rule "notRight" (formula "133"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "eqSymm" (formula "2"))
               (rule "substringSubstring2" (formula "63") (term "0") (inst "newSym=newSym_0") (ifseqformula "22"))
               (rule "add_zero_left" (formula "63") (term "2,0,1,1"))
               (rule "qeq_literals" (formula "63") (term "0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")))
               (rule "qeq_literals" (formula "63") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "add_zero_right" (formula "63") (term "1,0,1,1"))
               (rule "polySimp_elimSub" (formula "63") (term "1,1,0"))
               (rule "mul_literals" (formula "63") (term "1,1,1,0"))
               (rule "add_zero_right" (formula "63") (term "1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
               (rule "applyEqRigid" (formula "63") (term "0,0,0,0") (ifseqformula "20"))
               (rule "commute_and" (formula "63") (term "0,0"))
               (rule "commute_and_2" (formula "63") (term "0"))
               (rule "seqGetAlphaCast" (formula "34") (term "0,0"))
               (rule "castDel" (formula "34") (term "0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "seqGetAlphaCast" (formula "37") (term "0,0"))
               (rule "castDel" (formula "37") (term "0"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "seqGetAlphaCast" (formula "40") (term "0,0"))
               (rule "castDel" (formula "40") (term "0"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "true_left" (formula "40"))
               (rule "seqGetAlphaCast" (formula "43") (term "0,0"))
               (rule "castDel" (formula "43") (term "0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "true_left" (formula "43"))
               (rule "seqGetAlphaCast" (formula "46") (term "0,0"))
               (rule "castDel" (formula "46") (term "0"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "seqGetAlphaCast" (formula "49") (term "0,0"))
               (rule "castDel" (formula "49") (term "0"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "true_left" (formula "49"))
               (rule "seqGetAlphaCast" (formula "52") (term "0,0"))
               (rule "castDel" (formula "52") (term "0"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "true_left" (formula "52"))
               (rule "seqGetAlphaCast" (formula "55") (term "0,0"))
               (rule "castDel" (formula "55") (term "0"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "true_left" (formula "55"))
               (rule "seqGetAlphaCast" (formula "58") (term "0,0"))
               (rule "castDel" (formula "58") (term "0"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "true_left" (formula "58"))
               (rule "seqGetAlphaCast" (formula "61") (term "0,0"))
               (rule "castDel" (formula "61") (term "0"))
                (builtin "One Step Simplification" (formula "61"))
               (rule "true_left" (formula "61"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "114") (ifseqformula "106"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "114") (ifseqformula "106"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "114") (ifseqformula "110"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "114") (ifseqformula "114"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "114") (ifseqformula "110"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "114") (ifseqformula "114"))
               (rule "true_left" (formula "114"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "110") (ifseqformula "106"))
               (rule "true_left" (formula "110"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "110") (ifseqformula "110"))
               (rule "true_left" (formula "110"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "110") (ifseqformula "114"))
               (rule "true_left" (formula "110"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "110") (ifseqformula "106"))
               (rule "true_left" (formula "110"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "106") (ifseqformula "106"))
               (rule "true_left" (formula "106"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "2") (ifseqformula "68"))
               (rule "replace_known_right" (formula "106") (term "0") (ifseqformula "154"))
                (builtin "One Step Simplification" (formula "106"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "111") (ifseqformula "107"))
               (rule "true_left" (formula "111"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "111") (ifseqformula "115"))
               (rule "true_left" (formula "111"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "107") (ifseqformula "111"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "115") (ifseqformula "107"))
               (rule "true_left" (formula "115"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "115") (ifseqformula "111"))
               (rule "true_left" (formula "115"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "115") (ifseqformula "115"))
               (rule "true_left" (formula "115"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_6" (formula "107") (ifseqformula "115"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "111") (ifseqformula "111"))
               (rule "true_left" (formula "111"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "111") (ifseqformula "111"))
               (rule "true_left" (formula "111"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "111") (ifseqformula "115"))
               (rule "true_left" (formula "111"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "107") (ifseqformula "107"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "107") (ifseqformula "111"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "107") (ifseqformula "115"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "107") (ifseqformula "111"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "107") (ifseqformula "107"))
               (rule "true_left" (formula "107"))
               (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "107") (ifseqformula "115"))
               (rule "true_left" (formula "107"))
                (builtin "One Step Simplification" (formula "160"))
                (builtin "One Step Simplification" (formula "67"))
               (rule "notLeft" (formula "67"))
               (rule "methodCallEmpty" (formula "160") (term "1"))
               (rule "tryEmpty" (formula "160") (term "1"))
               (rule "emptyModality" (formula "160") (term "1"))
                (builtin "One Step Simplification" (formula "160"))
               (rule "impRight" (formula "162"))
               (rule "notRight" (formula "161"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "4"))
               (rule "eqSymm" (formula "165"))
               (rule "eqSymm" (formula "2"))
               (rule "polySimp_homoEq" (formula "35"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "dismissNonSelectedFieldEQ" (formula "165") (term "0") (ifseqformula "7"))
               (rule "dismissNonSelectedFieldEQ" (formula "165") (term "1,0") (ifseqformula "7"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
               (rule "add_literals" (formula "41") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "46") (term "1"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "46") (term "0,1"))
               (rule "add_literals" (formula "46") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "43") (term "1"))
               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "43") (term "0,1"))
               (rule "add_literals" (formula "43") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "49") (term "1"))
               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "49") (term "0,1"))
               (rule "add_literals" (formula "49") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "27"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1"))
               (rule "add_zero_right" (formula "38") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "59") (term "0,0,1"))
               (rule "add_literals" (formula "59") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0"))
               (rule "add_zero_right" (formula "25") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "64") (term "1"))
               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "64") (term "0,1"))
               (rule "add_literals" (formula "64") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "55") (term "1"))
               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "55") (term "0,1"))
               (rule "add_literals" (formula "55") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "65") (term "0,0,1"))
               (rule "add_literals" (formula "65") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
               (rule "add_literals" (formula "53") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "62") (term "0,0,1"))
               (rule "add_literals" (formula "62") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "37") (term "1"))
               (rule "add_zero_right" (formula "37") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "52") (term "1"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "52") (term "0,1"))
               (rule "add_literals" (formula "52") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1"))
               (rule "add_literals" (formula "58") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "94"))
               (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "78"))
               (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "61") (term "1"))
               (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "40") (term "1"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "84"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
               (rule "add_literals" (formula "50") (term "0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "102"))
               (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "94") (term "0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "27") (term "0"))
               (rule "add_literals" (formula "27") (term "1,1,0"))
               (rule "times_zero_1" (formula "27") (term "1,0"))
               (rule "add_zero_right" (formula "27") (term "0"))
               (rule "leq_literals" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "polySimp_addComm1" (formula "77") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
               (rule "add_literals" (formula "43") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "60") (term "0,1"))
               (rule "add_literals" (formula "60") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "55") (term "0,0,1"))
               (rule "add_literals" (formula "55") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "39") (term "0,1"))
               (rule "add_literals" (formula "39") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "83") (term "0"))
               (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
               (rule "add_literals" (formula "46") (term "0,0,0,1"))
               (rule "polySimp_addComm1" (formula "101") (term "0"))
               (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
               (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "66") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "66") (term "0,1,0,0"))
               (rule "add_literals" (formula "66") (term "1,0,1,0,0"))
               (rule "times_zero_1" (formula "66") (term "0,1,0,0"))
               (rule "qeq_literals" (formula "66") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "66"))
               (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "66") (term "0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,1,0"))
               (rule "add_literals" (formula "66") (term "1,1,0,1,0"))
               (rule "times_zero_1" (formula "66") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "66") (term "0,1,0"))
               (rule "leq_literals" (formula "66") (term "1,0"))
                (builtin "One Step Simplification" (formula "66"))
               (rule "applyEq" (formula "66") (term "0,0,1") (ifseqformula "67"))
               (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "151") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "83") (term "1,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "80") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "79") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "113") (term "1,2") (ifseqformula "5"))
               (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "100") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "161") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "96") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "5"))
               (rule "applyEq" (formula "97") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "97") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "79") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "5"))
               (rule "applyEq" (formula "109") (term "1,2") (ifseqformula "1"))
               (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "76") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "154") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "117") (term "4") (ifseqformula "116"))
               (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "77") (term "1,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "152") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "113") (term "4") (ifseqformula "112"))
               (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "113") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "109") (term "4") (ifseqformula "107"))
               (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "153") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "158") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "80") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "160") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "149") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "159") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "99") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "109") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "164") (term "0,1,1") (ifseqformula "3"))
               (rule "applyEq" (formula "108") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "141") (term "0") (ifseqformula "5"))
               (rule "applyEq" (formula "156") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "150") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "102") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "95") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "5"))
               (rule "applyEq" (formula "95") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "86") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "155") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "164") (term "0,1") (ifseqformula "3"))
               (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "162") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "157") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "163") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "5"))
               (rule "applyEq" (formula "117") (term "1,2") (ifseqformula "5"))
               (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "1"))
               (rule "jmod_axiom" (formula "69") (term "0"))
               (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
               (rule "jmod_axiom" (formula "118") (term "0"))
               (rule "polySimp_mulLiterals" (formula "118") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "mul_literals" (formula "23") (term "1"))
               (rule "polySimp_sepPosMonomial" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1"))
               (rule "polySimp_rightDist" (formula "34") (term "1"))
               (rule "mul_literals" (formula "34") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "polySimp_homoEq" (formula "34") (term "1"))
               (rule "times_zero_2" (formula "34") (term "1,0,1"))
               (rule "add_zero_right" (formula "34") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "40") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
               (rule "polySimp_elimOne" (formula "45") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
               (rule "polySimp_elimOne" (formula "42") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "1"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
               (rule "polySimp_elimOne" (formula "48") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "37") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "58") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "1"))
               (rule "polySimp_mulLiterals" (formula "63") (term "0,1"))
               (rule "polySimp_elimOne" (formula "63") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "1"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
               (rule "polySimp_elimOne" (formula "54") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "64") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "52") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "61") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "61") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
               (rule "polySimp_elimOne" (formula "36") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1"))
               (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
               (rule "polySimp_elimOne" (formula "51") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "1"))
               (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
               (rule "polySimp_elimOne" (formula "57") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "49") (term "0,0,1"))
               (rule "polySimp_sepNegMonomial" (formula "69"))
               (rule "polySimp_mulLiterals" (formula "69") (term "0"))
               (rule "polySimp_sepNegMonomial" (formula "118"))
               (rule "polySimp_mulLiterals" (formula "118") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "43") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "1"))
               (rule "polySimp_mulLiterals" (formula "60") (term "0,1"))
               (rule "polySimp_elimOne" (formula "60") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "55") (term "0,0,1"))
               (rule "polySimp_sepPosMonomial" (formula "34") (term "1"))
               (rule "mul_literals" (formula "34") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
               (rule "polySimp_elimOne" (formula "39") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "46") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "90") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "83"))
               (rule "polySimp_mulLiterals" (formula "83") (term "0"))
               (rule "polySimp_elimOne" (formula "83") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "101"))
               (rule "polySimp_mulLiterals" (formula "101") (term "0"))
               (rule "polySimp_elimOne" (formula "101") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "97") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "93"))
               (rule "polySimp_mulLiterals" (formula "93") (term "0"))
               (rule "polySimp_elimOne" (formula "93") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "77"))
               (rule "polySimp_mulLiterals" (formula "77") (term "0"))
               (rule "polySimp_elimOne" (formula "77") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
               (rule "polySimp_elimOne" (formula "34") (term "0,0"))
               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "65"))
               (rule "leq_literals" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "pullOutSelect" (formula "163") (term "0") (inst "selectSK=java_util_Collection_seq_0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "140")))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "139")))
               (rule "eqSymm" (formula "164"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "164") (inst "iv=iv"))
               (rule "inEqSimp_ltToLeq" (formula "164") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "164") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "164") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "164") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "164") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "164") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "164") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "164") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "164") (term "1,1,1,0,0,1"))
               (rule "newSym_eq" (formula "69") (inst "l=l_0") (inst "newSymDef=mul(result_100, Z(0(#)))"))
               (rule "times_zero_1" (formula "69") (term "1,1"))
               (rule "add_zero_right" (formula "69") (term "1"))
               (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "69"))
               (rule "eqSymm" (formula "70"))
               (rule "applyEq" (formula "111") (term "0") (ifseqformula "70"))
               (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "70"))
               (rule "applyEq" (formula "114") (term "3") (ifseqformula "70"))
               (rule "applyEq" (formula "112") (term "0") (ifseqformula "70"))
               (rule "elimGcdGeq_antec" (formula "112") (inst "elimGcdRightDiv=Z(neglit(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#))))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "112") (term "0,0"))
                (builtin "One Step Simplification" (formula "112"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,0,0"))
               (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "112") (term "0,0,0,0"))
               (rule "add_literals" (formula "112") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "112") (term "0,0"))
               (rule "add_literals" (formula "112") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "112") (term "1,0,0"))
               (rule "add_zero_right" (formula "112") (term "0,0"))
               (rule "leq_literals" (formula "112") (term "0"))
                (builtin "One Step Simplification" (formula "112"))
               (rule "elimGcdLeq_antec" (formula "111") (inst "elimGcdRightDiv=Z(5(7(7(4(5(8(6(3(0(2(7(3(3(2(2(9(#)))))))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(0(0(0(1(#)))))"))
               (rule "leq_literals" (formula "111") (term "0,0"))
                (builtin "One Step Simplification" (formula "111"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,0,0"))
               (rule "neg_literal" (formula "111") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "111") (term "0,0,0,0"))
               (rule "add_literals" (formula "111") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "111") (term "0,0"))
               (rule "add_literals" (formula "111") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "111") (term "1,0,0"))
               (rule "add_zero_right" (formula "111") (term "0,0"))
               (rule "qeq_literals" (formula "111") (term "0"))
                (builtin "One Step Simplification" (formula "111"))
               (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")) (ifInst ""  (formula "142")))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "141")) (ifInst ""  (formula "141")))
               (rule "applyEqReverse" (formula "166") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "166") (term "0,1,1,0,1") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "166") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "166") (term "1,0,1,1,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "164") (term "0"))
               (rule "eqSymm" (formula "164") (term "1,0,1"))
               (rule "applyEqRigid" (formula "164") (term "0,0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "164"))
               (rule "allRight" (formula "164") (inst "sk=iv_0"))
               (rule "impRight" (formula "164"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "applyEqRigid" (formula "166") (term "0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "166"))
               (rule "closeTrue" (formula "166"))
            )
            (branch "Exceptional Post (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "43"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "43"))
               (rule "notLeft" (formula "43"))
               (rule "close" (formula "46") (ifseqformula "45"))
            )
            (branch "Pre (getCurrentLineNumber)"
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "19")))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "62"))
               (rule "closeTrue" (formula "62"))
            )
            (branch "Null reference (c_3 = null)"
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "56")))
               (rule "closeTrue" (formula "62"))
            )
         )
         (branch "if x_3 false"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "methodCallEmpty" (formula "60") (term "1"))
            (rule "tryEmpty" (formula "60") (term "1"))
            (rule "emptyModality" (formula "60") (term "1"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "notRight" (formula "60"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "seqGetAlphaCast" (formula "34") (term "0"))
            (rule "castedGetAny" (formula "34") (term "0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "seqGetAlphaCast" (formula "28") (term "0"))
            (rule "castedGetAny" (formula "28") (term "0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "lenNonNegative" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "20"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "21"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "22"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "23"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "24"))
            (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "28"))
            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "1,0,1") (ifseqformula "24"))
            (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "24"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "25"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "26"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "27"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "28"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "29"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "30"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "31"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "32"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "33"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "34"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "0") (ifseqformula "35"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1") (ifseqformula "36"))
            (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "68")))
            (rule "true_left" (formula "40"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "62") (ifseqformula "62"))
            (rule "true_left" (formula "62"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "62") (ifseqformula "58"))
            (rule "true_left" (formula "62"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "62") (ifseqformula "58"))
            (rule "true_left" (formula "62"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "62") (ifseqformula "62"))
            (rule "true_left" (formula "62"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "58") (ifseqformula "58"))
            (rule "true_left" (formula "58"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "21"))
            (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "99"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405_5" (formula "59") (ifseqformula "63"))
            (rule "true_left" (formula "59"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "59") (ifseqformula "63"))
            (rule "true_left" (formula "59"))
            (rule "Use_information_flow_contract_for_getCurrentLineNumber_1615567405" (formula "59") (ifseqformula "59"))
            (rule "true_left" (formula "59"))
             (builtin "One Step Simplification" (formula "105"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "methodCallEmpty" (formula "105") (term "1"))
            (rule "tryEmpty" (formula "105") (term "1"))
            (rule "emptyModality" (formula "105") (term "1"))
             (builtin "One Step Simplification" (formula "105"))
            (rule "impRight" (formula "107"))
            (rule "notRight" (formula "106"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "110"))
            (rule "eqSymm" (formula "4"))
            (rule "eqSymm" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "31") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "55"))
            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "55") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "47") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "37"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "37") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
            (rule "applyEq" (formula "37") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "31") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "106") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "110") (term "0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "102") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "34") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "110") (term "0,1,1") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "110") (term "0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "62") (term "4") (ifseqformula "60"))
            (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "49") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "47") (term "1,1,0,0,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "28") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "66") (term "1,2") (ifseqformula "21"))
            (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "82") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "95") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "81") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "101") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "98") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "100") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "103") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "51") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "66") (term "4") (ifseqformula "65"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "110") (term "0,0") (ifseqformula "23"))
            (rule "close" (formula "110") (ifseqformula "4"))
         )
      )
      (branch "Exceptional Post (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "35"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "notLeft" (formula "35"))
         (rule "close" (formula "38") (ifseqformula "37"))
      )
      (branch "Pre (getCurrentLineNumber)"
          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "17")))
         (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "53"))
         (rule "closeTrue" (formula "53"))
      )
      (branch "Null reference (c_2 = null)"
          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "47")))
         (rule "closeTrue" (formula "53"))
      )
   )
)
(branch "Exceptional Post (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "38"))
   (rule "insert_constant_string_value" (formula "21") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "insert_constant_string_value" (formula "20") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "insert_constant_string_value" (formula "22") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "castDel" (formula "21") (term "0,0"))
   (rule "castDel" (formula "20") (term "0,0"))
   (rule "castDel" (formula "22") (term "0,0"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "16"))
   (rule "close" (formula "19") (ifseqformula "18"))
)
(branch "Pre (getCurrentLineNumber)"
    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "36"))
   (rule "closeTrue" (formula "36"))
)
(branch "Null reference (c_1 = null)"
    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "30")))
   (rule "closeTrue" (formula "36"))
)
)
}
