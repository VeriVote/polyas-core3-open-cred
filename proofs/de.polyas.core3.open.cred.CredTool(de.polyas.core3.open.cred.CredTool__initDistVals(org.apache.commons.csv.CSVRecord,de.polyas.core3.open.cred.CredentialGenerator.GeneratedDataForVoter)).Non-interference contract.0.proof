\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Nov 14 18:02:51 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Nov 14 18:02:51 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "233175")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "10") (term "1,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,0"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "9") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "boxToDiamond" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "6") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "6") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "6") (term "1,0,0,1"))
(rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "6") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "6") (term "0,1,1,0,0,1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "eqSymm" (formula "6"))
(rule "castedGetAny" (formula "8") (term "0,0,1,0"))
(rule "castedGetAny" (formula "7") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "exLeft" (formula "11") (inst "sk=i_2_0"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "castedGetAny" (formula "15") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0"))
(rule "castedGetAny" (formula "13") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "9"))
(rule "commute_and" (formula "19") (term "0,0"))
(rule "commute_and" (formula "8") (term "1,0,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "19") (term "0,0,1,0"))
(rule "commute_and" (formula "7") (term "0,0,0"))
(rule "commute_and" (formula "7") (term "1,0,0"))
(rule "methodBodyExpand" (formula "42") (term "1") (newnames "heapBefore_initDistVals,savedHeapBefore_initDistVals"))
 (builtin "One Step Simplification" (formula "42"))
(rule "activeUseStaticFieldWriteAccess" (formula "42") (term "1") (inst "#v0=a"))
(rule "variableDeclarationAssign" (formula "42") (term "1"))
(rule "variableDeclaration" (formula "42") (term "1") (newnames "a"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "14") (term "0,0"))
(rule "commute_and" (formula "10") (term "0,0"))
(rule "commute_and_2" (formula "19") (term "0,1,0"))
(rule "shift_paren_and" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "8") (term "0,0,0"))
(rule "shift_paren_and" (formula "7") (term "0,0"))
(rule "commute_and_2" (formula "7") (term "0,0,0"))
 (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_ArrayList,self_806,exc_1080,heapAfter_ArrayList,anon_heap_ArrayList") (contract "java.util.ArrayList[java.util.ArrayList::ArrayList()].JML normal_behavior operation contract.0"))
(branch "Post (ArrayList)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "23"))
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "46"))
   (rule "true_left" (formula "24"))
   (rule "andLeft" (formula "22"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "28"))
   (rule "notLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "28"))
   (rule "notLeft" (formula "24"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "28"))
   (rule "notLeft" (formula "27"))
   (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "assignment" (formula "53") (term "1"))
    (builtin "One Step Simplification" (formula "53"))
   (rule "assignment_write_static_attribute" (formula "53") (term "1"))
    (builtin "One Step Simplification" (formula "53"))
   (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
   (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")))
   (rule "hideAuxiliaryEq" (formula "26"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "26") (term "0,0"))
   (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "28"))
   (rule "true_left" (formula "28"))
   (rule "lenNonNegative" (formula "6") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "lenNonNegative" (formula "7") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "methodCallUnfoldArguments" (formula "54") (term "1"))
   (rule "variableDeclarationAssign" (formula "54") (term "1"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "var"))
   (rule "activeUseStaticFieldReadAccess" (formula "54") (term "1"))
   (rule "assignment_read_static_attribute" (formula "54") (term "1"))
    (builtin "One Step Simplification" (formula "54"))
   (rule "pullOutSelect" (formula "54") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
   (rule "simplifySelectOfStore" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "54") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "54") (term "1"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_this" (formula "54") (term "1"))
    (builtin "One Step Simplification" (formula "54"))
   (rule "dismissNonSelectedField" (formula "54") (term "0,1,0"))
   (rule "pullOutSelect" (formula "54") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "3")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_6" (formula "54") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "54") (term "1"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "54") (term "1"))
    (builtin "One Step Simplification" (formula "54"))
    (builtin "Use Operation Contract" (formula "54") (newnames "heapBefore_addInputCols,exc_1081,heapAfter_addInputCols,anon_heap_addInputCols") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::addInputCols(java.util.ArrayList,java.util.ArrayList,org.apache.commons.csv.CSVRecord)].JML normal_behavior operation contract.0"))
   (branch "Post (addInputCols)"
       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "36")) (ifInst ""  (formula "50")) (ifInst ""  (formula "59")) (ifInst ""  (formula "36")) (ifInst ""  (formula "50")) (ifInst ""  (formula "59")))
       (builtin "One Step Simplification" (formula "33"))
       (builtin "One Step Simplification" (formula "32"))
       (builtin "One Step Simplification" (formula "58"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "32"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "39"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "40"))
      (rule "notLeft" (formula "39"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "41"))
      (rule "eqSymm" (formula "38") (term "1,0,1,0"))
      (rule "eqSymm" (formula "47"))
      (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,0"))
      (rule "dismissNonSelectedField" (formula "38") (term "0,1,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "46") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (ifseqformula "24"))
      (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "true_left" (formula "46"))
      (rule "dismissNonSelectedField" (formula "39") (term "0,1,1,0,0"))
      (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "45") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (ifseqformula "24"))
      (rule "dismissNonSelectedField" (formula "44") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (ifseqformula "24"))
      (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "47"))
       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "26")))
      (rule "true_left" (formula "44"))
      (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,1,0,1,0"))
      (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,1,0,1,0"))
      (rule "castedGetAny" (formula "39") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "38") (term "0,1,0,1,0"))
      (rule "castedGetAny" (formula "38") (term "1,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
      (rule "blockEmpty" (formula "69") (term "1"))
      (rule "pullOutSelect" (formula "38") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "62")))
      (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "39") (term "0,0,1,0,1,0"))
      (rule "ifthenelse_negated" (formula "38") (term "0"))
      (rule "pullOutSelect" (formula "39") (term "0,1,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "72")) (ifInst ""  (formula "4")))
      (rule "replaceKnownSelect_taclet00_9" (formula "40") (term "0,1,1,0,1,0"))
      (rule "hideAuxiliaryEq" (formula "39"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "39") (term "0,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "39") (term "0,1,1,0,0,1,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "34") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "34") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "34") (term "1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1,0"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "eqSymm" (formula "34"))
      (rule "castedGetAny" (formula "36") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "35") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0"))
      (rule "pullOutSelect" (formula "36") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "74")))
      (rule "replaceKnownSelect_taclet00_11" (formula "34") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_11" (formula "37") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "34"))
      (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "36") (term "0,0,0,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "74")) (ifInst ""  (formula "4")))
      (rule "hideAuxiliaryEq" (formula "36"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "34") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "36") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "36") (term "0,1,1,0,0,0"))
      (rule "pullOutSelect" (formula "35") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "74")))
      (rule "replaceKnownSelect_taclet00_14" (formula "34") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_14" (formula "36") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "34"))
      (rule "dismissNonSelectedField" (formula "35") (term "0,0,1,0,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "35") (term "0,0,1,0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "elementOfSingleton" (formula "35") (term "0,0"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "simplifySelectOfStore" (formula "35"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "replaceKnownSelect_taclet00_9" (formula "35") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_10" (formula "35") (term "0"))
      (rule "hideAuxiliaryEq" (formula "35"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "34") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "34") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "34") (term "0,1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "42") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet00_15" (formula "42") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "42") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_15" (formula "42") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_15" (formula "42") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "42") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "42") (term "0,0,0,0,1,0,1,0"))
      (rule "expand_inInt" (formula "42") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "42") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,1"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "42"))
      (rule "eqSymm" (formula "42"))
      (rule "dismissNonSelectedField" (formula "44") (term "0,1,1,0,0,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "44") (term "0,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "44") (term "0,1,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "44") (term "0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "44") (term "0,0,0,0,1,0"))
      (rule "castedGetAny" (formula "43") (term "0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "42") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "42") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "42") (term "0,0"))
      (rule "castedGetAny" (formula "43") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "37"))
      (rule "true_left" (formula "37"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "36"))
      (rule "true_left" (formula "36"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "41"))
      (rule "true_left" (formula "41"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "40"))
      (rule "true_left" (formula "40"))
      (rule "commute_or" (formula "41"))
      (rule "commute_and" (formula "38") (term "0,0"))
      (rule "commute_and" (formula "39") (term "0,0"))
      (rule "commute_and" (formula "35") (term "1,0,0"))
      (rule "commute_and" (formula "34") (term "1,0,0"))
      (rule "commute_and" (formula "38") (term "0,0,1,0"))
      (rule "commute_and" (formula "35") (term "0,0,0"))
      (rule "commute_and" (formula "34") (term "0,0,0"))
      (rule "lenNonNegative" (formula "19") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "lenNonNegative" (formula "14") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "seqGetAlphaCast" (formula "22") (term "0"))
      (rule "castedGetAny" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "seqGetAlphaCast" (formula "16") (term "0"))
      (rule "castedGetAny" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "commute_and_2" (formula "40") (term "0,1,0"))
      (rule "lenNonNegative" (formula "23") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23"))
      (rule "shift_paren_and" (formula "38") (term "0,0"))
      (rule "commute_and_2" (formula "38") (term "0,0,0"))
      (rule "shift_paren_and" (formula "37") (term "0,0"))
      (rule "commute_and_2" (formula "37") (term "0,0,0"))
      (rule "methodCallUnfoldTarget" (formula "67") (term "1") (inst "#v0=a"))
      (rule "variableDeclaration" (formula "67") (term "1") (newnames "a_1"))
      (rule "activeUseStaticFieldReadAccess" (formula "67") (term "1"))
      (rule "assignment_read_static_attribute" (formula "67") (term "1"))
       (builtin "One Step Simplification" (formula "67"))
      (rule "pullOutSelect" (formula "67") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_18" (formula "67") (term "0,1,0"))
      (rule "lenNonNegative" (formula "31") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "31"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1") (ifseqformula "6"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "59"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "hideAuxiliaryEq" (formula "48"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_19" (formula "49") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_19" (formula "49") (term "0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_19" (formula "48") (term "0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_19" (formula "48") (term "0,0,1,0,0,1,0"))
      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "true_left" (formula "49"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "10"))
      (rule "applyEqRigid" (formula "21") (term "1,0,1") (ifseqformula "22"))
      (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallUnfoldArguments" (formula "76") (term "1"))
      (rule "variableDeclarationAssign" (formula "76") (term "1"))
      (rule "variableDeclaration" (formula "76") (term "1") (newnames "var_3"))
      (rule "assignment" (formula "76") (term "1"))
       (builtin "One Step Simplification" (formula "76"))
      (rule "variableDeclarationAssign" (formula "76") (term "1"))
      (rule "variableDeclaration" (formula "76") (term "1") (newnames "var_4"))
      (rule "assignment" (formula "76") (term "1"))
       (builtin "One Step Simplification" (formula "76"))
      (rule "variableDeclarationAssign" (formula "76") (term "1"))
      (rule "variableDeclaration" (formula "76") (term "1") (newnames "var_5"))
      (rule "assignment_read_attribute" (formula "76") (term "1"))
      (branch "Normal Execution (_dataForVoter_35_A != null)"
          (builtin "One Step Simplification" (formula "77"))
          (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "79")))
         (rule "false_right" (formula "76"))
         (rule "pullOutSelect" (formula "76") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "17")))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_22" (formula "76") (term "0,1,0"))
          (builtin "Use Operation Contract" (formula "76") (newnames "heapBefore_add,exc_1082,heapAfter_add,anon_heap_add") (contract "java.util.ArrayList[java.util.List::add(int,java.lang.Object)].JML normal_behavior operation contract.0"))
         (branch "Post (add)"
             (builtin "One Step Simplification" (formula "53"))
             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "77")) (ifInst ""  (formula "77")))
             (builtin "One Step Simplification" (formula "80"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1") (ifseqformula "48"))
            (rule "expand_inInt" (formula "55") (term "1,0,1"))
            (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,1"))
            (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,1"))
            (rule "leq_literals" (formula "55") (term "0,1,0,1"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "leq_literals" (formula "55") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "andLeft" (formula "53"))
            (rule "andLeft" (formula "56"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "eqSymm" (formula "55"))
            (rule "dismissNonSelectedField" (formula "60") (term "0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0") (ifseqformula "39"))
            (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "true_left" (formula "60"))
            (rule "pullOutSelect" (formula "55") (term "1,0") (inst "selectSK=java_util_Collection_seq_2"))
            (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "63")))
            (rule "eqSymm" (formula "56"))
            (rule "dismissNonSelectedField" (formula "55") (term "0,0,1,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0,0") (ifseqformula "39"))
            (rule "replace_known_left" (formula "55") (term "1,0,1,0,0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "62")))
            (rule "dismissNonSelectedField" (formula "55") (term "2,0"))
            (rule "replaceKnownSelect_taclet0_1" (formula "55") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "55") (term "2,0"))
            (rule "elementOfSingleton" (formula "55") (term "0,0"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "hideAuxiliaryEq" (formula "55"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_25" (formula "55") (term "1,1"))
            (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=java_util_Collection_seq_3"))
            (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "63")))
            (rule "replaceKnownSelect_taclet0000_24" (formula "55") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_25" (formula "55") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0,0") (ifseqformula "48"))
            (rule "eqSymm" (formula "56"))
            (rule "hideAuxiliaryEq" (formula "56"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "55") (term "1"))
            (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "eqSymm" (formula "55"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "56"))
            (rule "true_left" (formula "56"))
            (rule "methodCallEmpty" (formula "82") (term "1"))
            (rule "tryEmpty" (formula "82") (term "1"))
            (rule "emptyModality" (formula "82") (term "1"))
             (builtin "One Step Simplification" (formula "82"))
            (rule "notRight" (formula "82"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "20"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "64") (inst "iv=iv"))
            (rule "andLeft" (formula "64"))
            (rule "lenOfSeqConcat" (formula "65") (term "1,1,0,0"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "lenOfSeqConcat" (formula "64") (term "0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "lenOfSeqConcatEQ" (formula "64") (term "1") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "true_left" (formula "64"))
            (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
            (rule "getOfSeqConcat" (formula "64") (term "0,1,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "polySimp_elimSub" (formula "64") (term "1,2,0,1,0"))
            (rule "mul_literals" (formula "64") (term "1,1,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "64") (term "1,2,0,1,0"))
            (rule "getOfSeqSingleton" (formula "64") (term "1,0,1,0"))
            (rule "castDel" (formula "64") (term "2,1,0,1,0"))
            (rule "castDel" (formula "64") (term "1,1,0,1,0"))
            (rule "getOfSeqConcatEQ" (formula "64") (term "1,1,0") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "polySimp_elimSub" (formula "64") (term "1,2,1,1,0"))
            (rule "mul_literals" (formula "64") (term "1,1,2,1,1,0"))
            (rule "polySimp_addComm0" (formula "64") (term "1,2,1,1,0"))
            (rule "getOfSeqSingleton" (formula "64") (term "1,1,1,0"))
            (rule "castDel" (formula "64") (term "2,1,1,1,0"))
            (rule "castDel" (formula "64") (term "1,1,1,1,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "true_left" (formula "64"))
            (rule "Use_information_flow_contract_for_ArrayList_1695163498" (formula "55") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "true_left" (formula "55"))
            (rule "Use_information_flow_contract_for_addInputCols_1102371444" (formula "59") (inst "i#46=i#46") (inst "i#44=i#44") (inst "j#42=j#42") (inst "i#43=i#43") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "70")) (ifInst ""  (formula "84")) (ifInst ""  (formula "92")) (ifInst ""  (formula "70")) (ifInst ""  (formula "84")) (ifInst ""  (formula "92")))
            (rule "true_left" (formula "59"))
            (rule "Use_information_flow_contract_for_add_502902936" (formula "65") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "89")) (ifInst ""  (formula "89")))
            (rule "true_left" (formula "65"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "49"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "52"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "56"))
            (rule "notLeft" (formula "47"))
            (rule "notLeft" (formula "55"))
            (rule "notLeft" (formula "55"))
            (rule "eqSymm" (formula "55") (term "1,0,0,1"))
            (rule "eqSymm" (formula "55") (term "0,0,0,1"))
            (rule "eqSymm" (formula "54") (term "1,0,1,0"))
            (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "castedGetAny" (formula "54") (term "1,1,0,1,0"))
            (rule "castedGetAny" (formula "54") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
            (rule "assignment" (formula "55") (term "1"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "boxToDiamond" (formula "55") (term "1"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "notLeft" (formula "55"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "51") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "51") (term "1,0,0,1"))
            (rule "expand_inInt" (formula "51") (term "1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "51") (term "1,0,1,0,0,1"))
            (rule "replace_int_MIN" (formula "51") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "51") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "51") (term "0,1,1,0,0,1,0"))
            (rule "andLeft" (formula "51"))
            (rule "andLeft" (formula "51"))
            (rule "eqSymm" (formula "51"))
            (rule "castedGetAny" (formula "53") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "52") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "52") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
            (rule "applyEq" (formula "53") (term "1,1,0,0,0") (ifseqformula "51"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "56"))
            (rule "notLeft" (formula "55"))
            (rule "notLeft" (formula "54"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "54") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "56"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "56"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "56"))
            (rule "notLeft" (formula "55"))
            (rule "andLeft" (formula "54"))
            (rule "notLeft" (formula "54"))
            (rule "notLeft" (formula "54"))
            (rule "exLeft" (formula "59") (inst "sk=i_1"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "59"))
            (rule "exLeft" (formula "56") (inst "sk=i_2_1"))
            (rule "andLeft" (formula "56"))
            (rule "andLeft" (formula "56"))
            (rule "castedGetAny" (formula "60") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "59") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "55") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "63") (term "0"))
            (rule "castedGetAny" (formula "58") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "61"))
            (rule "inEqSimp_commuteLeq" (formula "56"))
            (rule "applyEqRigid" (formula "88") (term "0") (ifseqformula "54"))
            (rule "commute_and" (formula "64") (term "0,0"))
            (rule "commute_and" (formula "64") (term "0,0,1,0"))
            (rule "commute_and" (formula "53") (term "1,0,0"))
            (rule "commute_and" (formula "52") (term "1,0,0"))
            (rule "commute_and" (formula "52") (term "0,0,0"))
            (rule "commute_and" (formula "53") (term "0,0,0"))
            (rule "methodBodyExpand" (formula "103") (term "1") (newnames "heapBefore_initDistVals_0,savedHeapBefore_initDistVals_0"))
             (builtin "One Step Simplification" (formula "103"))
            (rule "activeUseStaticFieldWriteAccess" (formula "103") (term "1") (inst "#v0=a"))
            (rule "variableDeclarationAssign" (formula "103") (term "1"))
            (rule "variableDeclaration" (formula "103") (term "1") (newnames "a_2"))
            (rule "commute_and" (formula "60") (term "0,0"))
            (rule "commute_and" (formula "59") (term "0,0"))
            (rule "commute_and" (formula "55") (term "0,0"))
            (rule "commute_and_2" (formula "64") (term "0,1,0"))
            (rule "shift_paren_and" (formula "52") (term "0,0"))
            (rule "commute_and_2" (formula "52") (term "0,0,0"))
            (rule "shift_paren_and" (formula "53") (term "0,0"))
            (rule "commute_and_2" (formula "53") (term "0,0,0"))
             (builtin "Use Operation Contract" (formula "103") (newnames "heapBefore_ArrayList_0,self_807,exc_1083,heapAfter_ArrayList_0,anon_heap_ArrayList_0") (contract "java.util.ArrayList[java.util.ArrayList::ArrayList()].JML normal_behavior operation contract.0"))
            (branch "Post (ArrayList)"
                (builtin "One Step Simplification" (formula "107"))
                (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "46")))
                (builtin "One Step Simplification" (formula "87"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "true_left" (formula "88"))
               (rule "andLeft" (formula "86"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,0,1,0") (ifseqformula "86"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "88"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "88"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "90"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "91"))
               (rule "notLeft" (formula "87"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "91"))
               (rule "notLeft" (formula "87"))
               (rule "notLeft" (formula "90"))
               (rule "replace_known_right" (formula "87") (term "0") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "87"))
               (rule "assignment" (formula "114") (term "1"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "assignment_write_static_attribute" (formula "114") (term "1"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "applyEq" (formula "93") (term "3") (ifseqformula "92"))
               (rule "pullOutSelect" (formula "89") (term "0,0") (inst "selectSK=java_util_Collection_seq_4"))
               (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "86"))
                (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "96")) (ifInst ""  (formula "95")))
               (rule "applyEqReverse" (formula "90") (term "0,0") (ifseqformula "89"))
               (rule "hideAuxiliaryEq" (formula "89"))
               (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "91"))
               (rule "true_left" (formula "91"))
               (rule "lenNonNegative" (formula "51") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "51"))
               (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
               (rule "lenNonNegative" (formula "52") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "52"))
               (rule "methodCallUnfoldArguments" (formula "114") (term "1"))
               (rule "variableDeclarationAssign" (formula "114") (term "1"))
               (rule "variableDeclaration" (formula "114") (term "1") (newnames "var_6"))
               (rule "activeUseStaticFieldReadAccess" (formula "114") (term "1"))
               (rule "assignment_read_static_attribute" (formula "114") (term "1"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "pullOutSelect" (formula "114") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_2"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "115") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclarationAssign" (formula "114") (term "1"))
               (rule "variableDeclaration" (formula "114") (term "1") (newnames "var_7"))
               (rule "assignment_read_attribute_this" (formula "114") (term "1"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "dismissNonSelectedField" (formula "114") (term "0,1,0"))
               (rule "pullOutSelect" (formula "114") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "48")))
               (rule "applyEqReverse" (formula "115") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclarationAssign" (formula "114") (term "1"))
               (rule "variableDeclaration" (formula "114") (term "1") (newnames "var_8"))
               (rule "assignment" (formula "114") (term "1"))
                (builtin "One Step Simplification" (formula "114"))
                (builtin "Use Operation Contract" (formula "114") (newnames "heapBefore_addInputCols_0,exc_1084,heapAfter_addInputCols_0,anon_heap_addInputCols_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::addInputCols(java.util.ArrayList,java.util.ArrayList,org.apache.commons.csv.CSVRecord)].JML normal_behavior operation contract.0"))
               (branch "Post (addInputCols)"
                   (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "99")) (ifInst ""  (formula "110")) (ifInst ""  (formula "120")) (ifInst ""  (formula "99")) (ifInst ""  (formula "110")) (ifInst ""  (formula "120")))
                   (builtin "One Step Simplification" (formula "118"))
                   (builtin "One Step Simplification" (formula "96"))
                   (builtin "One Step Simplification" (formula "95"))
                  (rule "andLeft" (formula "97"))
                  (rule "andLeft" (formula "95"))
                  (rule "andLeft" (formula "98"))
                  (rule "andLeft" (formula "100"))
                  (rule "andLeft" (formula "96"))
                  (rule "andLeft" (formula "100"))
                  (rule "andLeft" (formula "102"))
                  (rule "andLeft" (formula "97"))
                  (rule "andLeft" (formula "101"))
                  (rule "andLeft" (formula "103"))
                  (rule "andLeft" (formula "97"))
                  (rule "andLeft" (formula "103"))
                  (rule "notLeft" (formula "102"))
                  (rule "andLeft" (formula "98"))
                  (rule "andLeft" (formula "104"))
                  (rule "eqSymm" (formula "101") (term "1,0,1,0"))
                  (rule "eqSymm" (formula "110"))
                  (rule "dismissNonSelectedField" (formula "101") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "101") (term "0,1,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "109") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (ifseqformula "87"))
                  (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "109"))
                  (rule "true_left" (formula "109"))
                  (rule "dismissNonSelectedField" (formula "102") (term "0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "102") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "108") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (ifseqformula "87"))
                  (rule "dismissNonSelectedField" (formula "107") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "107") (ifseqformula "87"))
                  (rule "replace_known_left" (formula "107") (term "1") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "110")))
                  (rule "true_left" (formula "107"))
                  (rule "castedGetAny" (formula "101") (term "1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "101") (term "0,0,0,1,0,1,0"))
                  (rule "castedGetAny" (formula "102") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "101") (term "0,1,1,0,1,0"))
                  (rule "castedGetAny" (formula "101") (term "0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "102") (term "0,0,0"))
                  (rule "blockEmpty" (formula "129") (term "1"))
                  (rule "applyEq" (formula "100") (term "6") (ifseqformula "96"))
                  (rule "pullOutSelect" (formula "101") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_5"))
                  (rule "applyEq" (formula "103") (term "0,0,0,1,0") (ifseqformula "101"))
                  (rule "applyEq" (formula "103") (term "0,1,1,0,0") (ifseqformula "101"))
                  (rule "applyEq" (formula "102") (term "0,0,1,0,1,0") (ifseqformula "101"))
                  (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "122")))
                  (rule "ifthenelse_negated" (formula "101") (term "0"))
                  (rule "pullOutSelect" (formula "102") (term "0,1,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
                  (rule "applyEq" (formula "103") (term "0,1,1,0,1,0") (ifseqformula "102"))
                  (rule "simplifySelectOfAnonEQ" (formula "102") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "133")) (ifInst ""  (formula "49")))
                  (rule "applyEqReverse" (formula "103") (term "0,1,1,0,1,0") (ifseqformula "102"))
                  (rule "applyEqReverse" (formula "103") (term "0,1,1,0,0,1,0") (ifseqformula "102"))
                  (rule "hideAuxiliaryEq" (formula "102"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "97") (inst "i=i") (inst "i_0=i_0"))
                  (rule "expand_inInt" (formula "97") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "97") (term "1,0,0,1"))
                  (rule "replace_int_MIN" (formula "97") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "97") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "97") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "97") (term "1,0,1,0,0,1"))
                  (rule "andLeft" (formula "97"))
                  (rule "andLeft" (formula "97"))
                  (rule "eqSymm" (formula "97"))
                  (rule "castedGetAny" (formula "99") (term "0,0,1,0"))
                  (rule "castedGetAny" (formula "98") (term "0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "98") (term "1,1,0,0"))
                  (rule "pullOutSelect" (formula "99") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                  (rule "applyEq" (formula "97") (term "0,0") (ifseqformula "99"))
                  (rule "applyEq" (formula "100") (term "0,0,0,1,0") (ifseqformula "99"))
                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "95"))
                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "135")))
                  (rule "eqSymm" (formula "97"))
                  (rule "dismissNonSelectedField" (formula "99") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "99") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,0") (ifseqformula "87"))
                  (rule "replace_known_left" (formula "99") (term "0,0,1,0,0") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "99"))
                  (rule "elementOfSingleton" (formula "99") (term "0,0"))
                   (builtin "One Step Simplification" (formula "99"))
                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "135")) (ifInst ""  (formula "49")))
                  (rule "applyEqReverse" (formula "97") (term "0,1") (ifseqformula "99"))
                  (rule "applyEqReverse" (formula "100") (term "0,0,0,1,0") (ifseqformula "99"))
                  (rule "applyEqReverse" (formula "100") (term "0,1,1,0,0,0") (ifseqformula "99"))
                  (rule "hideAuxiliaryEq" (formula "99"))
                  (rule "applyEq" (formula "99") (term "1,1,0,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "97") (term "1") (ifseqformula "52"))
                  (rule "pullOutSelect" (formula "98") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_3"))
                  (rule "applyEq" (formula "99") (term "0,0,0,1,0") (ifseqformula "98"))
                  (rule "applyEq" (formula "97") (term "0,0") (ifseqformula "98"))
                  (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "95"))
                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "135")))
                  (rule "eqSymm" (formula "97"))
                  (rule "dismissNonSelectedField" (formula "98") (term "2,0"))
                  (rule "replaceKnownSelect_taclet000000_37" (formula "98") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_38" (formula "98") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "98") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,1,0,0") (ifseqformula "87"))
                  (rule "replace_known_left" (formula "98") (term "0,0,1,0,0") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "elementOfSingleton" (formula "98") (term "0,0"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "applyEqReverse" (formula "99") (term "0,0,0,1,0") (ifseqformula "98"))
                  (rule "applyEqReverse" (formula "97") (term "0,1") (ifseqformula "98"))
                   (builtin "One Step Simplification" (formula "97"))
                  (rule "true_left" (formula "97"))
                  (rule "applyEqReverse" (formula "98") (term "0,1,1,0,0,0") (ifseqformula "97"))
                  (rule "hideAuxiliaryEq" (formula "97"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "105") (inst "i=i") (inst "i_0=i_0"))
                  (rule "expand_inInt" (formula "105") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "105") (term "1,0,0,1"))
                  (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "105") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "105") (term "0,1,1,0,0,1"))
                  (rule "andLeft" (formula "105"))
                  (rule "andLeft" (formula "105"))
                  (rule "eqSymm" (formula "105"))
                  (rule "dismissNonSelectedField" (formula "107") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet000000_40" (formula "107") (term "0,0,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_41" (formula "107") (term "0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "107") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet000000_40" (formula "107") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_41" (formula "107") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "106") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "106") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet000000_37" (formula "106") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_38" (formula "106") (term "0,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "105") (term "0,1"))
                  (rule "replaceKnownSelect_taclet000000_37" (formula "105") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_38" (formula "105") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "105") (term "0,0"))
                  (rule "replaceKnownSelect_taclet000000_40" (formula "105") (term "0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_41" (formula "105") (term "0,0"))
                  (rule "castedGetAny" (formula "106") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "105") (term "0,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet000000_37" (formula "105") (term "0,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_38" (formula "105") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "106") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "106") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "105") (term "1,1,0,0"))
                  (rule "applyEq" (formula "105") (term "1,1,0,0,0") (ifseqformula "52"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "99"))
                  (rule "true_left" (formula "99"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "99"))
                  (rule "true_left" (formula "99"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "103"))
                  (rule "true_left" (formula "103"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "103"))
                  (rule "true_left" (formula "103"))
                  (rule "commute_or" (formula "104"))
                  (rule "commute_and" (formula "101") (term "0,0"))
                  (rule "commute_and" (formula "102") (term "0,0"))
                  (rule "commute_and" (formula "98") (term "1,0,0"))
                  (rule "commute_and" (formula "97") (term "1,0,0"))
                  (rule "commute_and" (formula "101") (term "0,0,1,0"))
                  (rule "commute_and" (formula "98") (term "0,0,0"))
                  (rule "commute_and" (formula "97") (term "0,0,0"))
                  (rule "lenNonNegative" (formula "63") (term "1"))
                  (rule "inEqSimp_commuteLeq" (formula "63"))
                  (rule "lenNonNegative" (formula "58") (term "1"))
                  (rule "inEqSimp_commuteLeq" (formula "58"))
                  (rule "seqGetAlphaCast" (formula "66") (term "0"))
                  (rule "castedGetAny" (formula "66") (term "0"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "true_left" (formula "66"))
                  (rule "seqGetAlphaCast" (formula "60") (term "0"))
                  (rule "castedGetAny" (formula "60") (term "0"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "true_left" (formula "60"))
                  (rule "lenNonNegative" (formula "67") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "67"))
                  (rule "commute_and_2" (formula "104") (term "0,1,0"))
                  (rule "methodCallUnfoldTarget" (formula "129") (term "1") (inst "#v0=a"))
                  (rule "variableDeclaration" (formula "129") (term "1") (newnames "a_3"))
                  (rule "activeUseStaticFieldReadAccess" (formula "129") (term "1"))
                  (rule "assignment_read_static_attribute" (formula "129") (term "1"))
                   (builtin "One Step Simplification" (formula "129"))
                  (rule "pullOutSelect" (formula "129") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "99"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet00000_31" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_32" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "130") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "shift_paren_and" (formula "101") (term "0,0"))
                  (rule "shift_paren_and" (formula "100") (term "0,0"))
                  (rule "commute_and_2" (formula "101") (term "0,0,0"))
                  (rule "commute_and_2" (formula "100") (term "0,0,0"))
                  (rule "lenNonNegative" (formula "93") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "93"))
                  (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                  (rule "qeq_literals" (formula "93"))
                  (rule "true_left" (formula "93"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "46"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "47"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "48"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "49"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "1") (ifseqformula "50"))
                  (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "117"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "50"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "51"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replace_known_left" (formula "108") (term "0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "108"))
                  (rule "applyEqReverse" (formula "110") (term "0,0,0,1,0") (ifseqformula "108"))
                  (rule "applyEqReverse" (formula "109") (term "0,0,1,0,0,1,0") (ifseqformula "108"))
                  (rule "applyEqReverse" (formula "109") (term "0,1,0,0,0") (ifseqformula "108"))
                  (rule "applyEqReverse" (formula "109") (term "0,1,0,0,0") (ifseqformula "108"))
                  (rule "hideAuxiliaryEq" (formula "108"))
                  (rule "replace_known_left" (formula "109") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "109"))
                  (rule "true_left" (formula "109"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "52"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "53"))
                  (rule "applyEqRigid" (formula "63") (term "1,0,1") (ifseqformula "64"))
                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "true_left" (formula "63"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "53"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "54"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "methodCallUnfoldArguments" (formula "133") (term "1"))
                  (rule "variableDeclarationAssign" (formula "133") (term "1"))
                  (rule "variableDeclaration" (formula "133") (term "1") (newnames "var_9"))
                  (rule "assignment" (formula "133") (term "1"))
                   (builtin "One Step Simplification" (formula "133"))
                  (rule "variableDeclarationAssign" (formula "133") (term "1"))
                  (rule "variableDeclaration" (formula "133") (term "1") (newnames "var_10"))
                  (rule "assignment" (formula "133") (term "1"))
                   (builtin "One Step Simplification" (formula "133"))
                  (rule "variableDeclarationAssign" (formula "133") (term "1"))
                  (rule "variableDeclaration" (formula "133") (term "1") (newnames "var_11"))
                  (rule "assignment_read_attribute" (formula "133") (term "1"))
                  (branch "Normal Execution (_dataForVoter_35_B != null)"
                      (builtin "One Step Simplification" (formula "134"))
                      (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "135")))
                     (rule "false_right" (formula "133"))
                     (rule "pullOutSelect" (formula "133") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "109"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "101"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")) (ifInst ""  (formula "60")))
                     (rule "applyEqReverse" (formula "134") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                      (builtin "Use Operation Contract" (formula "133") (newnames "heapBefore_add_0,exc_1085,heapAfter_add_0,anon_heap_add_0") (contract "java.util.ArrayList[java.util.List::add(int,java.lang.Object)].JML normal_behavior operation contract.0"))
                     (branch "Post (add)"
                         (builtin "One Step Simplification" (formula "113"))
                         (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "134")) (ifInst ""  (formula "134")))
                         (builtin "One Step Simplification" (formula "114"))
                         (builtin "One Step Simplification" (formula "137"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "1,1") (ifseqformula "108"))
                        (rule "expand_inInt" (formula "115") (term "1,0,1"))
                        (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,1"))
                        (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,1"))
                        (rule "leq_literals" (formula "115") (term "0,1,0,1"))
                         (builtin "One Step Simplification" (formula "115"))
                        (rule "leq_literals" (formula "115") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "115"))
                        (rule "andLeft" (formula "113"))
                        (rule "andLeft" (formula "116"))
                        (rule "andLeft" (formula "114"))
                        (rule "andLeft" (formula "118"))
                        (rule "andLeft" (formula "115"))
                        (rule "andLeft" (formula "115"))
                        (rule "dismissNonSelectedField" (formula "120") (term "0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0") (ifseqformula "100"))
                        (rule "replace_known_left" (formula "120") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "120"))
                        (rule "true_left" (formula "120"))
                        (rule "applyEq" (formula "117") (term "5") (ifseqformula "114"))
                        (rule "pullOutSelect" (formula "115") (term "0") (inst "selectSK=java_util_Collection_seq_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "115") (ifseqformula "113"))
                         (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "123")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,1,0,0") (ifseqformula "108"))
                        (rule "eqSymm" (formula "116"))
                        (rule "elementOfSingleton" (formula "115") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "115"))
                        (rule "applyEqReverse" (formula "116") (term "1") (ifseqformula "115"))
                        (rule "hideAuxiliaryEq" (formula "115"))
                        (rule "pullOutSelect" (formula "115") (term "1,0") (inst "selectSK=java_util_Collection_seq_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "115") (ifseqformula "108"))
                         (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "123")))
                        (rule "eqSymm" (formula "116"))
                        (rule "elementOfSingleton" (formula "115") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "115"))
                        (rule "applyEqReverse" (formula "116") (term "1,1") (ifseqformula "115"))
                        (rule "hideAuxiliaryEq" (formula "115"))
                        (rule "eqSeqConcat" (formula "115"))
                         (builtin "One Step Simplification" (formula "115"))
                        (rule "andLeft" (formula "115"))
                        (rule "andLeft" (formula "115"))
                        (rule "eqSeqSingleton" (formula "116"))
                        (rule "andLeft" (formula "116"))
                        (rule "lenOfSeqSubEQ" (formula "115") (term "1,1") (ifseqformula "118"))
                        (rule "polySimp_elimSub" (formula "115") (term "1,1,1"))
                        (rule "mul_literals" (formula "115") (term "1,1,1,1"))
                        (rule "polySimp_addComm0" (formula "115") (term "1,1,1"))
                        (rule "lenOfSeqSub" (formula "116") (term "0"))
                        (rule "sub_literals" (formula "116") (term "1,0"))
                         (builtin "One Step Simplification" (formula "116"))
                        (rule "equal_literals" (formula "116") (term "1"))
                         (builtin "One Step Simplification" (formula "116"))
                        (rule "less_literals" (formula "116"))
                        (rule "true_left" (formula "116"))
                        (rule "getOfSeqSub" (formula "116") (term "0"))
                        (rule "castDel" (formula "116") (term "2,0"))
                        (rule "sub_literals" (formula "116") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "116") (term "1,1,0"))
                        (rule "leq_literals" (formula "116") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "116"))
                        (rule "less_literals" (formula "116") (term "0,0"))
                         (builtin "One Step Simplification" (formula "116"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "120"))
                        (rule "true_left" (formula "120"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "118"))
                        (rule "true_left" (formula "118"))
                        (rule "methodCallEmpty" (formula "141") (term "1"))
                        (rule "tryEmpty" (formula "141") (term "1"))
                        (rule "emptyModality" (formula "141") (term "1"))
                         (builtin "One Step Simplification" (formula "141"))
                        (rule "impRight" (formula "172"))
                        (rule "notRight" (formula "142"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "175"))
                        (rule "eqSymm" (formula "4"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_homoEq" (formula "119"))
                        (rule "polySimp_addComm1" (formula "119") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "79"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "73"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "55") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "119") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "119") (term "0,0,1,0"))
                        (rule "add_literals" (formula "119") (term "0,0,0,1,0"))
                        (rule "applyEq" (formula "76") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "58") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "55") (term "1,1,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "175") (term "0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "70") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "76") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "174") (term "0") (ifseqformula "20"))
                        (rule "applyEq" (formula "58") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "95") (term "6") (ifseqformula "94"))
                        (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "147") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "54") (term "1,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "82") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "74") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "20"))
                        (rule "applyEq" (formula "73") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "95") (term "5") (ifseqformula "20"))
                        (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "148") (term "1,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "175") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "49") (term "1,1,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "56") (term "1,1") (ifseqformula "20"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "163") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "95") (term "1,2") (ifseqformula "20"))
                        (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "175") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "165") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "50") (term "1,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "75") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                        (rule "applyEq" (formula "167") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "174") (term "0,1,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "94") (term "0") (ifseqformula "20"))
                        (rule "applyEq" (formula "81") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "163") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "113") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "158") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "55") (term "1,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "90") (term "3") (ifseqformula "84"))
                        (rule "applyEq" (formula "87") (term "0") (ifseqformula "88"))
                        (rule "qeq_literals" (formula "87"))
                        (rule "true_left" (formula "87"))
                        (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "112") (term "5") (ifseqformula "1"))
                        (rule "applyEq" (formula "160") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "156") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "164") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "165") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "50") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "112") (term "1,2") (ifseqformula "1"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "159") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "99") (term "5") (ifseqformula "97"))
                        (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "56") (term "1,1,0,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "50") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "158") (term "1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "79") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "51") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                        (rule "polySimp_sepPosMonomial" (formula "117"))
                        (rule "polySimp_mulComm0" (formula "117") (term "1"))
                        (rule "polySimp_rightDist" (formula "117") (term "1"))
                        (rule "mul_literals" (formula "117") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "117") (term "1,1"))
                         (builtin "One Step Simplification" (formula "117"))
                        (rule "polySimp_homoEq" (formula "117") (term "1"))
                        (rule "mul_literals" (formula "117") (term "1,0,1"))
                        (rule "add_zero_right" (formula "117") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "81") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "117") (term "1"))
                        (rule "mul_literals" (formula "117") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                        (rule "polySimp_elimOne" (formula "54") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                        (rule "polySimp_elimOne" (formula "78") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                        (rule "polySimp_elimOne" (formula "48") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "117") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "117") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "117") (term "0,0"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "173") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "173") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "173") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "173") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "173") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "173") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "173") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "173") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "173") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "173") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "173") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                        (rule "applyEq" (formula "174") (term "1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "92"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "174") (term "1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "174") (term "1,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "173") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                        (rule "applyEq" (formula "174") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "174") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "116"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "111"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "103"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "174") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "174") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "174") (term "1,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "173") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_8"))
                        (rule "applyEq" (formula "174") (term "0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "150")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "92"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "84"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "174") (term "0,1,1,1,0,0,1") (inst "selectSK=java_util_Collection_seq_9"))
                        (rule "applyEq" (formula "175") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "175") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "117"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "127")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "112"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "104"))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "94"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "152")))
                        (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "86"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_11"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "114"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "106"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_12"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "88"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "154")) (ifInst ""  (formula "19")))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_13"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "130")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "9"))
                        (rule "inEqSimp_and_subsumption3" (formula "46") (term "0,0,0"))
                        (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "inEqSimp_and_subsumption3" (formula "70") (term "0,0,0"))
                        (rule "leq_literals" (formula "70") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "inEqSimp_and_subsumption3" (formula "71") (term "0,0,0"))
                        (rule "leq_literals" (formula "71") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "71"))
                        (rule "inEqSimp_and_subsumption3" (formula "47") (term "0,0,0"))
                        (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "nnf_imp2or" (formula "80") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "0"))
                        (rule "nnf_imp2or" (formula "86") (term "0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_imp2or" (formula "74") (term "0"))
                        (rule "nnf_imp2or" (formula "50") (term "0"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "79") (term "0"))
                        (rule "nnf_imp2or" (formula "178") (term "0,1"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_imp2or" (formula "71") (term "0"))
                        (rule "nnf_imp2or" (formula "47") (term "0"))
                        (rule "nnf_notAnd" (formula "80") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "62") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "86") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0"))
                        (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "86") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0"))
                        (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "86") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "86") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "74") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                        (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                        (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "70") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "178") (term "0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "178") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "178") (term "1,0,0,0,0,0,1"))
                        (rule "add_literals" (formula "178") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "178") (term "1,0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "178") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "178") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "178") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "178") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "178") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "178") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "178") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "178") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "178") (term "1,1,0,0,1"))
                        (rule "commute_or" (formula "122"))
                        (rule "inEqSimp_or_weaken1" (formula "122"))
                        (rule "add_literals" (formula "122") (term "1,0"))
                         (builtin "One Step Simplification" (formula "122"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "70") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "70") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0"))
                        (rule "seqGetAlphaCast" (formula "123") (term "0"))
                        (rule "castDel" (formula "123") (term "0"))
                         (builtin "One Step Simplification" (formula "123"))
                        (rule "true_left" (formula "123"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "124") (inst "iv=iv"))
                        (rule "andLeft" (formula "124"))
                        (rule "lenOfSeqSub" (formula "124") (term "0"))
                        (rule "polySimp_elimSub" (formula "124") (term "1,0"))
                        (rule "mul_literals" (formula "124") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "124") (term "1,0"))
                        (rule "lenOfSeqSub" (formula "125") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "125") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "125") (term "1,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "125") (term "1,1,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "124") (term "1") (ifseqformula "126"))
                        (rule "eqSymm" (formula "124"))
                        (rule "polySimp_elimSub" (formula "124") (term "1,0"))
                        (rule "mul_literals" (formula "124") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "124") (term "1,0"))
                         (builtin "One Step Simplification" (formula "124"))
                        (rule "true_left" (formula "124"))
                        (rule "inEqSimp_ltToLeq" (formula "124") (term "0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "124") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "124") (term "0,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "124") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "124") (term "0,0,0"))
                        (rule "applyEq" (formula "124") (term "0,0,1,0") (ifseqformula "125"))
                         (builtin "One Step Simplification" (formula "124"))
                        (rule "true_left" (formula "124"))
                        (rule "lenNonNegative" (formula "124") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "124"))
                        (rule "inEqSimp_subsumption1" (formula "124") (ifseqformula "122"))
                        (rule "leq_literals" (formula "124") (term "0"))
                         (builtin "One Step Simplification" (formula "124"))
                        (rule "true_left" (formula "124"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                        (rule "andLeft" (formula "9"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "80") (term "0"))
                        (rule "lenNonNegative" (formula "58") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "58"))
                        (rule "lenNonNegative" (formula "76") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "76"))
                        (rule "commute_or" (formula "2") (term "0,1,0,0"))
                        (rule "commute_or" (formula "3") (term "0,0,1,0,0"))
                        (rule "seqGetAlphaCast" (formula "54") (term "0"))
                        (rule "castedGetAny" (formula "54") (term "0"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "true_left" (formula "54"))
                        (rule "commute_or" (formula "62") (term "0,0"))
                        (rule "lenNonNegative" (formula "82") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "82"))
                        (rule "commute_or_2" (formula "56") (term "0"))
                        (rule "lenNonNegative" (formula "85") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "85"))
                        (rule "commute_or" (formula "86") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "60") (term "0"))
                        (rule "castedGetAny" (formula "60") (term "0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "commute_or_2" (formula "74") (term "0"))
                        (rule "lenNonNegative" (formula "52") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "52"))
                        (rule "commute_and" (formula "62") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "50") (term "0"))
                        (rule "commute_and" (formula "86") (term "0,0,1,0"))
                        (rule "lenNonNegative" (formula "61") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "61"))
                        (rule "seqGetAlphaCast" (formula "78") (term "0"))
                        (rule "castedGetAny" (formula "78") (term "0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "true_left" (formula "78"))
                        (rule "seqGetAlphaCast" (formula "84") (term "0"))
                        (rule "castedGetAny" (formula "84") (term "0"))
                         (builtin "One Step Simplification" (formula "84"))
                        (rule "true_left" (formula "84"))
                        (rule "commute_or_2" (formula "55") (term "0"))
                        (rule "commute_or_2" (formula "79") (term "0"))
                        (rule "commute_or_2" (formula "46") (term "0"))
                        (rule "commute_or_2" (formula "70") (term "0"))
                        (rule "commute_or_2" (formula "71") (term "0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_left" (formula "2") (term "1,0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "153") (ifseqformula "4") (ifseqformula "154"))
                              (rule "close" (formula "153") (ifseqformula "40"))
                           )
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "126"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "178") (term "0,1,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "178") (term "0,1,1,0,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "177") (term "0"))
                              (rule "eqSymm" (formula "177") (term "1,0,1"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or" (formula "78") (term "0,0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "commute_or" (formula "72") (term "0,0"))
                              (rule "commute_or" (formula "48") (term "0,0"))
                              (rule "commute_or" (formula "53") (term "0,0"))
                              (rule "commute_or" (formula "77") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0,0"))
                              (rule "commute_or_2" (formula "78") (term "0"))
                              (rule "commute_or_2" (formula "68") (term "0,0"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "commute_or_2" (formula "69") (term "0,0"))
                              (rule "commute_or_2" (formula "72") (term "0"))
                              (rule "commute_or_2" (formula "48") (term "0"))
                              (rule "commute_or_2" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "77") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0,0"))
                              (rule "commute_and_2" (formula "60") (term "0,1,0"))
                              (rule "commute_and_2" (formula "84") (term "0,1,0"))
                              (rule "commute_or" (formula "44") (term "0,0,0"))
                              (rule "commute_or_2" (formula "44") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "68") (term "0,0,0"))
                              (rule "commute_or_2" (formula "68") (term "0,0"))
                              (rule "commute_or_2" (formula "68") (term "0"))
                              (rule "commute_or" (formula "69") (term "0,0,0"))
                              (rule "commute_or_2" (formula "69") (term "0,0"))
                              (rule "commute_or_2" (formula "69") (term "0"))
                              (rule "commute_or" (formula "45") (term "0,0,0"))
                              (rule "commute_or_2" (formula "45") (term "0,0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "lenNonNegative" (formula "177") (term "1,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "ex_pull_out3" (formula "61") (term "0"))
                              (rule "cnf_rightDist" (formula "61") (term "0,0"))
                              (rule "shift_paren_or" (formula "61") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "61") (term "0,0,0"))
                              (rule "commute_or_2" (formula "61") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "61") (term "1,0,0,0"))
                              (rule "commute_or" (formula "61") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "85") (term "0"))
                              (rule "cnf_rightDist" (formula "85") (term "0,0"))
                              (rule "shift_paren_or" (formula "85") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "85") (term "0,0,0"))
                              (rule "commute_or_2" (formula "85") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "85") (term "1,0,0,0"))
                              (rule "commute_or" (formula "85") (term "0,0,0,0,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "62"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "131") (term "0") (ifseqformula "63"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "132"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "63"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "131") (ifseqformula "5") (ifseqformula "132"))
                                 (rule "close" (formula "131") (ifseqformula "65"))
                              )
                              (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "127"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "180") (term "0,1,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "180"))
                                 (rule "allRight" (formula "180") (inst "sk=iv_0"))
                                 (rule "orRight" (formula "180"))
                                 (rule "orRight" (formula "180"))
                                 (rule "applyEqReverse" (formula "182") (term "0,1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "182"))
                                 (rule "closeTrue" (formula "182"))
                              )
                           )
                        )
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "127") (ifseqformula "131"))
                           (rule "close" (formula "127") (ifseqformula "63"))
                        )
                     )
                     (branch "Exceptional Post (add)"
                         (builtin "One Step Simplification" (formula "113"))
                         (builtin "One Step Simplification" (formula "135"))
                        (rule "andLeft" (formula "113"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,0") (ifseqformula "113"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0") (ifseqformula "108"))
                        (rule "andLeft" (formula "114"))
                        (rule "andLeft" (formula "114"))
                        (rule "andLeft" (formula "116"))
                        (rule "notLeft" (formula "114"))
                        (rule "close" (formula "117") (ifseqformula "116"))
                     )
                     (branch "Pre (add)"
                         (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "130")) (ifInst ""  (formula "130")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "1,1") (ifseqformula "108"))
                        (rule "wellFormedAnonEQ" (formula "133") (term "0,0,1") (ifseqformula "108"))
                        (rule "expand_inInt" (formula "133") (term "1,0,1"))
                        (rule "replace_int_MIN" (formula "133") (term "0,1,1,0,1"))
                        (rule "replace_int_MAX" (formula "133") (term "1,0,1,0,1"))
                        (rule "leq_literals" (formula "133") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "111")) (ifInst ""  (formula "107")))
                        (rule "leq_literals" (formula "133") (term "0,1"))
                         (builtin "One Step Simplification" (formula "133"))
                        (rule "impRight" (formula "164"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "165"))
                        (rule "dismissNonSelectedField" (formula "134") (term "0,0,1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "134") (term "0,1") (ifseqformula "101"))
                        (rule "replace_known_left" (formula "134") (term "0,0,1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "134"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "70"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "46") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "52") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                        (rule "applyEq" (formula "43") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "152") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "51") (term "1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "17"))
                        (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "17"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "85") (term "0") (ifseqformula "86"))
                        (rule "qeq_literals" (formula "85"))
                        (rule "true_left" (formula "85"))
                        (rule "applyEq" (formula "43") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "87") (term "3") (ifseqformula "82"))
                        (rule "applyEq" (formula "156") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "91") (term "5") (ifseqformula "17"))
                        (rule "applyEq" (formula "53") (term "1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "153") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "91") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "149") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "154") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "148") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "49") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "17"))
                        (rule "applyEqRigid" (formula "164") (term "0,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "91") (term "6") (ifseqformula "90"))
                        (rule "applyEq" (formula "163") (term "0") (ifseqformula "17"))
                        (rule "applyEq" (formula "155") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "48") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "164") (term "0,1,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "54") (term "1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "97") (term "5") (ifseqformula "95"))
                        (rule "applyEq" (formula "48") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "55") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "38"))
                        (rule "applyEq" (formula "151") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "149") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "146") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "90") (term "1,2") (ifseqformula "17"))
                        (rule "applyEq" (formula "54") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "51") (term "1,1,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "156") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                        (rule "polySimp_elimOne" (formula "69") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                        (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                        (rule "polySimp_elimOne" (formula "75") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                        (rule "polySimp_elimOne" (formula "51") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "163") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "163") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "163") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "163") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "163") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "163") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "163") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "163") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "163") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "163") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "163") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                        (rule "applyEq" (formula "164") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "164") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "pullOutSelect" (formula "164") (term "0,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                        (rule "applyEq" (formula "165") (term "0,1,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "90"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "82"))
                        (rule "pullOutSelect" (formula "165") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_7"))
                        (rule "applyEq" (formula "166") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "166") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "pullOutSelect" (formula "2") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                        (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "97"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "92"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "142"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "14")))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "92"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "143")))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "84"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "144")) (ifInst ""  (formula "16")))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                        (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                        (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "inEqSimp_and_subsumption3" (formula "67") (term "0,0,0"))
                        (rule "leq_literals" (formula "67") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                        (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "nnf_imp2or" (formula "75") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_imp2or" (formula "82") (term "0"))
                        (rule "nnf_imp2or" (formula "76") (term "0"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_imp2or" (formula "52") (term "0"))
                        (rule "nnf_imp2or" (formula "51") (term "0"))
                        (rule "nnf_imp2or" (formula "58") (term "0"))
                        (rule "nnf_imp2or" (formula "167") (term "0,1"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "136"))
                        (rule "closeTrue" (formula "136"))
                     )
                     (branch "Null reference (var_9 = null)"
                         (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "114")))
                        (rule "closeTrue" (formula "133"))
                     )
                  )
                  (branch "Null Reference (_dataForVoter_35_B = null)"
                      (builtin "One Step Simplification" (formula "134"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (addInputCols)"
                   (builtin "One Step Simplification" (formula "116"))
                   (builtin "One Step Simplification" (formula "95"))
                  (rule "andLeft" (formula "95"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "95"))
                  (rule "andLeft" (formula "96"))
                  (rule "andLeft" (formula "97"))
                  (rule "andLeft" (formula "96"))
                  (rule "andLeft" (formula "98"))
                  (rule "notLeft" (formula "96"))
                  (rule "close" (formula "100") (ifseqformula "99"))
               )
               (branch "Pre (addInputCols)"
                   (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "95")) (ifInst ""  (formula "106")) (ifInst ""  (formula "116")) (ifInst ""  (formula "95")) (ifInst ""  (formula "106")) (ifInst ""  (formula "116")))
                  (rule "impRight" (formula "145"))
                  (rule "andRight" (formula "115"))
                  (branch "Case 1"
                     (rule "andRight" (formula "115"))
                     (branch
                        (rule "allRight" (formula "115") (inst "sk=j_0"))
                        (rule "impRight" (formula "115"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "148"))
                        (rule "eqSymm" (formula "3"))
                        (rule "castedGetAny" (formula "117") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "117") (term "0,1,1,0,0"))
                        (rule "castedGetAny" (formula "117") (term "1,1,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                        (rule "dismissNonSelectedField" (formula "117") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "117") (term "0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "61"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "61") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "117") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "148") (term "0,1,1") (ifseqformula "12"))
                        (rule "applyEq" (formula "81") (term "0") (ifseqformula "10"))
                        (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "147") (term "0,1") (ifseqformula "12"))
                        (rule "applyEq" (formula "146") (term "0") (ifseqformula "10"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "38") (term "1,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "120") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "80") (term "6") (ifseqformula "79"))
                        (rule "applyEq" (formula "35") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "76") (term "3") (ifseqformula "70"))
                        (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "41") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
                        (rule "qeq_literals" (formula "73"))
                        (rule "true_left" (formula "73"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "44") (term "1,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "79") (term "5") (ifseqformula "10"))
                        (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "79") (term "1,2") (ifseqformula "10"))
                        (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "35") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "85") (term "5") (ifseqformula "83"))
                        (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "32") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "30"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                        (rule "polySimp_elimOne" (formula "65") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                        (rule "polySimp_elimOne" (formula "60") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "115") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "146") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "146") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "146") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "115") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
                        (rule "applyEq" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "52")))
                        (rule "applyEqReverse" (formula "116") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "115") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_5"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "89"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "147") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_6"))
                        (rule "applyEq" (formula "148") (term "0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "79"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "71"))
                        (rule "pullOutSelect" (formula "148") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_7"))
                        (rule "applyEq" (formula "149") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "149") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "pullOutSelect" (formula "2") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                        (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "125"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "127")))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "74"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_util_Collection_seq_9"))
                        (rule "applyEqReverse" (formula "152") (term "0,0,1,0,1") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "152") (term "0,0,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "152") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "128")) (ifInst ""  (formula "10")))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                        (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                        (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                        (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "nnf_imp2or" (formula "67") (term "0"))
                        (rule "nnf_imp2or" (formula "63") (term "0"))
                        (rule "nnf_imp2or" (formula "68") (term "0"))
                        (rule "nnf_imp2or" (formula "72") (term "0"))
                        (rule "nnf_ex2all" (formula "120"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_imp2or" (formula "53") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_imp2or" (formula "47") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "0"))
                        (rule "nnf_imp2or" (formula "151") (term "0,1"))
                        (rule "nnf_imp2or" (formula "61") (term "0"))
                        (rule "nnf_imp2or" (formula "37") (term "0"))
                        (rule "nnf_imp2or" (formula "38") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "68") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                        (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                        (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "64") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "69") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                        (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                        (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "73") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "53") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                        (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "62") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "61") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                        (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                        (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "151") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "151") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "151") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "151") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "151") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "151") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "151") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "151") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "151") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "151") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "151") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "151") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "151") (term "1,0,0,0,1"))
                        (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "61") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                        (rule "lenNonNegative" (formula "97") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "97"))
                        (rule "applyEq" (formula "97") (term "0") (ifseqformula "98"))
                        (rule "qeq_literals" (formula "97"))
                        (rule "true_left" (formula "97"))
                        (rule "seqGetAlphaCast" (formula "67") (term "0"))
                        (rule "castedGetAny" (formula "67") (term "0"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "true_left" (formula "67"))
                        (rule "seqGetAlphaCast" (formula "72") (term "0"))
                        (rule "castedGetAny" (formula "72") (term "0"))
                         (builtin "One Step Simplification" (formula "72"))
                        (rule "true_left" (formula "72"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                        (rule "andLeft" (formula "9"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "68") (term "0"))
                        (rule "commute_or_2" (formula "64") (term "0"))
                        (rule "commute_or_2" (formula "69") (term "0"))
                        (rule "seqGetAlphaCast" (formula "51") (term "0"))
                        (rule "castedGetAny" (formula "51") (term "0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "51"))
                        (rule "lenNonNegative" (formula "49") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "49"))
                        (rule "lenNonNegative" (formula "43") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "43"))
                        (rule "commute_or_2" (formula "46") (term "0"))
                        (rule "commute_or" (formula "73") (term "0,0"))
                        (rule "commute_and" (formula "73") (term "0,0,1,0"))
                        (rule "commute_and" (formula "53") (term "0,0,1,0"))
                        (rule "seqGetAlphaCast" (formula "45") (term "0"))
                        (rule "castedGetAny" (formula "45") (term "0"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "lenNonNegative" (formula "52") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "52"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "commute_or" (formula "53") (term "0,0"))
                        (rule "commute_or_2" (formula "47") (term "0"))
                        (rule "lenNonNegative" (formula "71") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "71"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "lenNonNegative" (formula "66") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "66"))
                        (rule "ifthenelse_split" (formula "6") (term "0"))
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "commute_or_2" (formula "62") (term "0"))
                           (rule "commute_or_2" (formula "61") (term "0"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "4") (ifseqformula "129"))
                              (rule "close" (formula "128") (ifseqformula "31"))
                           )
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "102"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "153") (term "0,1,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "153") (term "0,1,1,0,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "152") (term "0"))
                              (rule "eqSymm" (formula "152") (term "1,0,1"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "commute_or_2" (formula "36") (term "0"))
                              (rule "commute_or" (formula "67") (term "0,0"))
                              (rule "commute_or" (formula "62") (term "0,0"))
                              (rule "commute_or" (formula "68") (term "0,0"))
                              (rule "commute_or" (formula "44") (term "0,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
                              (rule "andLeft" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "commute_or" (formula "39") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or_2" (formula "67") (term "0"))
                              (rule "commute_or_2" (formula "62") (term "0"))
                              (rule "commute_or_2" (formula "68") (term "0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "60") (term "0,0"))
                              (rule "commute_or_2" (formula "59") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "commute_or_2" (formula "36") (term "0,0"))
                              (rule "commute_and_2" (formula "73") (term "0,1,0"))
                              (rule "commute_and_2" (formula "51") (term "0,1,0"))
                              (rule "commute_or" (formula "60") (term "0,0,0"))
                              (rule "commute_or_2" (formula "60") (term "0,0"))
                              (rule "commute_or_2" (formula "60") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0,0"))
                              (rule "commute_or_2" (formula "59") (term "0,0"))
                              (rule "commute_or_2" (formula "59") (term "0"))
                              (rule "commute_or" (formula "35") (term "0,0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "commute_or" (formula "36") (term "0,0,0"))
                              (rule "commute_or_2" (formula "36") (term "0,0"))
                              (rule "commute_or_2" (formula "36") (term "0"))
                              (rule "lenNonNegative" (formula "152") (term "1,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "ex_pull_out3" (formula "74") (term "0"))
                              (rule "cnf_rightDist" (formula "74") (term "0,0"))
                              (rule "shift_paren_or" (formula "74") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "74") (term "0,0,0"))
                              (rule "commute_or_2" (formula "74") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "74") (term "1,0,0,0"))
                              (rule "commute_or" (formula "74") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0,0"))
                              (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                              (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "54"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "55"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "118") (term "0") (ifseqformula "56"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "119"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "1") (ifseqformula "56"))
                              (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "112"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "56"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "57"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "58"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "59"))
                              (rule "applyEqRigid" (formula "69") (term "1,0,1") (ifseqformula "70"))
                              (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "69"))
                              (rule "true_left" (formula "69"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "59"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "60"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "61"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "62"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "63"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "64"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "130") (term "0") (ifseqformula "65"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "131"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "66"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "137") (term "0") (ifseqformula "67"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "138"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "136") (term "0") (ifseqformula "68"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "137"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "1,0,0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "161"))
                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "40")))
                              (rule "true_left" (formula "66"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "157") (term "0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "158"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "1") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "157"))
                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "38")))
                              (rule "true_left" (formula "60"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "159") (term "0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "160"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                              (rule "true_left" (formula "1"))
                              (rule "commute_and" (formula "91") (term "0,0,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "154") (term "0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "155"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "156"))
                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
                              (rule "true_left" (formula "27"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "1,0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "162"))
                               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")))
                              (rule "true_left" (formula "39"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "1,0,0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "159"))
                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "34")))
                              (rule "true_left" (formula "58"))
                              (rule "allLeft" (formula "56") (inst "t=i_2_0"))
                              (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                              (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "61"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0") (ifseqformula "157"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "allLeft" (formula "86") (inst "t=j_0"))
                              (rule "inEqSimp_commuteGeq" (formula "86") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1"))
                              (rule "add_literals" (formula "86") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "86") (term "1,0,0,1"))
                              (rule "add_literals" (formula "86") (term "0,0,1"))
                              (rule "leq_literals" (formula "86") (term "0,1"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "22"))
                              (rule "qeq_literals" (formula "86") (term "0,1"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "notLeft" (formula "86"))
                              (rule "commute_and" (formula "68") (term "0,0,0"))
                              (rule "allLeft" (formula "80") (inst "t=i_2_1"))
                              (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                              (rule "applyEq" (formula "80") (term "0,0,0,0") (ifseqformula "85"))
                              (rule "replace_known_right" (formula "80") (term "0,0,0") (ifseqformula "131"))
                               (builtin "One Step Simplification" (formula "80"))
                              (rule "true_left" (formula "80"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "163") (term "0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "164"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                              (rule "true_left" (formula "1"))
                              (rule "allLeft" (formula "85") (inst "t=i_1"))
                              (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                              (rule "applyEq" (formula "85") (term "0,0,0,0") (ifseqformula "91"))
                              (rule "replace_known_right" (formula "85") (term "0,0,0") (ifseqformula "131"))
                               (builtin "One Step Simplification" (formula "85"))
                              (rule "true_left" (formula "85"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "164") (term "0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "165"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "true_left" (formula "1"))
                              (rule "allLeft" (formula "61") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                              (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "67"))
                              (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "158"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "true_left" (formula "61"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0") (ifseqformula "45"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "155"))
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "30")))
                              (rule "true_left" (formula "29"))
                              (rule "lenNonNegative" (formula "23") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23"))
                              (rule "lenNonNegative" (formula "172") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "19") (term "1,0,0,0,0"))
                              (rule "castedGetAny" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "commute_and_2" (formula "93") (term "0,0"))
                              (rule "commute_and_2" (formula "70") (term "0,0"))
                              (rule "allLeft" (formula "93") (inst "t=j_0"))
                              (rule "exLeft" (formula "93") (inst "sk=i_2"))
                              (rule "andLeft" (formula "93"))
                              (rule "andLeft" (formula "93"))
                              (rule "inEqSimp_commuteGeq" (formula "95") (term "1"))
                              (rule "inEqSimp_commuteGeq" (formula "94") (term "1"))
                              (rule "inEqSimp_commuteGeq" (formula "93") (term "1"))
                              (rule "inEqSimp_homoInEq0" (formula "94") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "94") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "94") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "94") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "95") (term "1,0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "95") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "inEqSimp_contradInEq1" (formula "93") (term "1") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "93") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "93") (term "0,0,1"))
                              (rule "add_literals" (formula "93") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "93") (term "1,0,0,1"))
                              (rule "add_literals" (formula "93") (term "0,0,1"))
                              (rule "leq_literals" (formula "93") (term "0,1"))
                               (builtin "One Step Simplification" (formula "93"))
                              (rule "inEqSimp_contradInEq1" (formula "94") (term "1,0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "94") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "94"))
                              (rule "inEqSimp_contradInEq1" (formula "94") (term "1") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "94") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,1"))
                              (rule "add_literals" (formula "94") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "94") (term "1,0,0,1"))
                              (rule "add_literals" (formula "94") (term "0,0,1"))
                              (rule "leq_literals" (formula "94") (term "0,1"))
                               (builtin "One Step Simplification" (formula "94"))
                              (rule "inEqSimp_contradInEq1" (formula "95") (term "1") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "95") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,1"))
                              (rule "add_literals" (formula "95") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "95") (term "1,0,0,1"))
                              (rule "add_literals" (formula "95") (term "0,0,1"))
                              (rule "leq_literals" (formula "95") (term "0,1"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "applyEq" (formula "124") (term "0") (ifseqformula "95"))
                              (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "95"))
                              (rule "inEqSimp_contradInEq1" (formula "93") (term "1") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "93") (term "0,1"))
                               (builtin "One Step Simplification" (formula "93"))
                              (rule "allLeft" (formula "19") (inst "t=i_2"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "94"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq0" (formula "95") (ifseqformula "19"))
                              (rule "andLeft" (formula "95"))
                              (rule "inEqSimp_homoInEq1" (formula "95"))
                              (rule "polySimp_pullOutFactor1b" (formula "95") (term "0"))
                              (rule "add_literals" (formula "95") (term "1,1,0"))
                              (rule "times_zero_1" (formula "95") (term "1,0"))
                              (rule "add_literals" (formula "95") (term "0"))
                              (rule "leq_literals" (formula "95"))
                              (rule "closeFalse" (formula "95"))
                           )
                        )
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "103") (ifseqformula "116"))
                           (rule "close" (formula "103") (ifseqformula "54"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "115"))
                        (branch
                           (rule "allRight" (formula "115") (inst "sk=i_2"))
                           (rule "impRight" (formula "115"))
                           (rule "notRight" (formula "116"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "148"))
                           (rule "eqSymm" (formula "4"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "62") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEqRigid" (formula "148") (term "0,1,1") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "148") (term "0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "88") (term "5") (ifseqformula "86"))
                           (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "46") (term "1,1,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "82") (term "6") (ifseqformula "81"))
                           (rule "applyEq" (formula "40") (term "1,1,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "43") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "49") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "37") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "147") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "82") (term "1,2") (ifseqformula "11"))
                           (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "81") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "48") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "81") (term "5") (ifseqformula "11"))
                           (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "77") (term "3") (ifseqformula "71"))
                           (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "74") (term "0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "74"))
                           (rule "true_left" (formula "74"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "42") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "41") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "31"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                           (rule "polySimp_elimOne" (formula "61") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                           (rule "polySimp_elimOne" (formula "45") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                           (rule "polySimp_elimOne" (formula "39") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "146") (inst "iv=iv"))
                           (rule "inEqSimp_ltToLeq" (formula "146") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "146") (term "0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_5"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "109")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "147") (term "1,0,1,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                           (rule "applyEq" (formula "148") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "148") (term "1,0,1,1,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "148") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "147") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                           (rule "applyEq" (formula "148") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "148") (term "1,0,0,1,0,1") (ifseqformula "1"))
                           (rule "pullOutSelect" (formula "148") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_6"))
                           (rule "applyEq" (formula "149") (term "0,1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "125")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "81"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "73"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "149") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_7"))
                           (rule "applyEq" (formula "150") (term "0,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "150") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "127")))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "75"))
                           (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "76"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "128")) (ifInst ""  (formula "11")))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                           (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                           (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "nnf_imp2or" (formula "69") (term "0"))
                           (rule "nnf_imp2or" (formula "68") (term "0"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_imp2or" (formula "64") (term "0"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "53") (term "0"))
                           (rule "nnf_imp2or" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "46") (term "0"))
                           (rule "nnf_imp2or" (formula "151") (term "0,1"))
                           (rule "nnf_imp2or" (formula "61") (term "0"))
                           (rule "nnf_imp2or" (formula "37") (term "0"))
                           (rule "nnf_imp2or" (formula "62") (term "0"))
                           (rule "nnf_imp2or" (formula "38") (term "0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "68") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                           (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "47") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "53") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                           (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                           (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "46") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                           (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                           (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "61") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "62") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "38") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "151") (term "0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "151") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "151") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "151") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "151") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "151") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "151") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "151") (term "1,1,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "151") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "151") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "151") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "151") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "151") (term "1,0,0,0,1"))
                           (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "69") (term "0"))
                           (rule "commute_or_2" (formula "68") (term "0"))
                           (rule "seqGetAlphaCast" (formula "67") (term "0"))
                           (rule "castedGetAny" (formula "67") (term "0"))
                            (builtin "One Step Simplification" (formula "67"))
                           (rule "true_left" (formula "67"))
                           (rule "seqGetAlphaCast" (formula "72") (term "0"))
                           (rule "castedGetAny" (formula "72") (term "0"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "true_left" (formula "72"))
                           (rule "lenNonNegative" (formula "97") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "97"))
                           (rule "applyEq" (formula "97") (term "0") (ifseqformula "98"))
                           (rule "qeq_literals" (formula "97"))
                           (rule "true_left" (formula "97"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                           (rule "andLeft" (formula "9"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "commute_or" (formula "73") (term "0,0"))
                           (rule "commute_or_2" (formula "47") (term "0"))
                           (rule "commute_and" (formula "73") (term "0,0,1,0"))
                           (rule "seqGetAlphaCast" (formula "45") (term "0"))
                           (rule "castedGetAny" (formula "45") (term "0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "commute_and" (formula "53") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "lenNonNegative" (formula "43") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "43"))
                           (rule "commute_or" (formula "53") (term "0,0"))
                           (rule "lenNonNegative" (formula "49") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "lenNonNegative" (formula "52") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "52"))
                           (rule "commute_or_2" (formula "46") (term "0"))
                           (rule "seqGetAlphaCast" (formula "51") (term "0"))
                           (rule "castedGetAny" (formula "51") (term "0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "commute_or_2" (formula "61") (term "0"))
                           (rule "lenNonNegative" (formula "66") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "66"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "6"))
                              (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "commute_or_2" (formula "37") (term "0"))
                              (rule "lenNonNegative" (formula "72") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "72"))
                              (rule "commute_or_2" (formula "62") (term "0"))
                              (rule "commute_or_2" (formula "38") (term "0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 TRUE"
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "2") (ifseqformula "129"))
                                 (rule "close" (formula "128") (ifseqformula "31"))
                              )
                              (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "102"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "153") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "153") (term "0,1,1,0,1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "152") (term "0"))
                                 (rule "eqSymm" (formula "152") (term "1,0,1"))
                                 (rule "commute_or" (formula "68") (term "0,0"))
                                 (rule "commute_or" (formula "67") (term "0,0"))
                                 (rule "commute_or" (formula "62") (term "0,0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "59") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_and_2" (formula "73") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                 (rule "commute_or" (formula "59") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "59") (term "0,0"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "35") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "lenNonNegative" (formula "152") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "ex_pull_out3" (formula "74") (term "0"))
                                 (rule "cnf_rightDist" (formula "74") (term "0,0"))
                                 (rule "shift_paren_or" (formula "74") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "74") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "74") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "74") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "74") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "52") (term "0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "69") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                                 (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "69") (term "0,0,1"))
                                 (rule "leq_literals" (formula "69") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "69"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "102") (ifseqformula "115"))
                              (rule "close" (formula "102") (ifseqformula "54"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "115"))
                           (branch
                              (rule "notRight" (formula "115"))
                              (rule "eqSymm" (formula "2"))
                              (rule "eqSymm" (formula "146"))
                              (rule "eqSymm" (formula "1"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "96") (ifseqformula "1") (ifseqformula "97"))
                              (rule "close" (formula "96") (ifseqformula "48"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "115"))
                              (branch "Case 1"
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "115") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                                 (rule "andRight" (formula "115"))
                                 (branch
                                    (rule "andRight" (formula "115"))
                                    (branch
                                       (rule "eqSymm" (formula "146"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "115"))
                                       (rule "dismissNonSelectedField" (formula "115") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "115") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "64") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "46") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "85") (term "5") (ifseqformula "83"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "8"))
                                       (rule "applyEq" (formula "145") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "79") (term "1,2") (ifseqformula "8"))
                                       (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "37") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "43") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "78") (term "5") (ifseqformula "8"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "8"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEqRigid" (formula "145") (term "0,1,1") (ifseqformula "10"))
                                       (rule "applyEq" (formula "71") (term "0") (ifseqformula "72"))
                                       (rule "qeq_literals" (formula "71"))
                                       (rule "true_left" (formula "71"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "77") (term "6") (ifseqformula "76"))
                                       (rule "applyEq" (formula "33") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "144") (term "0,1") (ifseqformula "10"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "73") (term "3") (ifseqformula "68"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "144") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "144") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "144") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "144") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "144") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "144") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "144") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "113") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "114") (term "0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "113") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "114") (term "0,0") (ifseqformula "1"))
                                       (rule "close" (formula "114") (ifseqformula "53"))
                                    )
                                    (branch
                                       (rule "expand_inInt" (formula "115") (term "1,0,0"))
                                       (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,0"))
                                       (rule "allRight" (formula "115") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "115"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "117"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "eqSymm" (formula "150"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "64") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "applyEqRigid" (formula "150") (term "0,1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "84") (term "1,2") (ifseqformula "13"))
                                       (rule "applyEq" (formula "84") (term "5") (ifseqformula "13"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                       (rule "qeq_literals" (formula "77"))
                                       (rule "true_left" (formula "77"))
                                       (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "79") (term "3") (ifseqformula "74"))
                                       (rule "applyEqRigid" (formula "149") (term "0,1,1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "142") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "89") (term "5") (ifseqformula "87"))
                                       (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "83") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "45") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "148") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "47") (term "1,1,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "50") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "82") (term "6") (ifseqformula "81"))
                                       (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "147") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "147") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "147") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "147") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "147") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "147") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "147") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "147") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
                                       (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "54")))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "147") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_5"))
                                       (rule "applyEq" (formula "148") (term "0,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "80"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "72"))
                                       (rule "pullOutSelect" (formula "148") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                       (rule "applyEq" (formula "149") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "149") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "eqSymm" (formula "3") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "82"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "74"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,1,1,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "125")))
                                       (rule "pullOutSelect" (formula "149") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_6"))
                                       (rule "applyEq" (formula "150") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "150") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "83"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "127")))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "75"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "76"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "128")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                       (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                       (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "nnf_imp2or" (formula "64") (term "0"))
                                       (rule "nnf_imp2or" (formula "73") (term "0"))
                                       (rule "nnf_imp2or" (formula "68") (term "0"))
                                       (rule "nnf_imp2or" (formula "69") (term "0"))
                                       (rule "nnf_imp2or" (formula "53") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_imp2or" (formula "47") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "151") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "62") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "61") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                       (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                       (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "68") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "151") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "151") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "151") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "151") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "151") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "151") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "151") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "151") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "151") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "151") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "151") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "151") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "151") (term "1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "61") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                       (rule "castedGetAny" (formula "67") (term "0"))
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "true_left" (formula "67"))
                                       (rule "lenNonNegative" (formula "97") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "97"))
                                       (rule "applyEq" (formula "97") (term "0") (ifseqformula "98"))
                                       (rule "qeq_literals" (formula "97"))
                                       (rule "true_left" (formula "97"))
                                       (rule "seqGetAlphaCast" (formula "72") (term "0"))
                                       (rule "castedGetAny" (formula "72") (term "0"))
                                        (builtin "One Step Simplification" (formula "72"))
                                       (rule "true_left" (formula "72"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commute_or_2" (formula "68") (term "0"))
                                       (rule "commute_or" (formula "73") (term "0,0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                       (rule "castedGetAny" (formula "45") (term "0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                       (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                       (rule "castedGetAny" (formula "51") (term "0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                       (rule "lenNonNegative" (formula "43") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "commute_or" (formula "53") (term "0,0"))
                                       (rule "commute_or_2" (formula "47") (term "0"))
                                       (rule "lenNonNegative" (formula "49") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "49"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "lenNonNegative" (formula "52") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "52"))
                                       (rule "lenNonNegative" (formula "71") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "71"))
                                       (rule "commute_or_2" (formula "62") (term "0"))
                                       (rule "lenNonNegative" (formula "66") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "66"))
                                       (rule "commute_or_2" (formula "37") (term "0"))
                                       (rule "commute_or_2" (formula "61") (term "0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 TRUE"
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "3") (ifseqformula "129"))
                                          (rule "close" (formula "128") (ifseqformula "31"))
                                       )
                                       (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "102"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "153") (term "0,1,0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "153") (term "0,1,1,0,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "eqSymm" (formula "152") (term "0"))
                                          (rule "eqSymm" (formula "152") (term "1,0,1"))
                                          (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                          (rule "castedGetAny" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "commute_or" (formula "62") (term "0,0"))
                                          (rule "commute_or" (formula "67") (term "0,0"))
                                          (rule "commute_or" (formula "68") (term "0,0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "60") (term "0,0"))
                                          (rule "commute_or_2" (formula "62") (term "0"))
                                          (rule "commute_or_2" (formula "67") (term "0"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_or_2" (formula "59") (term "0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_and_2" (formula "73") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                          (rule "commute_or" (formula "60") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "60") (term "0,0"))
                                          (rule "commute_or_2" (formula "60") (term "0"))
                                          (rule "commute_or" (formula "35") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "59") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "59") (term "0,0"))
                                          (rule "commute_or_2" (formula "59") (term "0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "lenNonNegative" (formula "152") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "ex_pull_out3" (formula "74") (term "0"))
                                          (rule "cnf_rightDist" (formula "74") (term "0,0"))
                                          (rule "shift_paren_or" (formula "74") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "74") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "74") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "74") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "74") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "52") (term "0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "53"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "54"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "1") (ifseqformula "55"))
                                          (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "115"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "55"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "56"))
                                          (rule "applyEqRigid" (formula "65") (term "1,0,1") (ifseqformula "66"))
                                          (rule "applyEqRigid" (formula "65") (term "0,0") (ifseqformula "66"))
                                          (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "113"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "56"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "57"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "58"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "59"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "129") (term "0") (ifseqformula "60"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "130"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "61"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "1,0,0") (ifseqformula "62"))
                                          (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "128"))
                                           (builtin "One Step Simplification" (formula "84"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "62"))
                                          (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "72"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "121")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "62"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "63"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "64"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "65"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "137") (term "0") (ifseqformula "66"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "138"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "130") (term "0") (ifseqformula "67"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "131"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "allLeft" (formula "75") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "75") (term "0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "75") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                                          (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "75") (term "0,0,1"))
                                          (rule "leq_literals" (formula "75") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "75"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_contradInEq0" (formula "74") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "74") (term "0"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "closeFalse" (formula "74"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "expand_inInt" (formula "115") (term "1,0,0"))
                                    (rule "replace_int_MAX" (formula "115") (term "1,0,1,0,0"))
                                    (rule "replace_int_MIN" (formula "115") (term "0,1,1,0,0"))
                                    (rule "allRight" (formula "115") (inst "sk=i_2"))
                                    (rule "impRight" (formula "115"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "117"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "eqSymm" (formula "150"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "69") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                    (rule "qeq_literals" (formula "77"))
                                    (rule "true_left" (formula "77"))
                                    (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "13"))
                                    (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "122") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "82") (term "1,2") (ifseqformula "13"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEqRigid" (formula "148") (term "0,1,1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "13"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "147") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "88") (term "5") (ifseqformula "86"))
                                    (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "148") (term "0,1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "50") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "78") (term "3") (ifseqformula "73"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "82") (term "5") (ifseqformula "13"))
                                    (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "82") (term "6") (ifseqformula "81"))
                                    (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "33"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "147") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "147") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "147") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "147") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "147") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "147") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "147") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "56"))
                                    (rule "pullOutSelect" (formula "147") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "applyEq" (formula "148") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "148") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "148") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "147") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_5"))
                                    (rule "applyEq" (formula "148") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "148") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "148") (term "1,0,1"))
                                    (rule "eqSymm" (formula "148") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                    (rule "pullOutSelect" (formula "149") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "150") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "126")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "82"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "74"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_7"))
                                    (rule "applyEqReverse" (formula "151") (term "0,1,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "151") (term "0,1,1,0,1") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "151") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "150") (term "0"))
                                    (rule "eqSymm" (formula "150") (term "1,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "127")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "75"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "128")) (ifInst ""  (formula "11")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                    (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0"))
                                    (rule "nnf_imp2or" (formula "53") (term "0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "151") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "68") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "151") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "151") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "151") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "151") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "151") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "151") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "151") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "151") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "151") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "151") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "151") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "151") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "151") (term "1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "seqGetAlphaCast" (formula "67") (term "0"))
                                    (rule "castedGetAny" (formula "67") (term "0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "true_left" (formula "67"))
                                    (rule "seqGetAlphaCast" (formula "72") (term "0"))
                                    (rule "castedGetAny" (formula "72") (term "0"))
                                     (builtin "One Step Simplification" (formula "72"))
                                    (rule "true_left" (formula "72"))
                                    (rule "lenNonNegative" (formula "97") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "97"))
                                    (rule "applyEq" (formula "97") (term "0") (ifseqformula "98"))
                                    (rule "qeq_literals" (formula "97"))
                                    (rule "true_left" (formula "97"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or" (formula "73") (term "0,0"))
                                    (rule "commute_or_2" (formula "68") (term "0"))
                                    (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "lenNonNegative" (formula "52") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "52"))
                                    (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                    (rule "castedGetAny" (formula "51") (term "0"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "seqGetAlphaCast" (formula "45") (term "0"))
                                    (rule "castedGetAny" (formula "45") (term "0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "lenNonNegative" (formula "43") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "lenNonNegative" (formula "49") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "lenNonNegative" (formula "66") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "66"))
                                    (rule "commute_or_2" (formula "61") (term "0"))
                                    (rule "lenNonNegative" (formula "72") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "72"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 TRUE"
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "1") (ifseqformula "129"))
                                       (rule "close" (formula "128") (ifseqformula "31"))
                                    )
                                    (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction» = self_806 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "153") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "153") (term "0,1,1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "152") (term "0"))
                                       (rule "eqSymm" (formula "152") (term "1,0,1"))
                                       (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                       (rule "castedGetAny" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "commute_or" (formula "62") (term "0,0"))
                                       (rule "commute_or" (formula "68") (term "0,0"))
                                       (rule "commute_or" (formula "67") (term "0,0"))
                                       (rule "commute_or" (formula "45") (term "0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "commute_or" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "62") (term "0"))
                                       (rule "commute_or_2" (formula "59") (term "0,0"))
                                       (rule "commute_or_2" (formula "68") (term "0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or_2" (formula "45") (term "0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "60") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_and_2" (formula "73") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                       (rule "commute_or" (formula "59") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "59") (term "0,0"))
                                       (rule "commute_or_2" (formula "59") (term "0"))
                                       (rule "commute_or" (formula "35") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "commute_or" (formula "60") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "60") (term "0,0"))
                                       (rule "commute_or_2" (formula "60") (term "0"))
                                       (rule "commute_or" (formula "36") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "lenNonNegative" (formula "152") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "ex_pull_out3" (formula "74") (term "0"))
                                       (rule "cnf_rightDist" (formula "74") (term "0,0"))
                                       (rule "shift_paren_or" (formula "74") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "74") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "74") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "74") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "74") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "53"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "54"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "1,0,0") (ifseqformula "55"))
                                       (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "117"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "55"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "56"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "57"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "58"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "59"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "60"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "61"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "62"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "63"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1") (ifseqformula "64"))
                                       (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "125"))
                                        (builtin "One Step Simplification" (formula "79"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "1") (ifseqformula "64"))
                                       (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "122"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "64"))
                                       (rule "applyEqRigid" (formula "74") (term "1,0,1") (ifseqformula "75"))
                                       (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "74"))
                                       (rule "true_left" (formula "74"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "123") (term "0") (ifseqformula "64"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "124"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "65"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "129") (term "0") (ifseqformula "66"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "130"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "134") (term "0") (ifseqformula "67"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "135"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "allLeft" (formula "76") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "76") (term "0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "76") (term "1,0") (ifseqformula "22"))
                                       (rule "qeq_literals" (formula "76") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "inEqSimp_contradInEq1" (formula "76") (term "0") (ifseqformula "20"))
                                       (rule "qeq_literals" (formula "76") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "76"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "115"))
                                 (branch
                                    (rule "eqSymm" (formula "1"))
                                    (rule "eqSymm" (formula "146"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "36") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "78") (term "1,2") (ifseqformula "8"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "8"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "78") (term "5") (ifseqformula "8"))
                                    (rule "applyEq" (formula "145") (term "0,1,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "84") (term "5") (ifseqformula "82"))
                                    (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "8"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "144") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "78") (term "6") (ifseqformula "77"))
                                    (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "145") (term "0,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "71") (term "0") (ifseqformula "72"))
                                    (rule "qeq_literals" (formula "71"))
                                    (rule "true_left" (formula "71"))
                                    (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "73") (term "3") (ifseqformula "68"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "144") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "144") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "144") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "144") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "144") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "144") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "144") (term "0,1,0") (inst "selectSK=java_util_Collection_seq_5"))
                                    (rule "applyEq" (formula "145") (term "0,1,1,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "76"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "68"))
                                    (rule "pullOutSelect" (formula "145") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "146") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "146") (term "0,0,0") (ifseqformula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "122"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "4")))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "124")))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "71"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_util_Collection_seq_8"))
                                    (rule "applyEqReverse" (formula "149") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "149") (term "0,0,1,0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "149") (term "0,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "125")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                                    (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_imp2or" (formula "60") (term "0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "49") (term "0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "117"))
                                    (rule "closeTrue" (formula "117"))
                                 )
                                 (branch
                                    (rule "eqSymm" (formula "146"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "37") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "75") (term "3") (ifseqformula "69"))
                                    (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "8"))
                                    (rule "applyEqRigid" (formula "146") (term "0,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "8"))
                                    (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "79") (term "6") (ifseqformula "78"))
                                    (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "146") (term "0,1,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "79") (term "1,2") (ifseqformula "8"))
                                    (rule "applyEq" (formula "79") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "71") (term "0") (ifseqformula "72"))
                                    (rule "qeq_literals" (formula "71"))
                                    (rule "true_left" (formula "71"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "83") (term "5") (ifseqformula "81"))
                                    (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "143") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "77") (term "5") (ifseqformula "8"))
                                    (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "144") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "144") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "144") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "144") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "144") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "144") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "144") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_5"))
                                    (rule "applyEq" (formula "145") (term "0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "145") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "145") (term "0"))
                                    (rule "eqSymm" (formula "145") (term "1,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "pullOutSelect" (formula "146") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                    (rule "applyEq" (formula "147") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "147") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "147") (term "1,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEqReverse" (formula "147") (term "0,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "147") (term "0,1,1,0,1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "147") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "146") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_7"))
                                    (rule "applyEq" (formula "147") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "123")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "78"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "70"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "124")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "125")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_and_subsumption3" (formula "33") (term "0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                                    (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "60") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "49") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "117"))
                                    (rule "closeTrue" (formula "117"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "115"))
                     (branch
                        (rule "andRight" (formula "115"))
                        (branch
                           (rule "andRight" (formula "115"))
                           (branch
                              (rule "eqSymm" (formula "146"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "64"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "64") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "46") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "79") (term "1,2") (ifseqformula "8"))
                              (rule "applyEq" (formula "146") (term "0,1,1") (ifseqformula "10"))
                              (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "79") (term "0") (ifseqformula "8"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "40") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "40") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "79") (term "5") (ifseqformula "8"))
                              (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "72") (term "0") (ifseqformula "73"))
                              (rule "qeq_literals" (formula "72"))
                              (rule "true_left" (formula "72"))
                              (rule "applyEq" (formula "37") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "127") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "38") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "77") (term "6") (ifseqformula "76"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "42") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "45") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "73") (term "3") (ifseqformula "68"))
                              (rule "applyEq" (formula "143") (term "0") (ifseqformula "8"))
                              (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                              (rule "applyEqRigid" (formula "144") (term "0,1") (ifseqformula "10"))
                              (rule "applyEq" (formula "83") (term "5") (ifseqformula "81"))
                              (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "63"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                              (rule "polySimp_elimOne" (formula "63") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                              (rule "polySimp_elimOne" (formula "58") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                              (rule "polySimp_elimOne" (formula "42") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                              (rule "wellFormedStoreObject" (formula "113"))
                               (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "94")))
                              (rule "wellFormedAnonEQ" (formula "113") (term "0") (ifseqformula "86"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1") (ifseqformula "86"))
                              (rule "replace_known_left" (formula "113") (term "0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "85")) (ifInst ""  (formula "93")) (ifInst ""  (formula "87")))
                              (rule "closeTrue" (formula "113"))
                           )
                           (branch
                              (rule "eqSymm" (formula "146"))
                              (rule "eqSymm" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "115") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (ifseqformula "88"))
                              (rule "orRight" (formula "115"))
                              (rule "close" (formula "115") (ifseqformula "89"))
                           )
                        )
                        (branch
                           (rule "eqSymm" (formula "146"))
                           (rule "eqSymm" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "115") (term "0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (ifseqformula "88"))
                           (rule "orRight" (formula "115"))
                           (rule "referencedObjectIsCreatedRight" (formula "115") (ifseqformula "107"))
                           (rule "close" (formula "115") (ifseqformula "47"))
                        )
                     )
                     (branch
                        (rule "eqSymm" (formula "146"))
                        (rule "eqSymm" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "115") (term "0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (ifseqformula "88"))
                        (rule "orRight" (formula "115"))
                        (rule "close" (formula "115") (ifseqformula "50"))
                     )
                  )
               )
            )
            (branch "Exceptional Post (ArrayList)"
                (builtin "One Step Simplification" (formula "86"))
                (builtin "One Step Simplification" (formula "105"))
               (rule "andLeft" (formula "86"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,0,0") (ifseqformula "86"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,0,1,0") (ifseqformula "86"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "89"))
               (rule "andLeft" (formula "88"))
               (rule "andLeft" (formula "87"))
               (rule "andLeft" (formula "91"))
               (rule "andLeft" (formula "89"))
               (rule "notLeft" (formula "87"))
               (rule "close" (formula "94") (ifseqformula "93"))
            )
            (branch "Pre (ArrayList)"
                (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "46")))
               (rule "closeTrue" (formula "103"))
            )
         )
         (branch "Exceptional Post (add)"
             (builtin "One Step Simplification" (formula "78"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "andLeft" (formula "53"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0") (ifseqformula "53"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0") (ifseqformula "48"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "56"))
            (rule "notLeft" (formula "54"))
            (rule "close" (formula "57") (ifseqformula "56"))
         )
         (branch "Pre (add)"
             (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "73")) (ifInst ""  (formula "73")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,1") (ifseqformula "48"))
            (rule "wellFormedAnonEQ" (formula "76") (term "0,0,1") (ifseqformula "48"))
            (rule "expand_inInt" (formula "76") (term "1,0,1"))
            (rule "replace_int_MAX" (formula "76") (term "1,0,1,0,1"))
            (rule "replace_int_MIN" (formula "76") (term "0,1,1,0,1"))
            (rule "leq_literals" (formula "76") (term "0,1,0,1"))
             (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "51")) (ifInst ""  (formula "47")))
            (rule "leq_literals" (formula "76") (term "0,1"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "dismissNonSelectedField" (formula "76") (term "0,0,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "0,1") (ifseqformula "39"))
            (rule "replace_known_left" (formula "76") (term "0,0,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "76"))
            (rule "closeTrue" (formula "76"))
         )
         (branch "Null reference (var_3 = null)"
             (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")))
            (rule "closeTrue" (formula "76"))
         )
      )
      (branch "Null Reference (_dataForVoter_35_A = null)"
          (builtin "One Step Simplification" (formula "77"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (addInputCols)"
       (builtin "One Step Simplification" (formula "32"))
       (builtin "One Step Simplification" (formula "56"))
      (rule "andLeft" (formula "32"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "35"))
      (rule "notLeft" (formula "33"))
      (rule "close" (formula "37") (ifseqformula "36"))
   )
   (branch "Pre (addInputCols)"
       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "32")) (ifInst ""  (formula "46")) (ifInst ""  (formula "55")) (ifInst ""  (formula "32")) (ifInst ""  (formula "46")) (ifInst ""  (formula "55")))
      (rule "eqSymm" (formula "54") (term "1,0,1,0,0,0"))
      (rule "eqSymm" (formula "54") (term "0,0,1,1,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,1,0,0,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0,1") (ifseqformula "24"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,0,0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0,0,1") (ifseqformula "24"))
      (rule "replace_known_left" (formula "54") (term "1,1,0,0,1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "31")))
      (rule "castedGetAny" (formula "54") (term "0,1,0,1,0,0,0"))
      (rule "castedGetAny" (formula "54") (term "1,1,0,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,1,0,0,0,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,1") (ifseqformula "24"))
      (rule "replace_known_left" (formula "54") (term "0,1,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "54"))
      (rule "castedGetAny" (formula "54") (term "0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,0,1,0,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "54") (term "0,1,1,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,1,0"))
      (rule "wellFormedStoreObject" (formula "54") (term "0,1"))
       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "32")))
      (rule "wellFormedAnonEQ" (formula "54") (term "0,0,1") (ifseqformula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,0,1") (ifseqformula "24"))
      (rule "replace_known_left" (formula "54") (term "1,0,0,1") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")) (ifInst ""  (formula "31")) (ifInst ""  (formula "26")))
      (rule "pullOutSelect" (formula "54") (term "0,1,1,0,0,0,1,0") (inst "selectSK=java_util_Collection_seq_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
      (rule "replaceKnownSelect_taclet20_7" (formula "55") (term "0,1,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet20_7" (formula "55") (term "0,0,0,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet20_7" (formula "55") (term "0,0,1,0,1,0,0,0"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "55") (term "0,1,1,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
      (rule "replaceKnownSelect_taclet20_8" (formula "56") (term "0,1,1,0,0,1,0,0,0"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_9" (formula "55") (term "0,1,1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_9" (formula "55") (term "0,1,1,0,0,1,0,0,0"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "55") (term "0,1,1,1,1,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "55") (term "0,1,1,1,0") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "55") (term "1,0,0,1,0,1,1,1,0"))
      (rule "expand_inInt" (formula "55") (term "1,0,0,1,0,0,1,1,1,0"))
      (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0,1,0,1,1,1,0"))
      (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0,1,0,1,1,1,0"))
      (rule "replace_int_MIN" (formula "55") (term "0,1,1,0,0,1,0,0,1,1,1,0"))
      (rule "replace_int_MAX" (formula "55") (term "1,0,1,0,0,1,0,0,1,1,1,0"))
      (rule "eqSymm" (formula "55") (term "0,0,0,1,1,1,0"))
      (rule "castedGetAny" (formula "55") (term "0,0,1,0,1,0,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet20_8" (formula "55") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_9" (formula "55") (term "0,1,1,0,0,0,1,0,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,0,0,0,1,0,1,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,0,0,0,0,1,1,1,0"))
      (rule "eqSymm" (formula "55") (term "0,0,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet20_8" (formula "55") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_9" (formula "55") (term "0,0,0,1,0,1,0,0,1,1,1,0"))
      (rule "castedGetAny" (formula "55") (term "0,0,1,0,1,0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "55") (term "0,0,0,0,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet20_8" (formula "55") (term "0,0,0,0,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_9" (formula "55") (term "0,0,0,0,0,1,1,1,0"))
      (rule "eqSymm" (formula "55") (term "0,0,0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,0,0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "1,1,0,0,1,0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "55") (term "1,1,0,0,1,0,0,1,1,1,0"))
      (rule "pullOutSelect" (formula "55") (term "0,1,1,0,0,0,1,0,1,1,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
      (rule "replaceKnownSelect_taclet20_10" (formula "56") (term "0,0,0,0,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet20_10" (formula "56") (term "0,0,0,1,0,1,0,1,1,1,0"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_11" (formula "55") (term "0,0,0,0,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_11" (formula "55") (term "0,0,0,1,0,1,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_11" (formula "55") (term "0,1,1,0,0,0,1,0,1,1,1,0"))
      (rule "replace_known_left" (formula "55") (term "0,0,0,1,1,1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "55") (term "1,1,1,1,0"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "commute_or" (formula "55") (term "1"))
      (rule "lenNonNegative" (formula "20") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "lenNonNegative" (formula "15") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "seqGetAlphaCast" (formula "23") (term "0"))
      (rule "castedGetAny" (formula "23") (term "0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "seqGetAlphaCast" (formula "17") (term "0"))
      (rule "castedGetAny" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "lenNonNegative" (formula "24") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24"))
      (rule "lenNonNegative" (formula "32") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "32"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "hideAuxiliaryEq" (formula "8"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "65") (term "0,1,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "65") (term "0,0,0,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "65") (term "0,0,1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_12" (formula "65") (term "0,1,1,0,0,0,1,0"))
      (rule "replace_known_left" (formula "65") (term "1,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "65"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "10"))
      (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "21"))
      (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "53"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "21"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1") (ifseqformula "12"))
      (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "56")))
      (rule "true_left" (formula "23"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "14"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "15"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "16"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "17"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Use_information_flow_contract_for_ArrayList_1695163498" (formula "52") (ifseqformula "52"))
       (builtin "One Step Simplification" (formula "52"))
      (rule "true_left" (formula "52"))
      (rule "impRight" (formula "80"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "45"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "47"))
      (rule "andLeft" (formula "45"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "50"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "52"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "54"))
      (rule "notLeft" (formula "45"))
      (rule "notLeft" (formula "54"))
      (rule "notLeft" (formula "53"))
      (rule "eqSymm" (formula "1"))
      (rule "eqSymm" (formula "93"))
      (rule "eqSymm" (formula "53") (term "1,0,0,1"))
      (rule "eqSymm" (formula "53") (term "0,0,0,1"))
      (rule "eqSymm" (formula "52") (term "1,0,1,0"))
      (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "64"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "63"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "castedGetAny" (formula "52") (term "0,1,0,1,0"))
      (rule "castedGetAny" (formula "52") (term "1,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,0"))
      (rule "assignment" (formula "53") (term "1"))
       (builtin "One Step Simplification" (formula "53"))
      (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
      (rule "applyEq" (formula "61") (term "3") (ifseqformula "55"))
      (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "25"))
      (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
      (rule "qeq_literals" (formula "58"))
      (rule "true_left" (formula "58"))
      (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,1,1,1") (ifseqformula "25"))
      (rule "equalityToSeqGetAndSeqLenRight" (formula "91") (inst "iv=iv"))
      (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,1"))
      (rule "pullOutSelect" (formula "91") (term "0,1,1,0,0,1") (inst "selectSK=java_util_Collection_seq_2"))
      (rule "applyEq" (formula "92") (term "0,0,1,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "92") (term "0,0,0") (ifseqformula "1"))
      (rule "eqSymm" (formula "92") (term "1,0,1"))
      (rule "eqSymm" (formula "92") (term "0"))
      (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
      (rule "pullOutSelect" (formula "93") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
      (rule "applyEq" (formula "94") (term "1,0,0,0") (ifseqformula "1"))
      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=java_util_Collection_seq_3"))
      (rule "applyEqReverse" (formula "95") (term "0,1,1,0,1") (ifseqformula "4"))
      (rule "applyEqReverse" (formula "95") (term "0,1,1,0,0,1") (ifseqformula "4"))
      (rule "applyEqReverse" (formula "95") (term "0,1,0") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "pullOutSelect" (formula "94") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_4"))
      (rule "applyEq" (formula "95") (term "0,0,0") (ifseqformula "1"))
      (rule "boxToDiamond" (formula "56") (term "1"))
       (builtin "One Step Simplification" (formula "56"))
      (rule "notLeft" (formula "56"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "52") (inst "i=i") (inst "i_0=i_0"))
      (rule "expand_inInt" (formula "52") (term "1,0,0,1,0"))
      (rule "expand_inInt" (formula "52") (term "1,0,0,1"))
      (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MAX" (formula "52") (term "1,0,1,0,0,1"))
      (rule "replace_int_MIN" (formula "52") (term "0,1,1,0,0,1"))
      (rule "andLeft" (formula "52"))
      (rule "andLeft" (formula "52"))
      (rule "eqSymm" (formula "52"))
      (rule "castedGetAny" (formula "54") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "53") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "53") (term "1,1,0,0"))
      (rule "applyEq" (formula "54") (term "1,1,0,0,0") (ifseqformula "52"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "55"))
      (rule "notLeft" (formula "55"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "55") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "57"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "55"))
      (rule "notLeft" (formula "56"))
      (rule "notLeft" (formula "55"))
      (rule "exLeft" (formula "60") (inst "sk=i_1"))
      (rule "andLeft" (formula "60"))
      (rule "andLeft" (formula "60"))
      (rule "exLeft" (formula "57") (inst "sk=i_2_1"))
      (rule "andLeft" (formula "57"))
      (rule "andLeft" (formula "57"))
      (rule "castedGetAny" (formula "61") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "60") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "56") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "64") (term "0"))
      (rule "castedGetAny" (formula "59") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "62"))
      (rule "inEqSimp_commuteLeq" (formula "57"))
      (rule "applyEqRigid" (formula "77") (term "0") (ifseqformula "55"))
      (rule "commute_and" (formula "65") (term "0,0"))
      (rule "commute_and" (formula "65") (term "0,0,1,0"))
      (rule "commute_and" (formula "54") (term "1,0,0"))
      (rule "commute_and" (formula "53") (term "0,0,0"))
      (rule "commute_and" (formula "53") (term "1,0,0"))
      (rule "commute_and" (formula "54") (term "0,0,0"))
      (rule "methodBodyExpand" (formula "92") (term "1") (newnames "heapBefore_initDistVals_0,savedHeapBefore_initDistVals_0"))
       (builtin "One Step Simplification" (formula "92"))
      (rule "activeUseStaticFieldWriteAccess" (formula "92") (term "1") (inst "#v0=a"))
      (rule "variableDeclarationAssign" (formula "92") (term "1"))
      (rule "variableDeclaration" (formula "92") (term "1") (newnames "a_1"))
      (rule "commute_and" (formula "61") (term "0,0"))
      (rule "commute_and" (formula "60") (term "0,0"))
      (rule "commute_and" (formula "56") (term "0,0"))
      (rule "commute_and_2" (formula "65") (term "0,1,0"))
      (rule "shift_paren_and" (formula "53") (term "0,0"))
      (rule "commute_and_2" (formula "53") (term "0,0,0"))
      (rule "shift_paren_and" (formula "54") (term "0,0"))
      (rule "commute_and_2" (formula "54") (term "0,0,0"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "5") (inst "iv=iv"))
      (rule "andLeft" (formula "5"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
       (builtin "Use Operation Contract" (formula "92") (newnames "heapBefore_ArrayList_0,self_807,exc_1082,heapAfter_ArrayList_0,anon_heap_ArrayList_0") (contract "java.util.ArrayList[java.util.ArrayList::ArrayList()].JML normal_behavior operation contract.0"))
      (branch "Post (ArrayList)"
          (builtin "One Step Simplification" (formula "75"))
          (builtin "One Step Simplification" (formula "96"))
          (builtin "One Step Simplification" (formula "76"))
          (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "47")))
         (rule "true_left" (formula "77"))
         (rule "andLeft" (formula "75"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,1,0,1,0") (ifseqformula "75"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "78"))
         (rule "andLeft" (formula "77"))
         (rule "andLeft" (formula "79"))
         (rule "andLeft" (formula "77"))
         (rule "andLeft" (formula "81"))
         (rule "notLeft" (formula "77"))
         (rule "andLeft" (formula "77"))
         (rule "andLeft" (formula "81"))
         (rule "notLeft" (formula "77"))
         (rule "andLeft" (formula "80"))
         (rule "notLeft" (formula "80"))
         (rule "notLeft" (formula "80"))
         (rule "replace_known_right" (formula "77") (term "0") (ifseqformula "83"))
          (builtin "One Step Simplification" (formula "77"))
         (rule "assignment" (formula "103") (term "1"))
          (builtin "One Step Simplification" (formula "103"))
         (rule "assignment_write_static_attribute" (formula "103") (term "1"))
          (builtin "One Step Simplification" (formula "103"))
         (rule "applyEq" (formula "82") (term "3") (ifseqformula "76"))
         (rule "pullOutSelect" (formula "79") (term "0,0") (inst "selectSK=java_util_Collection_seq_5"))
         (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "85")) (ifInst ""  (formula "84")))
         (rule "applyEqReverse" (formula "80") (term "0,0") (ifseqformula "79"))
         (rule "hideAuxiliaryEq" (formula "79"))
         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "81"))
         (rule "true_left" (formula "81"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
         (rule "andLeft" (formula "4"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "lenNonNegative" (formula "133") (term "1,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
         (rule "andLeft" (formula "2"))
         (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "lenNonNegative" (formula "134") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "lenNonNegative" (formula "54") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "54"))
         (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
         (rule "lenNonNegative" (formula "55") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "55"))
         (rule "methodCallUnfoldArguments" (formula "105") (term "1"))
         (rule "variableDeclarationAssign" (formula "105") (term "1"))
         (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_3"))
         (rule "activeUseStaticFieldReadAccess" (formula "105") (term "1"))
         (rule "assignment_read_static_attribute" (formula "105") (term "1"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "pullOutSelect" (formula "105") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "106") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "variableDeclarationAssign" (formula "105") (term "1"))
         (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_4"))
         (rule "assignment_read_attribute_this" (formula "105") (term "1"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "dismissNonSelectedField" (formula "105") (term "0,1,0"))
         (rule "pullOutSelect" (formula "105") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "109")) (ifInst ""  (formula "51")))
         (rule "applyEqReverse" (formula "106") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "variableDeclarationAssign" (formula "105") (term "1"))
         (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_5"))
         (rule "assignment" (formula "105") (term "1"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "lenNonNegative" (formula "66") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "66"))
         (rule "lenNonNegative" (formula "61") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "61"))
         (rule "seqGetAlphaCast" (formula "69") (term "0"))
         (rule "castedGetAny" (formula "69") (term "0"))
          (builtin "One Step Simplification" (formula "69"))
         (rule "true_left" (formula "69"))
         (rule "seqGetAlphaCast" (formula "63") (term "0"))
         (rule "castedGetAny" (formula "63") (term "0"))
          (builtin "One Step Simplification" (formula "63"))
         (rule "true_left" (formula "63"))
          (builtin "Use Operation Contract" (formula "107") (newnames "heapBefore_addInputCols_0,exc_1083,heapAfter_addInputCols_0,anon_heap_addInputCols_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::addInputCols(java.util.ArrayList,java.util.ArrayList,org.apache.commons.csv.CSVRecord)].JML normal_behavior operation contract.0"))
         (branch "Post (addInputCols)"
             (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "92")) (ifInst ""  (formula "103")) (ifInst ""  (formula "112")) (ifInst ""  (formula "92")) (ifInst ""  (formula "103")) (ifInst ""  (formula "112")))
             (builtin "One Step Simplification" (formula "89"))
             (builtin "One Step Simplification" (formula "88"))
             (builtin "One Step Simplification" (formula "111"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "88"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "91"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "94"))
            (rule "andLeft" (formula "93"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "95"))
            (rule "andLeft" (formula "94"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "96"))
            (rule "notLeft" (formula "95"))
            (rule "andLeft" (formula "91"))
            (rule "andLeft" (formula "97"))
            (rule "eqSymm" (formula "94") (term "1,0,1,0"))
            (rule "eqSymm" (formula "103"))
            (rule "dismissNonSelectedField" (formula "102") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (ifseqformula "80"))
            (rule "replace_known_left" (formula "102") (term "0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "102"))
            (rule "true_left" (formula "102"))
            (rule "dismissNonSelectedField" (formula "94") (term "0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "94") (term "0,1,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "101") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (ifseqformula "80"))
            (rule "castedGetAny" (formula "95") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "95") (term "0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "100") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (ifseqformula "80"))
            (rule "replace_known_right" (formula "100") (term "0") (ifseqformula "103"))
             (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "82")))
            (rule "true_left" (formula "100"))
            (rule "castedGetAny" (formula "94") (term "1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "94") (term "0,0,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "95") (term "0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "94") (term "0,1,1,0,1,0"))
            (rule "castedGetAny" (formula "94") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "95") (term "0,0,0"))
            (rule "blockEmpty" (formula "122") (term "1"))
            (rule "applyEq" (formula "93") (term "6") (ifseqformula "89"))
            (rule "pullOutSelect" (formula "94") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_6"))
            (rule "applyEq" (formula "96") (term "0,1,1,0,0") (ifseqformula "94"))
            (rule "applyEq" (formula "95") (term "0,0,1,0,1,0") (ifseqformula "94"))
            (rule "applyEq" (formula "96") (term "0,0,0,1,0") (ifseqformula "94"))
            (rule "simplifySelectOfAnonEQ" (formula "94") (ifseqformula "80"))
             (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "115")))
            (rule "ifthenelse_negated" (formula "94") (term "0"))
            (rule "pullOutSelect" (formula "95") (term "0,1,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
            (rule "applyEq" (formula "96") (term "0,1,1,0,1,0") (ifseqformula "95"))
            (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "80"))
             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "125")) (ifInst ""  (formula "52")))
            (rule "applyEqReverse" (formula "96") (term "0,1,1,0,1,0") (ifseqformula "95"))
            (rule "applyEqReverse" (formula "96") (term "0,1,1,0,0,1,0") (ifseqformula "95"))
            (rule "hideAuxiliaryEq" (formula "95"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "90") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "90") (term "1,0,0,1"))
            (rule "expand_inInt" (formula "90") (term "1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,1"))
            (rule "replace_int_MAX" (formula "90") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "90") (term "0,1,1,0,0,1,0"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "90"))
            (rule "eqSymm" (formula "90"))
            (rule "castedGetAny" (formula "92") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "91") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "92") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0"))
            (rule "pullOutSelect" (formula "92") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
            (rule "applyEq" (formula "93") (term "0,0,0,1,0") (ifseqformula "92"))
            (rule "applyEq" (formula "90") (term "0,0") (ifseqformula "92"))
            (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "127")))
            (rule "eqSymm" (formula "90"))
            (rule "dismissNonSelectedField" (formula "92") (term "2,0"))
            (rule "elementOfSingleton" (formula "92") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,0") (ifseqformula "80"))
            (rule "replace_known_left" (formula "92") (term "0,0,0,0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "80"))
             (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "127")) (ifInst ""  (formula "52")))
            (rule "applyEqReverse" (formula "93") (term "0,1,1,0,0,0") (ifseqformula "92"))
            (rule "applyEqReverse" (formula "90") (term "0,1") (ifseqformula "92"))
            (rule "applyEqReverse" (formula "93") (term "0,0,0,1,0") (ifseqformula "92"))
            (rule "hideAuxiliaryEq" (formula "92"))
            (rule "applyEq" (formula "92") (term "1,1,0,0,0") (ifseqformula "55"))
            (rule "applyEq" (formula "90") (term "1") (ifseqformula "55"))
            (rule "pullOutSelect" (formula "91") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
            (rule "applyEq" (formula "90") (term "0,0") (ifseqformula "91"))
            (rule "applyEq" (formula "92") (term "0,0,0,1,0") (ifseqformula "91"))
            (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "127")))
            (rule "eqSymm" (formula "90"))
            (rule "dismissNonSelectedField" (formula "91") (term "0,0,1,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "80"))
            (rule "replace_known_left" (formula "91") (term "0,0,1,0,0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "91"))
            (rule "elementOfSingleton" (formula "91") (term "0,0"))
             (builtin "One Step Simplification" (formula "91"))
            (rule "simplifySelectOfStore" (formula "91"))
             (builtin "One Step Simplification" (formula "91"))
            (rule "replaceKnownSelect_taclet0020_23" (formula "91") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_24" (formula "91") (term "0"))
            (rule "applyEqReverse" (formula "92") (term "0,1,1,0,0,0") (ifseqformula "91"))
            (rule "applyEqReverse" (formula "90") (term "0,1") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "90"))
            (rule "true_left" (formula "90"))
            (rule "applyEqReverse" (formula "91") (term "0,0,0,1,0") (ifseqformula "90"))
            (rule "hideAuxiliaryEq" (formula "90"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "98") (inst "i=i") (inst "i_0=i_0"))
            (rule "replaceKnownSelect_taclet0020_29" (formula "98") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_30" (formula "98") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet0020_29" (formula "98") (term "0,0,0,0,1,0,1,0"))
            (rule "replaceKnownSelect_taclet0020_29" (formula "98") (term "0,1,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_30" (formula "98") (term "0,0,0,0,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_30" (formula "98") (term "0,1,1,0,0,0,1,0"))
            (rule "expand_inInt" (formula "98") (term "1,0,0,1,0"))
            (rule "expand_inInt" (formula "98") (term "1,0,0,1"))
            (rule "replace_int_MIN" (formula "98") (term "0,1,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "98") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "98") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "98") (term "1,0,1,0,0,1"))
            (rule "andLeft" (formula "98"))
            (rule "andLeft" (formula "98"))
            (rule "eqSymm" (formula "98"))
            (rule "dismissNonSelectedField" (formula "100") (term "0,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0020_26" (formula "100") (term "0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_27" (formula "100") (term "0,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "100") (term "0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0020_26" (formula "100") (term "0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_27" (formula "100") (term "0,1,1,0,0,0"))
            (rule "castedGetAny" (formula "99") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "98") (term "0,0"))
            (rule "replaceKnownSelect_taclet0020_26" (formula "98") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0020_27" (formula "98") (term "0,0"))
            (rule "castedGetAny" (formula "99") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "1,1,0,0"))
            (rule "applyEq" (formula "98") (term "1,1,0,0,0") (ifseqformula "55"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "93"))
            (rule "true_left" (formula "93"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "92"))
            (rule "true_left" (formula "92"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "97"))
            (rule "true_left" (formula "97"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "96"))
            (rule "true_left" (formula "96"))
            (rule "commute_or" (formula "97"))
            (rule "commute_and" (formula "94") (term "0,0"))
            (rule "commute_and" (formula "95") (term "0,0"))
            (rule "commute_and" (formula "91") (term "1,0,0"))
            (rule "commute_and" (formula "90") (term "1,0,0"))
            (rule "commute_and" (formula "94") (term "0,0,1,0"))
            (rule "commute_and" (formula "91") (term "0,0,0"))
            (rule "commute_and" (formula "90") (term "0,0,0"))
            (rule "lenNonNegative" (formula "70") (term "1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "70"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "49"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "commute_and_2" (formula "96") (term "0,1,0"))
            (rule "lenNonNegative" (formula "86") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "86"))
            (rule "applyEq" (formula "86") (term "0") (ifseqformula "87"))
            (rule "qeq_literals" (formula "86"))
            (rule "true_left" (formula "86"))
            (rule "methodCallUnfoldTarget" (formula "121") (term "1") (inst "#v0=a"))
            (rule "variableDeclaration" (formula "121") (term "1") (newnames "a_2"))
            (rule "activeUseStaticFieldReadAccess" (formula "121") (term "1"))
            (rule "assignment_read_static_attribute" (formula "121") (term "1"))
             (builtin "One Step Simplification" (formula "121"))
            (rule "pullOutSelect" (formula "121") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet020_17" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet020_18" (formula "1") (term "2,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "122") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "shift_paren_and" (formula "93") (term "0,0"))
            (rule "commute_and_2" (formula "93") (term "0,0,0"))
            (rule "shift_paren_and" (formula "92") (term "0,0"))
            (rule "commute_and_2" (formula "92") (term "0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "50"))
            (rule "applyEq" (formula "59") (term "1,0,1") (ifseqformula "60"))
            (rule "applyEqRigid" (formula "59") (term "0,0") (ifseqformula "60"))
            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "105"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "50"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "51"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "1") (ifseqformula "52"))
            (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "108")))
            (rule "true_left" (formula "62"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "52"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "120") (term "0") (ifseqformula "53"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "121"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "54"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "55"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "118") (term "0") (ifseqformula "56"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "119"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "101") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "101"))
            (rule "applyEqReverse" (formula "102") (term "0,1,0,0,0") (ifseqformula "101"))
            (rule "applyEqReverse" (formula "103") (term "0,0,0,1,0") (ifseqformula "101"))
            (rule "applyEqReverse" (formula "103") (term "0,1,0,0,0") (ifseqformula "101"))
            (rule "applyEqReverse" (formula "102") (term "0,0,1,0,0,1,0") (ifseqformula "101"))
            (rule "hideAuxiliaryEq" (formula "101"))
            (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "102"))
            (rule "true_left" (formula "102"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "57"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "58"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "59"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "60"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "61"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "1,0,1") (ifseqformula "62"))
            (rule "replace_known_right" (formula "82") (term "0") (ifseqformula "122"))
             (builtin "One Step Simplification" (formula "82"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "62"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "63"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "64"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallUnfoldArguments" (formula "132") (term "1"))
            (rule "variableDeclarationAssign" (formula "132") (term "1"))
            (rule "variableDeclaration" (formula "132") (term "1") (newnames "var_6"))
            (rule "assignment" (formula "132") (term "1"))
             (builtin "One Step Simplification" (formula "132"))
            (rule "variableDeclarationAssign" (formula "132") (term "1"))
            (rule "variableDeclaration" (formula "132") (term "1") (newnames "var_7"))
            (rule "assignment" (formula "132") (term "1"))
             (builtin "One Step Simplification" (formula "132"))
            (rule "variableDeclarationAssign" (formula "132") (term "1"))
            (rule "variableDeclaration" (formula "132") (term "1") (newnames "var_8"))
            (rule "assignment_read_attribute" (formula "132") (term "1"))
            (branch "Normal Execution (_dataForVoter_35_B != null)"
                (builtin "One Step Simplification" (formula "133"))
                (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "135")))
               (rule "false_right" (formula "132"))
               (rule "pullOutSelect" (formula "132") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "108"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "100"))
               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")) (ifInst ""  (formula "70")))
               (rule "applyEqReverse" (formula "133") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
                (builtin "Use Operation Contract" (formula "132") (newnames "heapBefore_add,exc_1084,heapAfter_add,anon_heap_add") (contract "java.util.ArrayList[java.util.List::add(int,java.lang.Object)].JML normal_behavior operation contract.0"))
               (branch "Post (add)"
                   (builtin "One Step Simplification" (formula "112"))
                   (builtin "One Step Simplification" (formula "113"))
                   (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "134")) (ifInst ""  (formula "134")))
                   (builtin "One Step Simplification" (formula "136"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,1") (ifseqformula "107"))
                  (rule "expand_inInt" (formula "114") (term "1,0,1"))
                  (rule "replace_int_MAX" (formula "114") (term "1,0,1,0,1"))
                  (rule "replace_int_MIN" (formula "114") (term "0,1,1,0,1"))
                  (rule "leq_literals" (formula "114") (term "0,1,0,1"))
                   (builtin "One Step Simplification" (formula "114"))
                  (rule "leq_literals" (formula "114") (term "1,0,1"))
                   (builtin "One Step Simplification" (formula "114"))
                  (rule "andLeft" (formula "112"))
                  (rule "andLeft" (formula "115"))
                  (rule "andLeft" (formula "113"))
                  (rule "andLeft" (formula "117"))
                  (rule "andLeft" (formula "114"))
                  (rule "andLeft" (formula "114"))
                  (rule "eqSymm" (formula "114"))
                  (rule "dismissNonSelectedField" (formula "119") (term "0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0") (ifseqformula "99"))
                  (rule "replace_known_left" (formula "119") (term "0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "119"))
                  (rule "true_left" (formula "119"))
                  (rule "applyEq" (formula "116") (term "5") (ifseqformula "113"))
                  (rule "pullOutSelect" (formula "114") (term "1") (inst "selectSK=java_util_Collection_seq_7"))
                  (rule "simplifySelectOfAnonEQ" (formula "114") (ifseqformula "112"))
                   (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "122")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0,0") (ifseqformula "107"))
                  (rule "elementOfSingleton" (formula "114") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "114"))
                  (rule "applyEqReverse" (formula "115") (term "1") (ifseqformula "114"))
                  (rule "hideAuxiliaryEq" (formula "114"))
                  (rule "pullOutSelect" (formula "114") (term "1,0") (inst "selectSK=java_util_Collection_seq_8"))
                  (rule "simplifySelectOfAnonEQ" (formula "114") (ifseqformula "107"))
                   (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "122")))
                  (rule "eqSymm" (formula "115"))
                  (rule "dismissNonSelectedField" (formula "114") (term "2,0"))
                  (rule "replaceKnownSelect_taclet020_15" (formula "114") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet020_16" (formula "114") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "114") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0,0") (ifseqformula "99"))
                  (rule "replace_known_left" (formula "114") (term "1,0,1,0,0") (ifseqformula "101"))
                   (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "121")))
                  (rule "elementOfSingleton" (formula "114") (term "0,0"))
                   (builtin "One Step Simplification" (formula "114"))
                  (rule "applyEqReverse" (formula "115") (term "1,1") (ifseqformula "114"))
                  (rule "hideAuxiliaryEq" (formula "114"))
                  (rule "eqSymm" (formula "114"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "117"))
                  (rule "true_left" (formula "117"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "115"))
                  (rule "true_left" (formula "115"))
                  (rule "methodCallEmpty" (formula "138") (term "1"))
                  (rule "tryEmpty" (formula "138") (term "1"))
                  (rule "emptyModality" (formula "138") (term "1"))
                  (rule "andRight" (formula "169"))
                  (branch
                     (rule "andRight" (formula "165"))
                     (branch
                         (builtin "One Step Simplification" (formula "138"))
                        (rule "notRight" (formula "138"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "167") (inst "sk=j_0"))
                        (rule "impRight" (formula "167"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "4"))
                        (rule "eqSymm" (formula "169") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "84"))
                        (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "91"))
                        (rule "polySimp_mulComm0" (formula "91") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "91") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "60"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "60") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "169") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "169") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "86") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "87") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "92") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "114") (term "1,2") (ifseqformula "3"))
                        (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "5"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "117"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "elementOfSingleton" (formula "25") (term "0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "112"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                        (rule "elementOfSingleton" (formula "25") (term "0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "104"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "80") (term "1,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "89") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "83") (term "1,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "90") (term "1,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "113") (term "5") (ifseqformula "3"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "113") (term "0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "5"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "116"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "125")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0,0") (ifseqformula "111"))
                        (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1,0,0") (ifseqformula "103"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "144") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "80") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "93") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "85") (term "1,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "82") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "86") (term "1,1,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "121") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "93") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "3"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "93") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                        (rule "polySimp_elimOne" (formula "65") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "168") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "168") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "168") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "168") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "168") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "168") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                        (rule "polySimp_elimOne" (formula "83") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                        (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                        (rule "polySimp_elimOne" (formula "90") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "93") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0"))
                        (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "112"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "126")))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0,0") (ifseqformula "104"))
                        (rule "replace_known_left" (formula "25") (term "0,0,1,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "elementOfSingleton" (formula "25") (term "0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "2,0"))
                        (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "105"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "127")) (ifInst ""  (formula "28")))
                        (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "28"))
                        (rule "inEqSimp_and_subsumption3" (formula "53") (term "0,0,0"))
                        (rule "leq_literals" (formula "53") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "inEqSimp_and_subsumption3" (formula "77") (term "0,0,0"))
                        (rule "leq_literals" (formula "77") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_and_subsumption3" (formula "54") (term "0,0,0"))
                        (rule "leq_literals" (formula "54") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                        (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "78"))
                        (rule "nnf_ex2all" (formula "169"))
                        (rule "nnf_imp2or" (formula "63") (term "0"))
                        (rule "nnf_imp2or" (formula "58") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_imp2or" (formula "64") (term "0"))
                        (rule "nnf_imp2or" (formula "87") (term "0"))
                        (rule "nnf_imp2or" (formula "88") (term "0"))
                        (rule "nnf_imp2or" (formula "82") (term "0"))
                        (rule "nnf_imp2or" (formula "95") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_imp2or" (formula "78") (term "0"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "79") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "63") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "58") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                        (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "70") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                        (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "70") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                        (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "64") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "87") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0"))
                        (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "87") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0"))
                        (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "87") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "87") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "88") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "88") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "88") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0"))
                        (rule "times_zero_1" (formula "88") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "88") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0"))
                        (rule "mul_literals" (formula "88") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "82") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "82") (term "1,0,0"))
                        (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "82") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
                        (rule "mul_literals" (formula "82") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "82") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "82") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "82") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "82") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "82") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "95") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                        (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "95") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                        (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "78") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "54") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "54") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "78") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "78") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "78") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "78") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "55") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "79") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,1,0,0,0"))
                        (rule "commute_or_2" (formula "63") (term "0"))
                        (rule "commute_or_2" (formula "58") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "120") (inst "iv=iv"))
                        (rule "andLeft" (formula "120"))
                        (rule "lenOfSeqConcat" (formula "121") (term "1,1,0,0"))
                         (builtin "One Step Simplification" (formula "121"))
                        (rule "lenOfSeqConcat" (formula "120") (term "0"))
                         (builtin "One Step Simplification" (formula "120"))
                        (rule "polySimp_homoEq" (formula "120"))
                        (rule "polySimp_mulComm0" (formula "120") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "120") (term "1,0"))
                        (rule "mul_literals" (formula "120") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "120") (term "0"))
                        (rule "polySimp_addComm0" (formula "120") (term "0,0"))
                        (rule "lenOfSeqConcatEQ" (formula "120") (term "1,0,0") (ifseqformula "122"))
                         (builtin "One Step Simplification" (formula "120"))
                        (rule "polySimp_addAssoc" (formula "120") (term "0,0"))
                        (rule "add_literals" (formula "120") (term "0,0,0"))
                        (rule "add_zero_left" (formula "120") (term "0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "120") (term "0"))
                        (rule "add_literals" (formula "120") (term "1,0"))
                        (rule "times_zero_1" (formula "120") (term "0"))
                         (builtin "One Step Simplification" (formula "120"))
                        (rule "true_left" (formula "120"))
                        (rule "inEqSimp_ltToLeq" (formula "120") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "120") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "120") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "120") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "120") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "120") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0,0"))
                        (rule "applyEq" (formula "120") (term "0,0,1,0") (ifseqformula "121"))
                         (builtin "One Step Simplification" (formula "120"))
                        (rule "true_left" (formula "120"))
                        (rule "commute_or_2" (formula "64") (term "0"))
                        (rule "commute_or" (formula "70") (term "0,0"))
                        (rule "commute_or_2" (formula "87") (term "0"))
                        (rule "commute_and" (formula "70") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "88") (term "0"))
                        (rule "commute_and" (formula "95") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "82") (term "0"))
                        (rule "commute_or" (formula "95") (term "0,0"))
                        (rule "seqGetAlphaCast" (formula "86") (term "0"))
                        (rule "castedGetAny" (formula "86") (term "0"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "true_left" (formula "86"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "lenNonNegative" (formula "94") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "94"))
                        (rule "seqGetAlphaCast" (formula "93") (term "0"))
                        (rule "castedGetAny" (formula "93") (term "0"))
                         (builtin "One Step Simplification" (formula "93"))
                        (rule "true_left" (formula "93"))
                        (rule "lenNonNegative" (formula "84") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "84"))
                        (rule "commute_or_2" (formula "54") (term "0"))
                        (rule "lenNonNegative" (formula "90") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "90"))
                        (rule "commute_or_2" (formula "78") (term "0"))
                        (rule "commute_or_2" (formula "55") (term "0"))
                        (rule "commute_or_2" (formula "79") (term "0"))
                        (rule "ifthenelse_split" (formula "26") (term "0"))
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                           (rule "referencedObjectIsCreatedRightEQ" (formula "125") (ifseqformula "26") (ifseqformula "126"))
                           (rule "close" (formula "125") (ifseqformula "72"))
                        )
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                           (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "173") (term "0,1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "eqSymm" (formula "172"))
                           (rule "commute_or" (formula "61") (term "0,0"))
                           (rule "commute_or" (formula "56") (term "0,0"))
                           (rule "commute_or" (formula "62") (term "0,0"))
                           (rule "commute_or" (formula "85") (term "0,0"))
                           (rule "commute_or" (formula "86") (term "0,0"))
                           (rule "commute_or" (formula "80") (term "0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "61") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "commute_or_2" (formula "62") (term "0"))
                           (rule "commute_or_2" (formula "85") (term "0"))
                           (rule "commute_or_2" (formula "86") (term "0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "80") (term "0"))
                           (rule "commute_or_2" (formula "76") (term "0,0"))
                           (rule "commute_or_2" (formula "53") (term "0,0"))
                           (rule "commute_or_2" (formula "77") (term "0,0"))
                           (rule "commute_and_2" (formula "68") (term "0,1,0"))
                           (rule "commute_and_2" (formula "93") (term "0,1,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commute_or" (formula "76") (term "0,0,0"))
                           (rule "commute_or_2" (formula "76") (term "0,0"))
                           (rule "commute_or_2" (formula "76") (term "0"))
                           (rule "commute_or" (formula "53") (term "0,0,0"))
                           (rule "commute_or_2" (formula "53") (term "0,0"))
                           (rule "commute_or_2" (formula "53") (term "0"))
                           (rule "commute_or" (formula "77") (term "0,0,0"))
                           (rule "commute_or_2" (formula "77") (term "0,0"))
                           (rule "commute_or_2" (formula "77") (term "0"))
                           (rule "ex_pull_out3" (formula "68") (term "0"))
                           (rule "cnf_rightDist" (formula "68") (term "0,0"))
                           (rule "shift_paren_or" (formula "68") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "68") (term "0,0,0"))
                           (rule "commute_or_2" (formula "68") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "68") (term "1,0,0,0"))
                           (rule "commute_or" (formula "68") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "93") (term "0"))
                           (rule "cnf_rightDist" (formula "93") (term "0,0"))
                           (rule "shift_paren_or" (formula "93") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "93") (term "0,0,0"))
                           (rule "commute_or_2" (formula "93") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "93") (term "1,0,0,0"))
                           (rule "commute_or" (formula "93") (term "0,0,0,0,0"))
                           (rule "commute_and" (formula "68") (term "0,0,0"))
                           (rule "commute_and_2" (formula "68") (term "0,0"))
                           (rule "commute_and" (formula "93") (term "0,0,0"))
                           (rule "commute_and_2" (formula "93") (term "0,0"))
                           (rule "allLeft" (formula "85") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                           (rule "applyEq" (formula "85") (term "0,0,0,0") (ifseqformula "92"))
                           (rule "replace_known_right" (formula "85") (term "0,0,0") (ifseqformula "133"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "true_left" (formula "85"))
                           (rule "allLeft" (formula "61") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                           (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "67"))
                           (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "159"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "true_left" (formula "61"))
                           (rule "allLeft" (formula "56") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                           (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "61"))
                           (rule "replace_known_right" (formula "56") (term "0,0,0") (ifseqformula "159"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "true_left" (formula "56"))
                           (rule "allLeft" (formula "80") (inst "t=i_2_1"))
                           (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                           (rule "applyEq" (formula "80") (term "0,0,0,0") (ifseqformula "85"))
                           (rule "replace_known_right" (formula "80") (term "0,0,0") (ifseqformula "133"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "true_left" (formula "80"))
                           (rule "allLeft" (formula "62") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "62") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "inEqSimp_contradInEq1" (formula "62") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1"))
                           (rule "add_literals" (formula "62") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "62") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "62") (term "0,0,1"))
                           (rule "leq_literals" (formula "62") (term "0,1"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "notLeft" (formula "62"))
                           (rule "allLeft" (formula "68") (inst "t=j_0"))
                           (rule "exLeft" (formula "68") (inst "sk=i_2"))
                           (rule "andLeft" (formula "68"))
                           (rule "andLeft" (formula "68"))
                           (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "69") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1"))
                           (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                           (rule "add_literals" (formula "68") (term "0,0,1"))
                           (rule "leq_literals" (formula "68") (term "0,1"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                           (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                           (rule "add_literals" (formula "69") (term "0,0,1"))
                           (rule "leq_literals" (formula "69") (term "0,1"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                           (rule "add_literals" (formula "70") (term "0,0,1"))
                           (rule "leq_literals" (formula "70") (term "0,1"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "68") (term "0,1"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "70") (term "0,1"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "applyEq" (formula "124") (term "0") (ifseqformula "70"))
                           (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "70"))
                           (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "69") (term "0,1"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0,0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "87") (term "0") (ifseqformula "139"))
                            (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "16")))
                           (rule "true_left" (formula "87"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "134") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "135"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "140") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "141"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "1") (ifseqformula "72"))
                           (rule "replace_known_left" (formula "94") (term "1") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "137")))
                           (rule "true_left" (formula "94"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "133") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "134"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "140"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "143") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "144"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "143"))
                            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
                           (rule "true_left" (formula "10"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "138"))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
                           (rule "true_left" (formula "13"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "135") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "136"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "142"))
                            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                           (rule "true_left" (formula "14"))
                           (rule "lenNonNegative" (formula "23") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "allLeft" (formula "1") (inst "t=i_2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "69"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "70"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "165"))
                        (branch
                            (builtin "One Step Simplification" (formula "138"))
                           (rule "notRight" (formula "138"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "167") (inst "sk=i_2"))
                           (rule "impRight" (formula "167"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "169"))
                           (rule "eqSymm" (formula "5"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "85"))
                           (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "85") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "92"))
                           (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "92") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0") (ifseqformula "113"))
                           (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "eqSymm" (formula "27") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,1,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1,1,0,0") (ifseqformula "105"))
                           (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "115") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "82") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "92") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "91") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "95") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "95") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "115") (term "1,2") (ifseqformula "4"))
                           (rule "applyEq" (formula "115") (term "5") (ifseqformula "4"))
                           (rule "applyEq" (formula "90") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "123") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "146") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "82") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "6"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "elementOfSingleton" (formula "26") (term "0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "113"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "elementOfSingleton" (formula "26") (term "0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "simplifySelectOfStore" (formula "26"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,0,0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,2,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,0,1,0,1,1,0,0") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "eqSymm" (formula "26") (term "0,0,0"))
                           (rule "replace_known_right" (formula "26") (term "0,0,1,0,0") (ifseqformula "126"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
                           (rule "applyEq" (formula "92") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "83") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "86") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                           (rule "polySimp_elimOne" (formula "60") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "94") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                           (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                           (rule "polySimp_elimOne" (formula "91") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "94") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "84"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                           (rule "polySimp_elimOne" (formula "84") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                           (rule "pullOutSelect" (formula "26") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "113"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "127")))
                           (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0,0") (ifseqformula "105"))
                           (rule "replace_known_left" (formula "26") (term "0,0,1,0,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                           (rule "elementOfSingleton" (formula "26") (term "0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "pullOutSelect" (formula "26") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "106"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "128")) (ifInst ""  (formula "29")))
                           (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "29"))
                           (rule "inEqSimp_and_subsumption3" (formula "55") (term "0,0,0"))
                           (rule "leq_literals" (formula "55") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "inEqSimp_and_subsumption3" (formula "79") (term "0,0,0"))
                           (rule "leq_literals" (formula "79") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                           (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "78"))
                           (rule "inEqSimp_and_subsumption3" (formula "54") (term "0,0,0"))
                           (rule "leq_literals" (formula "54") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "54"))
                           (rule "nnf_imp2or" (formula "63") (term "0"))
                           (rule "nnf_imp2or" (formula "58") (term "0"))
                           (rule "nnf_imp2or" (formula "70") (term "0"))
                           (rule "nnf_imp2or" (formula "64") (term "0"))
                           (rule "nnf_imp2or" (formula "88") (term "0"))
                           (rule "nnf_imp2or" (formula "82") (term "0"))
                           (rule "nnf_imp2or" (formula "95") (term "0"))
                           (rule "nnf_imp2or" (formula "87") (term "0"))
                           (rule "nnf_imp2or" (formula "55") (term "0"))
                           (rule "nnf_imp2or" (formula "79") (term "0"))
                           (rule "nnf_imp2or" (formula "78") (term "0"))
                           (rule "nnf_imp2or" (formula "54") (term "0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "58") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                           (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                           (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "88") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0"))
                           (rule "mul_literals" (formula "88") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "88") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0"))
                           (rule "mul_literals" (formula "88") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "88") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "88") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "82") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "82") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "82") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "82") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "82") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "82") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "82") (term "1,0,0"))
                           (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "82") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
                           (rule "mul_literals" (formula "82") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "95") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                           (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                           (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "87") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0"))
                           (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "87") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0"))
                           (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "87") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "87") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "55") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "78") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                           (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                           (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "54") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "55") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "78") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "78") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "78") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "78") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "78") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "78") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or_2" (formula "58") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "120") (inst "iv=iv"))
                           (rule "andLeft" (formula "120"))
                           (rule "lenOfSeqConcat" (formula "120") (term "0"))
                            (builtin "One Step Simplification" (formula "120"))
                           (rule "polySimp_homoEq" (formula "120"))
                           (rule "polySimp_mulComm0" (formula "120") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "120") (term "1,0"))
                           (rule "mul_literals" (formula "120") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "120") (term "0"))
                           (rule "polySimp_addComm0" (formula "120") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "121") (term "1,1,0,0"))
                            (builtin "One Step Simplification" (formula "121"))
                           (rule "lenOfSeqConcatEQ" (formula "120") (term "1,0,0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "120"))
                           (rule "polySimp_addAssoc" (formula "120") (term "0,0"))
                           (rule "add_literals" (formula "120") (term "0,0,0"))
                           (rule "add_zero_left" (formula "120") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "120") (term "0"))
                           (rule "add_literals" (formula "120") (term "1,0"))
                           (rule "times_zero_1" (formula "120") (term "0"))
                            (builtin "One Step Simplification" (formula "120"))
                           (rule "true_left" (formula "120"))
                           (rule "inEqSimp_ltToLeq" (formula "120") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "120") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "120") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "120") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "120") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "120") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0,0"))
                           (rule "applyEq" (formula "120") (term "0,0,1,0") (ifseqformula "121"))
                            (builtin "One Step Simplification" (formula "120"))
                           (rule "true_left" (formula "120"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "commute_or" (formula "70") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "1") (term "0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commute_or_2" (formula "88") (term "0"))
                           (rule "commute_or_2" (formula "82") (term "0"))
                           (rule "commute_and" (formula "70") (term "0,0,1,0"))
                           (rule "commute_and" (formula "95") (term "0,0,1,0"))
                           (rule "seqGetAlphaCast" (formula "93") (term "0"))
                           (rule "castedGetAny" (formula "93") (term "0"))
                            (builtin "One Step Simplification" (formula "93"))
                           (rule "true_left" (formula "93"))
                           (rule "commute_or_2" (formula "87") (term "0"))
                           (rule "commute_or" (formula "95") (term "0,0"))
                           (rule "lenNonNegative" (formula "90") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "90"))
                           (rule "commute_or_2" (formula "55") (term "0"))
                           (rule "commute_or_2" (formula "79") (term "0"))
                           (rule "lenNonNegative" (formula "84") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "84"))
                           (rule "lenNonNegative" (formula "94") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "94"))
                           (rule "seqGetAlphaCast" (formula "86") (term "0"))
                           (rule "castedGetAny" (formula "86") (term "0"))
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "true_left" (formula "86"))
                           (rule "commute_or_2" (formula "78") (term "0"))
                           (rule "commute_or_2" (formula "54") (term "0"))
                           (rule "ifthenelse_split" (formula "26") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "125") (ifseqformula "26") (ifseqformula "126"))
                              (rule "close" (formula "125") (ifseqformula "72"))
                           )
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                              (rule "applyEqReverse" (formula "27") (term "2,0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "122"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEqReverse" (formula "173") (term "0,1") (ifseqformula "26"))
                              (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "eqSymm" (formula "172"))
                              (rule "commute_or" (formula "61") (term "0,0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "commute_or" (formula "62") (term "0,0"))
                              (rule "commute_or" (formula "86") (term "0,0"))
                              (rule "commute_or" (formula "80") (term "0,0"))
                              (rule "commute_or" (formula "85") (term "0,0"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "commute_or_2" (formula "61") (term "0"))
                              (rule "commute_or_2" (formula "77") (term "0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or_2" (formula "62") (term "0"))
                              (rule "commute_or_2" (formula "86") (term "0"))
                              (rule "commute_or_2" (formula "80") (term "0"))
                              (rule "commute_or_2" (formula "85") (term "0"))
                              (rule "commute_or_2" (formula "76") (term "0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "53") (term "0,0,0"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "commute_or_2" (formula "53") (term "0"))
                              (rule "commute_or" (formula "77") (term "0,0,0"))
                              (rule "commute_or_2" (formula "77") (term "0,0"))
                              (rule "commute_or_2" (formula "77") (term "0"))
                              (rule "commute_and_2" (formula "68") (term "0,1,0"))
                              (rule "commute_and_2" (formula "93") (term "0,1,0"))
                              (rule "commute_or" (formula "76") (term "0,0,0"))
                              (rule "commute_or_2" (formula "76") (term "0,0"))
                              (rule "commute_or_2" (formula "76") (term "0"))
                              (rule "commute_or" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "ex_pull_out3" (formula "68") (term "0"))
                              (rule "cnf_rightDist" (formula "68") (term "0,0"))
                              (rule "shift_paren_or" (formula "68") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "68") (term "0,0,0"))
                              (rule "commute_or_2" (formula "68") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "68") (term "1,0,0,0"))
                              (rule "commute_or" (formula "68") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "93") (term "0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,0"))
                              (rule "shift_paren_or" (formula "93") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "93") (term "0,0,0"))
                              (rule "commute_or_2" (formula "93") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "93") (term "1,0,0,0"))
                              (rule "commute_or" (formula "93") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "62") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "inEqSimp_commuteGeq" (formula "62") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "62") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "62") (term "0,0"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "inEqSimp_contradInEq1" (formula "62") (ifseqformula "3"))
                              (rule "andLeft" (formula "62"))
                              (rule "inEqSimp_homoInEq1" (formula "62"))
                              (rule "polySimp_pullOutFactor1b" (formula "62") (term "0"))
                              (rule "add_literals" (formula "62") (term "1,1,0"))
                              (rule "times_zero_1" (formula "62") (term "1,0"))
                              (rule "add_literals" (formula "62") (term "0"))
                              (rule "leq_literals" (formula "62"))
                              (rule "closeFalse" (formula "62"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "165"))
                           (branch
                               (builtin "One Step Simplification" (formula "138"))
                              (rule "notRight" (formula "165"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "143") (ifseqformula "1") (ifseqformula "144"))
                              (rule "close" (formula "143") (ifseqformula "42"))
                           )
                           (branch
                              (rule "andRight" (formula "165"))
                              (branch
                                  (builtin "One Step Simplification" (formula "138"))
                                 (rule "notRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "167") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "167"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "169"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "63") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "94"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "94") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "87") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "125") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "117") (term "5") (ifseqformula "6"))
                                 (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "120"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "115"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfStore" (formula "28"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                                 (rule "hideAuxiliaryEq" (formula "28"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "147") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "116") (term "1,2") (ifseqformula "6"))
                                 (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "116") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "95") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "119"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "128")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "114"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0,0") (ifseqformula "106"))
                                 (rule "replace_known_left" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                 (rule "polySimp_elimOne" (formula "86") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                 (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                 (rule "polySimp_elimOne" (formula "93") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "114"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "128")))
                                 (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "106"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,1,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "27") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "129")) (ifInst ""  (formula "30")))
                                 (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                                 (rule "hideAuxiliaryEq" (formula "27"))
                                 (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "30"))
                                 (rule "inEqSimp_and_subsumption3" (formula "56") (term "0,0,0"))
                                 (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_and_subsumption3" (formula "80") (term "0,0,0"))
                                 (rule "leq_literals" (formula "80") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "inEqSimp_and_subsumption3" (formula "55") (term "0,0,0"))
                                 (rule "leq_literals" (formula "55") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_and_subsumption3" (formula "79") (term "0,0,0"))
                                 (rule "leq_literals" (formula "79") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "79"))
                                 (rule "nnf_imp2or" (formula "64") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "59") (term "0"))
                                 (rule "nnf_imp2or" (formula "71") (term "0"))
                                 (rule "nnf_imp2or" (formula "88") (term "0"))
                                 (rule "nnf_imp2or" (formula "89") (term "0"))
                                 (rule "nnf_imp2or" (formula "83") (term "0"))
                                 (rule "nnf_imp2or" (formula "96") (term "0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0"))
                                 (rule "nnf_imp2or" (formula "80") (term "0"))
                                 (rule "nnf_imp2or" (formula "55") (term "0"))
                                 (rule "nnf_imp2or" (formula "79") (term "0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "88") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "88") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "88") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0"))
                                 (rule "mul_literals" (formula "88") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "88") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0"))
                                 (rule "mul_literals" (formula "88") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "83") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "83") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "83") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
                                 (rule "mul_literals" (formula "83") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                 (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                 (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "80") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "79") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "79") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "121") (inst "iv=iv"))
                                 (rule "andLeft" (formula "121"))
                                 (rule "lenOfSeqConcat" (formula "122") (term "1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "122"))
                                 (rule "lenOfSeqConcatEQ" (formula "121") (term "1") (ifseqformula "123"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "lenOfSeqConcat" (formula "121") (term "0"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "true_left" (formula "121"))
                                 (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "121") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "121") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "121") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "121") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "121") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "121") (term "0,0,0"))
                                 (rule "applyEq" (formula "121") (term "0,0,1,0") (ifseqformula "122"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "true_left" (formula "121"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "88") (term "0"))
                                 (rule "commute_or" (formula "71") (term "0,0"))
                                 (rule "commute_or_2" (formula "89") (term "0"))
                                 (rule "commute_and" (formula "71") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "96") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "83") (term "0"))
                                 (rule "commute_or" (formula "96") (term "0,0"))
                                 (rule "lenNonNegative" (formula "85") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "85"))
                                 (rule "lenNonNegative" (formula "95") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "95"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "94") (term "0"))
                                 (rule "castedGetAny" (formula "94") (term "0"))
                                  (builtin "One Step Simplification" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                 (rule "lenNonNegative" (formula "91") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "91"))
                                 (rule "commute_or_2" (formula "80") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                 (rule "castedGetAny" (formula "87") (term "0"))
                                  (builtin "One Step Simplification" (formula "87"))
                                 (rule "true_left" (formula "87"))
                                 (rule "commute_or_2" (formula "55") (term "0"))
                                 (rule "commute_or_2" (formula "79") (term "0"))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "126") (ifseqformula "27") (ifseqformula "127"))
                                    (rule "close" (formula "126") (ifseqformula "73"))
                                 )
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                                    (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "123"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqReverse" (formula "174") (term "0,1") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "eqSymm" (formula "173"))
                                    (rule "commute_or" (formula "62") (term "0,0"))
                                    (rule "commute_or" (formula "63") (term "0,0"))
                                    (rule "commute_or" (formula "57") (term "0,0"))
                                    (rule "commute_or" (formula "86") (term "0,0"))
                                    (rule "commute_or" (formula "87") (term "0,0"))
                                    (rule "commute_or" (formula "81") (term "0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "commute_or_2" (formula "57") (term "0"))
                                    (rule "commute_or_2" (formula "86") (term "0"))
                                    (rule "commute_or_2" (formula "87") (term "0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "81") (term "0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0"))
                                    (rule "commute_and_2" (formula "69") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "94") (term "0,1,0"))
                                    (rule "commute_or" (formula "78") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0"))
                                    (rule "commute_or" (formula "77") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0"))
                                    (rule "ex_pull_out3" (formula "69") (term "0"))
                                    (rule "cnf_rightDist" (formula "69") (term "0,0"))
                                    (rule "shift_paren_or" (formula "69") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "69") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "69") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "69") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "69") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "94") (term "0"))
                                    (rule "cnf_rightDist" (formula "94") (term "0,0"))
                                    (rule "shift_paren_or" (formula "94") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "94") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "94") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "94") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "94") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "53") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1"))
                                    (rule "leq_literals" (formula "53") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq0" (formula "53") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "53") (term "0"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "closeFalse" (formula "53"))
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "138"))
                                 (rule "notRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "167") (inst "sk=i_2"))
                                 (rule "impRight" (formula "167"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "169"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "inEqSimp_ltToLeq" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "87") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "63") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "94"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "94") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "120"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1,0,0") (ifseqformula "115"))
                                 (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "eqSymm" (formula "29") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,0") (ifseqformula "107"))
                                 (rule "applyEq" (formula "75") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "117") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "97") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "94") (term "1,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "84") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "95") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "120"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "115"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,0,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,0,1,0,1,1,0,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,2,0") (ifseqformula "28"))
                                 (rule "applyEqReverse" (formula "29") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "28"))
                                 (rule "hideAuxiliaryEq" (formula "28"))
                                 (rule "eqSymm" (formula "28") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,1,0,0") (ifseqformula "128"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "116") (term "1,2") (ifseqformula "6"))
                                 (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "147") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "116") (term "5") (ifseqformula "6"))
                                 (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                 (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                 (rule "polySimp_elimOne" (formula "93") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                                 (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                 (rule "polySimp_elimOne" (formula "86") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "114"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "128")))
                                 (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "106"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,1,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "elementOfSingleton" (formula "27") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                 (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "107"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "129")) (ifInst ""  (formula "30")))
                                 (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                                 (rule "hideAuxiliaryEq" (formula "27"))
                                 (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "30"))
                                 (rule "inEqSimp_and_subsumption3" (formula "56") (term "0,0,0"))
                                 (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "inEqSimp_and_subsumption3" (formula "55") (term "0,0,0"))
                                 (rule "leq_literals" (formula "55") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_and_subsumption3" (formula "80") (term "0,0,0"))
                                 (rule "leq_literals" (formula "80") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "80"))
                                 (rule "inEqSimp_and_subsumption3" (formula "79") (term "0,0,0"))
                                 (rule "leq_literals" (formula "79") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "79"))
                                 (rule "nnf_imp2or" (formula "71") (term "0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "59") (term "0"))
                                 (rule "nnf_imp2or" (formula "89") (term "0"))
                                 (rule "nnf_imp2or" (formula "96") (term "0"))
                                 (rule "nnf_imp2or" (formula "88") (term "0"))
                                 (rule "nnf_imp2or" (formula "83") (term "0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0"))
                                 (rule "nnf_imp2or" (formula "55") (term "0"))
                                 (rule "nnf_imp2or" (formula "80") (term "0"))
                                 (rule "nnf_imp2or" (formula "79") (term "0"))
                                 (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                 (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                 (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                 (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                 (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "88") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "88") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "88") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "88") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "88") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0"))
                                 (rule "mul_literals" (formula "88") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "83") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "83") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "83") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "83") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "83") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "83") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "83") (term "1,0,0"))
                                 (rule "mul_literals" (formula "83") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "83") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
                                 (rule "mul_literals" (formula "83") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "79") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "79") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "79") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or" (formula "71") (term "0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "121") (inst "iv=iv"))
                                 (rule "andLeft" (formula "121"))
                                 (rule "lenOfSeqConcat" (formula "122") (term "1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "122"))
                                 (rule "lenOfSeqConcatEQ" (formula "121") (term "1") (ifseqformula "123"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "lenOfSeqConcat" (formula "121") (term "0"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "true_left" (formula "121"))
                                 (rule "inEqSimp_ltToLeq" (formula "121") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "121") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "121") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "121") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "121") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "121") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "121") (term "0,0,0"))
                                 (rule "applyEq" (formula "121") (term "0,0,1,0") (ifseqformula "122"))
                                  (builtin "One Step Simplification" (formula "121"))
                                 (rule "true_left" (formula "121"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "89") (term "0"))
                                 (rule "commute_and" (formula "71") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "96") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "88") (term "0"))
                                 (rule "commute_or" (formula "96") (term "0,0"))
                                 (rule "lenNonNegative" (formula "85") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "85"))
                                 (rule "commute_or_2" (formula "83") (term "0"))
                                 (rule "lenNonNegative" (formula "95") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "95"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "94") (term "0"))
                                 (rule "castedGetAny" (formula "94") (term "0"))
                                  (builtin "One Step Simplification" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                 (rule "commute_or_2" (formula "55") (term "0"))
                                 (rule "lenNonNegative" (formula "91") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "91"))
                                 (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                 (rule "castedGetAny" (formula "87") (term "0"))
                                  (builtin "One Step Simplification" (formula "87"))
                                 (rule "true_left" (formula "87"))
                                 (rule "commute_or_2" (formula "80") (term "0"))
                                 (rule "commute_or_2" (formula "79") (term "0"))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "126") (ifseqformula "27") (ifseqformula "127"))
                                    (rule "close" (formula "126") (ifseqformula "73"))
                                 )
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                                    (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "123"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqReverse" (formula "174") (term "0,1") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "eqSymm" (formula "173"))
                                    (rule "commute_or" (formula "62") (term "0,0"))
                                    (rule "commute_or" (formula "63") (term "0,0"))
                                    (rule "commute_or" (formula "57") (term "0,0"))
                                    (rule "commute_or" (formula "87") (term "0,0"))
                                    (rule "commute_or" (formula "86") (term "0,0"))
                                    (rule "commute_or" (formula "81") (term "0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "commute_or_2" (formula "57") (term "0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0"))
                                    (rule "commute_or_2" (formula "87") (term "0"))
                                    (rule "commute_or_2" (formula "86") (term "0"))
                                    (rule "commute_or_2" (formula "81") (term "0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0"))
                                    (rule "commute_and_2" (formula "69") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "94") (term "0,1,0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0"))
                                    (rule "commute_or" (formula "78") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0"))
                                    (rule "commute_or" (formula "77") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0"))
                                    (rule "ex_pull_out3" (formula "69") (term "0"))
                                    (rule "cnf_rightDist" (formula "69") (term "0,0"))
                                    (rule "shift_paren_or" (formula "69") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "69") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "69") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "69") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "69") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "94") (term "0"))
                                    (rule "cnf_rightDist" (formula "94") (term "0,0"))
                                    (rule "shift_paren_or" (formula "94") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "94") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "94") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "94") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "94") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "54") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "54") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                    (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "54") (term "0,0,1"))
                                    (rule "leq_literals" (formula "54") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "54"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "165"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "138"))
                        (rule "notRight" (formula "138"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "171") (inst "sk=iv_0"))
                        (rule "impRight" (formula "171"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "169") (inst "sk=j_0"))
                        (rule "impRight" (formula "169"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "6"))
                        (rule "eqSymm" (formula "171") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "86"))
                        (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "86") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "93"))
                        (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "93") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "62"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "62") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "171") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "171") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "89") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "116") (term "1,2") (ifseqformula "5"))
                        (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "131") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "86") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "7"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "119"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,1,0,0") (ifseqformula "114"))
                        (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "eqSymm" (formula "28") (term "0,0,0"))
                        (rule "dismissNonSelectedField" (formula "28") (term "0,0,0,1,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "106"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "95") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "116") (term "5") (ifseqformula "5"))
                        (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "116") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "147") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "7"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "119"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "elementOfSingleton" (formula "27") (term "0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "114"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "elementOfSingleton" (formula "27") (term "0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "106"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,1,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,1,0,1,1,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,2,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "eqSymm" (formula "27") (term "0,0,0"))
                        (rule "replace_known_right" (formula "27") (term "0,0,1,0,0") (ifseqformula "127"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
                        (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "5"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "95") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                        (rule "polySimp_elimOne" (formula "67") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                        (rule "polySimp_elimOne" (formula "61") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "170") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "170") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "170") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "170") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "170") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "170") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                        (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                        (rule "polySimp_elimOne" (formula "85") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                        (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                        (rule "polySimp_elimOne" (formula "92") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                        (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "114"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "128")))
                        (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "106"))
                        (rule "replace_known_left" (formula "27") (term "0,0,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "elementOfSingleton" (formula "27") (term "0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "129")) (ifInst ""  (formula "30")))
                        (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "30"))
                        (rule "inEqSimp_and_subsumption3" (formula "79") (term "0,0,0"))
                        (rule "leq_literals" (formula "79") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "79"))
                        (rule "inEqSimp_and_subsumption3" (formula "80") (term "0,0,0"))
                        (rule "leq_literals" (formula "80") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "80"))
                        (rule "inEqSimp_and_subsumption3" (formula "56") (term "0,0,0"))
                        (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "inEqSimp_and_subsumption3" (formula "55") (term "0,0,0"))
                        (rule "leq_literals" (formula "55") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "nnf_ex2all" (formula "171"))
                        (rule "nnf_imp2or" (formula "66") (term "0"))
                        (rule "nnf_imp2or" (formula "72") (term "0"))
                        (rule "nnf_imp2or" (formula "65") (term "0"))
                        (rule "nnf_imp2or" (formula "60") (term "0"))
                        (rule "nnf_imp2or" (formula "89") (term "0"))
                        (rule "nnf_imp2or" (formula "90") (term "0"))
                        (rule "nnf_imp2or" (formula "97") (term "0"))
                        (rule "nnf_imp2or" (formula "84") (term "0"))
                        (rule "nnf_imp2or" (formula "80") (term "0"))
                        (rule "nnf_imp2or" (formula "81") (term "0"))
                        (rule "nnf_imp2or" (formula "57") (term "0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                        (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "72") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                        (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "65") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                        (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "60") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                        (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "60") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "89") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                        (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                        (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "90") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                        (rule "times_zero_1" (formula "90") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "90") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                        (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "97") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                        (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                        (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "84") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "84") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "84") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "84") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "84") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "84") (term "1,0,0"))
                        (rule "mul_literals" (formula "84") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "84") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0"))
                        (rule "mul_literals" (formula "84") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "80") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "81") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0"))
                        (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0"))
                        (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "57") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "80") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "80") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "80") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "80") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "81") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "81") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "81") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "81") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "81") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "57") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "66") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "122") (inst "iv=iv"))
                        (rule "andLeft" (formula "122"))
                        (rule "lenOfSeqConcat" (formula "123") (term "1,1,0,0"))
                         (builtin "One Step Simplification" (formula "123"))
                        (rule "lenOfSeqConcatEQ" (formula "122") (term "1") (ifseqformula "124"))
                         (builtin "One Step Simplification" (formula "122"))
                        (rule "lenOfSeqConcat" (formula "122") (term "0"))
                         (builtin "One Step Simplification" (formula "122"))
                        (rule "true_left" (formula "122"))
                        (rule "inEqSimp_ltToLeq" (formula "122") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "122") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "122") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "122") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "122") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "122") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "122") (term "0,0,0"))
                        (rule "applyEq" (formula "122") (term "0,0,1,0") (ifseqformula "123"))
                         (builtin "One Step Simplification" (formula "122"))
                        (rule "true_left" (formula "122"))
                        (rule "commute_or_2" (formula "65") (term "0"))
                        (rule "seqGetAlphaCast" (formula "175") (term "1"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "seqGetAlphaCast" (formula "175") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_or" (formula "72") (term "0,0"))
                        (rule "commute_or_2" (formula "60") (term "0"))
                        (rule "commute_or_2" (formula "89") (term "0"))
                        (rule "commute_and" (formula "72") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "90") (term "0"))
                        (rule "commute_and" (formula "97") (term "0,0,1,0"))
                        (rule "lenNonNegative" (formula "92") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "92"))
                        (rule "lenNonNegative" (formula "86") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "86"))
                        (rule "commute_or_2" (formula "84") (term "0"))
                        (rule "commute_or" (formula "97") (term "0,0"))
                        (rule "lenNonNegative" (formula "96") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "96"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "80") (term "0"))
                        (rule "seqGetAlphaCast" (formula "95") (term "0"))
                        (rule "castedGetAny" (formula "95") (term "0"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "true_left" (formula "95"))
                        (rule "seqGetAlphaCast" (formula "88") (term "0"))
                        (rule "castedGetAny" (formula "88") (term "0"))
                         (builtin "One Step Simplification" (formula "88"))
                        (rule "true_left" (formula "88"))
                        (rule "commute_or_2" (formula "81") (term "0"))
                        (rule "commute_or_2" (formula "57") (term "0"))
                        (rule "commute_or_2" (formula "56") (term "0"))
                        (rule "ifthenelse_split" (formula "28") (term "0"))
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                           (rule "referencedObjectIsCreatedRightEQ" (formula "127") (ifseqformula "28") (ifseqformula "128"))
                           (rule "close" (formula "127") (ifseqformula "74"))
                        )
                        (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                           (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "124"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "175") (term "0,1") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "eqSymm" (formula "174"))
                           (rule "commute_or" (formula "64") (term "0,0"))
                           (rule "commute_or" (formula "63") (term "0,0"))
                           (rule "commute_or" (formula "58") (term "0,0"))
                           (rule "commute_or" (formula "87") (term "0,0"))
                           (rule "commute_or" (formula "88") (term "0,0"))
                           (rule "commute_or" (formula "82") (term "0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "78") (term "0,0"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or_2" (formula "58") (term "0"))
                           (rule "commute_or_2" (formula "87") (term "0"))
                           (rule "commute_or_2" (formula "88") (term "0"))
                           (rule "commute_or_2" (formula "82") (term "0"))
                           (rule "commute_or_2" (formula "79") (term "0,0"))
                           (rule "commute_or_2" (formula "55") (term "0,0"))
                           (rule "commute_or_2" (formula "54") (term "0,0"))
                           (rule "commute_and_2" (formula "70") (term "0,1,0"))
                           (rule "commute_or" (formula "78") (term "0,0,0"))
                           (rule "commute_or_2" (formula "78") (term "0,0"))
                           (rule "commute_or_2" (formula "78") (term "0"))
                           (rule "commute_and_2" (formula "95") (term "0,1,0"))
                           (rule "commute_or" (formula "79") (term "0,0,0"))
                           (rule "commute_or_2" (formula "79") (term "0,0"))
                           (rule "commute_or_2" (formula "79") (term "0"))
                           (rule "commute_or" (formula "55") (term "0,0,0"))
                           (rule "commute_or_2" (formula "55") (term "0,0"))
                           (rule "commute_or_2" (formula "55") (term "0"))
                           (rule "commute_or" (formula "54") (term "0,0,0"))
                           (rule "commute_or_2" (formula "54") (term "0,0"))
                           (rule "commute_or_2" (formula "54") (term "0"))
                           (rule "ex_pull_out3" (formula "70") (term "0"))
                           (rule "cnf_rightDist" (formula "70") (term "0,0"))
                           (rule "shift_paren_or" (formula "70") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "70") (term "0,0,0"))
                           (rule "commute_or_2" (formula "70") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "70") (term "1,0,0,0"))
                           (rule "commute_or" (formula "70") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "95") (term "0"))
                           (rule "cnf_rightDist" (formula "95") (term "0,0"))
                           (rule "shift_paren_or" (formula "95") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "95") (term "0,0,0"))
                           (rule "commute_or_2" (formula "95") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "95") (term "1,0,0,0"))
                           (rule "commute_or" (formula "95") (term "0,0,0,0,0"))
                           (rule "commute_and" (formula "70") (term "0,0,0"))
                           (rule "commute_and_2" (formula "70") (term "0,0"))
                           (rule "commute_and" (formula "95") (term "0,0,0"))
                           (rule "commute_and_2" (formula "95") (term "0,0"))
                           (rule "allLeft" (formula "82") (inst "t=i_2_1"))
                           (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                           (rule "applyEq" (formula "82") (term "0,0,0,0") (ifseqformula "87"))
                           (rule "replace_known_right" (formula "82") (term "0,0,0") (ifseqformula "135"))
                            (builtin "One Step Simplification" (formula "82"))
                           (rule "true_left" (formula "82"))
                           (rule "allLeft" (formula "87") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "87") (term "1"))
                           (rule "applyEq" (formula "87") (term "0,0,0,0") (ifseqformula "94"))
                           (rule "replace_known_right" (formula "87") (term "0,0,0") (ifseqformula "135"))
                            (builtin "One Step Simplification" (formula "87"))
                           (rule "true_left" (formula "87"))
                           (rule "allLeft" (formula "58") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                           (rule "applyEq" (formula "58") (term "0,0,0,0") (ifseqformula "63"))
                           (rule "replace_known_right" (formula "58") (term "0,0,0") (ifseqformula "161"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "allLeft" (formula "64") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "64") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "64"))
                           (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                           (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                           (rule "add_literals" (formula "64") (term "0,0,1"))
                           (rule "leq_literals" (formula "64") (term "0,1"))
                            (builtin "One Step Simplification" (formula "64"))
                           (rule "notLeft" (formula "64"))
                           (rule "allLeft" (formula "63") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                           (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "69"))
                           (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "162"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "true_left" (formula "63"))
                           (rule "allLeft" (formula "70") (inst "t=j_0"))
                           (rule "exLeft" (formula "70") (inst "sk=i_2"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "70"))
                           (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "71") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "71") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "71") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "72") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "70") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                           (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                           (rule "add_literals" (formula "72") (term "0,0,1"))
                           (rule "leq_literals" (formula "72") (term "0,1"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "applyEq" (formula "126") (term "0") (ifseqformula "72"))
                           (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "72"))
                           (rule "inEqSimp_contradInEq1" (formula "71") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1"))
                           (rule "add_literals" (formula "71") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "71") (term "1,0,0,1"))
                           (rule "add_literals" (formula "71") (term "0,0,1"))
                           (rule "leq_literals" (formula "71") (term "0,1"))
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "inEqSimp_contradInEq1" (formula "70") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                           (rule "add_literals" (formula "70") (term "0,0,1"))
                           (rule "leq_literals" (formula "70") (term "0,1"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "139") (term "0") (ifseqformula "74"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "140"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "142") (term "0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "95"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "146")))
                           (rule "true_left" (formula "23"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "145")))
                           (rule "true_left" (formula "12"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0,0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "87") (term "1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "141")))
                           (rule "true_left" (formula "87"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "141") (term "0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "142")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "143") (term "0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "135") (term "0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "136")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "137")))
                           (rule "true_left" (formula "13"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "74"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "139"))
                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")))
                           (rule "true_left" (formula "19"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "137") (term "0") (ifseqformula "74"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "138")))
                           (rule "true_left" (formula "1"))
                           (rule "lenNonNegative" (formula "25") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "seqGetAlphaCast" (formula "178") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allLeft" (formula "1") (inst "t=i_2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "72"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "71") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "71") (term "0"))
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "closeFalse" (formula "71"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "165"))
                        (branch
                            (builtin "One Step Simplification" (formula "138"))
                           (rule "notRight" (formula "138"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "167") (inst "sk=i_2"))
                           (rule "impRight" (formula "167"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "169"))
                           (rule "allRight" (formula "173") (inst "sk=iv_0"))
                           (rule "impRight" (formula "173"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "7"))
                           (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "63") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "69") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "87"))
                           (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "87") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "94"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "94") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEq" (formula "97") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "148") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "88") (term "1,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "87") (term "1,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "8"))
                           (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "120"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1,0,0") (ifseqformula "115"))
                           (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "eqSymm" (formula "29") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,1,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,0") (ifseqformula "107"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEqRigid" (formula "28") (term "0,0") (ifseqformula "8"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "120"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "elementOfSingleton" (formula "28") (term "0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "115"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "elementOfSingleton" (formula "28") (term "0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "simplifySelectOfStore" (formula "28"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,1,0,1,1,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,2,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "eqSymm" (formula "28") (term "0,0,0"))
                           (rule "replace_known_right" (formula "28") (term "0,0,1,0,0") (ifseqformula "128"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
                           (rule "applyEq" (formula "116") (term "1,2") (ifseqformula "6"))
                           (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "116") (term "5") (ifseqformula "6"))
                           (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "132") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "124") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "96") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "85") (term "1,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "116") (term "0") (ifseqformula "6"))
                           (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "95") (term "1,1,0,0") (ifseqformula "6"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "96") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                           (rule "polySimp_elimOne" (formula "62") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                           (rule "polySimp_elimOne" (formula "68") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                           (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                           (rule "polySimp_elimOne" (formula "86") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                           (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                           (rule "polySimp_elimOne" (formula "93") (term "0"))
                           (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "115"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "129")))
                           (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0,0,1,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "107"))
                           (rule "replace_known_left" (formula "28") (term "0,0,1,0,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "108"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "130")) (ifInst ""  (formula "31")))
                           (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "31"))
                           (rule "inEqSimp_and_subsumption3" (formula "81") (term "0,0,0"))
                           (rule "leq_literals" (formula "81") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                           (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_and_subsumption3" (formula "80") (term "0,0,0"))
                           (rule "leq_literals" (formula "80") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "inEqSimp_and_subsumption3" (formula "56") (term "0,0,0"))
                           (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "nnf_imp2or" (formula "72") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_imp2or" (formula "60") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_imp2or" (formula "97") (term "0"))
                           (rule "nnf_imp2or" (formula "90") (term "0"))
                           (rule "nnf_imp2or" (formula "84") (term "0"))
                           (rule "nnf_imp2or" (formula "89") (term "0"))
                           (rule "nnf_imp2or" (formula "81") (term "0"))
                           (rule "nnf_imp2or" (formula "57") (term "0"))
                           (rule "nnf_imp2or" (formula "80") (term "0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "60") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "97") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                           (rule "times_zero_1" (formula "97") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                           (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "90") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                           (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                           (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "84") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "84") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "84") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "84") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "84") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "84") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "84") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "84") (term "1,0,0"))
                           (rule "times_zero_1" (formula "84") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "84") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0"))
                           (rule "mul_literals" (formula "84") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "89") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                           (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                           (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "57") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "80") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "80") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0"))
                           (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0"))
                           (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "80") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "80") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "80") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "80") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "56") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "56") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or" (formula "72") (term "0,0"))
                           (rule "commute_or_2" (formula "60") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "122") (inst "iv=iv"))
                           (rule "andLeft" (formula "122"))
                           (rule "lenOfSeqConcat" (formula "122") (term "0"))
                            (builtin "One Step Simplification" (formula "122"))
                           (rule "polySimp_homoEq" (formula "122"))
                           (rule "polySimp_mulComm0" (formula "122") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "122") (term "1,0"))
                           (rule "mul_literals" (formula "122") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "122") (term "0"))
                           (rule "polySimp_addComm0" (formula "122") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "123") (term "1,1,0,0"))
                            (builtin "One Step Simplification" (formula "123"))
                           (rule "lenOfSeqConcatEQ" (formula "122") (term "1,0,0") (ifseqformula "124"))
                            (builtin "One Step Simplification" (formula "122"))
                           (rule "polySimp_addAssoc" (formula "122") (term "0,0"))
                           (rule "add_literals" (formula "122") (term "0,0,0"))
                           (rule "add_zero_left" (formula "122") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "122") (term "0"))
                           (rule "add_literals" (formula "122") (term "1,0"))
                           (rule "times_zero_1" (formula "122") (term "0"))
                            (builtin "One Step Simplification" (formula "122"))
                           (rule "true_left" (formula "122"))
                           (rule "inEqSimp_ltToLeq" (formula "122") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "122") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "122") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "122") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "122") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "122") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "122") (term "0,0,0"))
                           (rule "applyEq" (formula "122") (term "0,0,1,0") (ifseqformula "123"))
                            (builtin "One Step Simplification" (formula "122"))
                           (rule "true_left" (formula "122"))
                           (rule "seqGetAlphaCast" (formula "3") (term "0"))
                           (rule "castedGetAny" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "seqGetAlphaCast" (formula "175") (term "1"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "175") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commute_and" (formula "72") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "90") (term "0"))
                           (rule "commute_and" (formula "97") (term "0,0,1,0"))
                           (rule "commute_or" (formula "97") (term "0,0"))
                           (rule "commute_or_2" (formula "84") (term "0"))
                           (rule "commute_or_2" (formula "89") (term "0"))
                           (rule "commute_or_2" (formula "81") (term "0"))
                           (rule "seqGetAlphaCast" (formula "95") (term "0"))
                           (rule "castedGetAny" (formula "95") (term "0"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "true_left" (formula "95"))
                           (rule "seqGetAlphaCast" (formula "88") (term "0"))
                           (rule "castedGetAny" (formula "88") (term "0"))
                            (builtin "One Step Simplification" (formula "88"))
                           (rule "true_left" (formula "88"))
                           (rule "commute_or_2" (formula "57") (term "0"))
                           (rule "lenNonNegative" (formula "86") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "86"))
                           (rule "lenNonNegative" (formula "92") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "92"))
                           (rule "lenNonNegative" (formula "96") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "96"))
                           (rule "commute_or_2" (formula "80") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "ifthenelse_split" (formula "28") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                              (rule "referencedObjectIsCreatedRightEQ" (formula "127") (ifseqformula "28") (ifseqformula "128"))
                              (rule "close" (formula "127") (ifseqformula "74"))
                           )
                           (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                              (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "124"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "175") (term "0,1") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "eqSymm" (formula "174"))
                              (rule "commute_or" (formula "64") (term "0,0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "commute_or" (formula "63") (term "0,0"))
                              (rule "commute_or" (formula "88") (term "0,0"))
                              (rule "commute_or" (formula "82") (term "0,0"))
                              (rule "commute_or" (formula "87") (term "0,0"))
                              (rule "commute_or_2" (formula "79") (term "0,0"))
                              (rule "commute_or_2" (formula "64") (term "0"))
                              (rule "commute_or_2" (formula "55") (term "0,0"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_or_2" (formula "88") (term "0"))
                              (rule "commute_or_2" (formula "82") (term "0"))
                              (rule "commute_or_2" (formula "87") (term "0"))
                              (rule "commute_or_2" (formula "78") (term "0,0"))
                              (rule "commute_or_2" (formula "54") (term "0,0"))
                              (rule "commute_and_2" (formula "70") (term "0,1,0"))
                              (rule "commute_or" (formula "79") (term "0,0,0"))
                              (rule "commute_or_2" (formula "79") (term "0,0"))
                              (rule "commute_or_2" (formula "79") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0,0"))
                              (rule "commute_or_2" (formula "55") (term "0,0"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "commute_and_2" (formula "95") (term "0,1,0"))
                              (rule "commute_or" (formula "78") (term "0,0,0"))
                              (rule "commute_or_2" (formula "78") (term "0,0"))
                              (rule "commute_or_2" (formula "78") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0,0"))
                              (rule "commute_or_2" (formula "54") (term "0,0"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "ex_pull_out3" (formula "70") (term "0"))
                              (rule "cnf_rightDist" (formula "70") (term "0,0"))
                              (rule "shift_paren_or" (formula "70") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "70") (term "0,0,0"))
                              (rule "commute_or_2" (formula "70") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "70") (term "1,0,0,0"))
                              (rule "commute_or" (formula "70") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "95") (term "0"))
                              (rule "cnf_rightDist" (formula "95") (term "0,0"))
                              (rule "shift_paren_or" (formula "95") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "95") (term "0,0,0"))
                              (rule "commute_or_2" (formula "95") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "95") (term "1,0,0,0"))
                              (rule "commute_or" (formula "95") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "64") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "64") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "64") (term "0,0"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "64"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "165"))
                           (branch
                               (builtin "One Step Simplification" (formula "138"))
                              (rule "notRight" (formula "165"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "143") (ifseqformula "1") (ifseqformula "144"))
                              (rule "close" (formula "143") (ifseqformula "42"))
                           )
                           (branch
                              (rule "andRight" (formula "165"))
                              (branch
                                  (builtin "One Step Simplification" (formula "138"))
                                 (rule "notRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "171") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "171"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "169") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "169"))
                                 (rule "notRight" (formula "170"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "89") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "96") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "65") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "90") (term "1,1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "76") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "30") (term "0,0") (ifseqformula "10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "122"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "117"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfStore" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "94") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "142") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "121"))
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "130")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "116"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "108"))
                                 (rule "replace_known_left" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "136") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "149") (term "0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "118") (term "5") (ifseqformula "8"))
                                 (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "118") (term "1,2") (ifseqformula "8"))
                                 (rule "applyEq" (formula "118") (term "0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "95") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "133") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "97") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "96") (term "1,1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "143") (term "1,0") (ifseqformula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "91") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "116"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "130")))
                                 (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "108"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "131")) (ifInst ""  (formula "32")))
                                 (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "32"))
                                 (rule "inEqSimp_and_subsumption3" (formula "81") (term "0,0,0"))
                                 (rule "leq_literals" (formula "81") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                                 (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_and_subsumption3" (formula "82") (term "0,0,0"))
                                 (rule "leq_literals" (formula "82") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "nnf_imp2or" (formula "61") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "98") (term "0"))
                                 (rule "nnf_imp2or" (formula "85") (term "0"))
                                 (rule "nnf_imp2or" (formula "90") (term "0"))
                                 (rule "nnf_imp2or" (formula "91") (term "0"))
                                 (rule "nnf_imp2or" (formula "81") (term "0"))
                                 (rule "nnf_imp2or" (formula "57") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "82") (term "0"))
                                 (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "98") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "98") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "98") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "98") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "98") (term "1,0,0"))
                                 (rule "mul_literals" (formula "98") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "98") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "1,0,0"))
                                 (rule "mul_literals" (formula "98") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "91") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "91") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "91") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "91") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "91") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "91") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "91") (term "1,0,0"))
                                 (rule "mul_literals" (formula "91") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "91") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,0,0"))
                                 (rule "mul_literals" (formula "91") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "81") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "82") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "81") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "81") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "82") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "82") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "82") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "82") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "61") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "123") (inst "iv=iv"))
                                 (rule "andLeft" (formula "123"))
                                 (rule "lenOfSeqConcat" (formula "124") (term "1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "124"))
                                 (rule "lenOfSeqConcatEQ" (formula "123") (term "1") (ifseqformula "125"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "lenOfSeqConcat" (formula "123") (term "0"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "true_left" (formula "123"))
                                 (rule "inEqSimp_ltToLeq" (formula "123") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "123") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "123") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "123") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "123") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "123") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "123") (term "0,0,0"))
                                 (rule "applyEq" (formula "123") (term "0,0,1,0") (ifseqformula "124"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "true_left" (formula "123"))
                                 (rule "seqGetAlphaCast" (formula "176") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "176") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or_2" (formula "85") (term "0"))
                                 (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "98") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "98") (term "0,0"))
                                 (rule "commute_or_2" (formula "90") (term "0"))
                                 (rule "commute_or_2" (formula "91") (term "0"))
                                 (rule "lenNonNegative" (formula "87") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "87"))
                                 (rule "commute_or_2" (formula "81") (term "0"))
                                 (rule "lenNonNegative" (formula "93") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "93"))
                                 (rule "seqGetAlphaCast" (formula "96") (term "0"))
                                 (rule "castedGetAny" (formula "96") (term "0"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "true_left" (formula "96"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "89") (term "0"))
                                 (rule "castedGetAny" (formula "89") (term "0"))
                                  (builtin "One Step Simplification" (formula "89"))
                                 (rule "true_left" (formula "89"))
                                 (rule "lenNonNegative" (formula "97") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "97"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "commute_or_2" (formula "82") (term "0"))
                                 (rule "ifthenelse_split" (formula "29") (term "0"))
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "29") (ifseqformula "129"))
                                    (rule "close" (formula "128") (ifseqformula "75"))
                                 )
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                                    (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "176") (term "0,1") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "eqSymm" (formula "175"))
                                    (rule "commute_or" (formula "59") (term "0,0"))
                                    (rule "commute_or" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "64") (term "0,0"))
                                    (rule "commute_or" (formula "83") (term "0,0"))
                                    (rule "commute_or" (formula "88") (term "0,0"))
                                    (rule "commute_or" (formula "89") (term "0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0"))
                                    (rule "commute_or_2" (formula "59") (term "0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or_2" (formula "83") (term "0"))
                                    (rule "commute_or_2" (formula "88") (term "0"))
                                    (rule "commute_or_2" (formula "89") (term "0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0"))
                                    (rule "commute_or" (formula "79") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0"))
                                    (rule "commute_and_2" (formula "71") (term "0,1,0"))
                                    (rule "commute_or" (formula "55") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0"))
                                    (rule "commute_and_2" (formula "96") (term "0,1,0"))
                                    (rule "commute_or" (formula "56") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0"))
                                    (rule "commute_or" (formula "80") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0"))
                                    (rule "ex_pull_out3" (formula "71") (term "0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "96") (term "0"))
                                    (rule "cnf_rightDist" (formula "96") (term "0,0"))
                                    (rule "shift_paren_or" (formula "96") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "96") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "96") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "96") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "96") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "55") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "55") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq0" (formula "55") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "55") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "3"))
                                    (rule "andLeft" (formula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "55"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0"))
                                    (rule "add_literals" (formula "55") (term "0"))
                                    (rule "leq_literals" (formula "55"))
                                    (rule "closeFalse" (formula "55"))
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "138"))
                                 (rule "notRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "171") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "171"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "169") (inst "sk=i_2"))
                                 (rule "impRight" (formula "169"))
                                 (rule "notRight" (formula "170"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "89") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "96") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "65") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "86") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "92") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "119") (term "0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "122"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,1,0,0") (ifseqformula "117"))
                                 (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "eqSymm" (formula "31") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "31") (term "0,0,0,1,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,1,0,0") (ifseqformula "109"))
                                 (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "122"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "117"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfStore" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0,1,0,0,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0,1,0,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0,1,1,0,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,2,0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "eqSymm" (formula "30") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "30") (term "0,0,1,0,0") (ifseqformula "130"))
                                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "31")))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "96") (term "1,1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "134") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "118") (term "1,2") (ifseqformula "8"))
                                 (rule "applyEq" (formula "97") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "96") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "75") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "89") (term "1,1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "126") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "118") (term "5") (ifseqformula "8"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "91") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "143") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "142") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "135") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "140") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "141") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "137") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "94") (term "1,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "149") (term "0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "89") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "91") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "88"))
                                 (rule "polySimp_mulLiterals" (formula "88") (term "0"))
                                 (rule "polySimp_elimOne" (formula "88") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=java_util_Collection_seq_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "116"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "130")))
                                 (rule "dismissNonSelectedField" (formula "29") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "108"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=java_util_Collection_seq_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "109"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "131")) (ifInst ""  (formula "32")))
                                 (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "32"))
                                 (rule "inEqSimp_and_subsumption3" (formula "81") (term "0,0,0"))
                                 (rule "leq_literals" (formula "81") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "inEqSimp_and_subsumption3" (formula "82") (term "0,0,0"))
                                 (rule "leq_literals" (formula "82") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "82"))
                                 (rule "inEqSimp_and_subsumption3" (formula "57") (term "0,0,0"))
                                 (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "nnf_imp2or" (formula "61") (term "0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "90") (term "0"))
                                 (rule "nnf_imp2or" (formula "91") (term "0"))
                                 (rule "nnf_imp2or" (formula "85") (term "0"))
                                 (rule "nnf_imp2or" (formula "98") (term "0"))
                                 (rule "nnf_imp2or" (formula "81") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "82") (term "0"))
                                 (rule "nnf_imp2or" (formula "57") (term "0"))
                                 (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                 (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "91") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "91") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "91") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "91") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "91") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "91") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "91") (term "1,0,0"))
                                 (rule "mul_literals" (formula "91") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "91") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,0,0"))
                                 (rule "mul_literals" (formula "91") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0"))
                                 (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "85") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "85") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "98") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "98") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "98") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "98") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "98") (term "1,0,0"))
                                 (rule "mul_literals" (formula "98") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "98") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "1,0,0"))
                                 (rule "mul_literals" (formula "98") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "81") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "82") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "82") (term "1,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "81") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "81") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "82") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "82") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "82") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "82") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "82") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "61") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "123") (inst "iv=iv"))
                                 (rule "andLeft" (formula "123"))
                                 (rule "lenOfSeqConcat" (formula "124") (term "1,1,0,0"))
                                  (builtin "One Step Simplification" (formula "124"))
                                 (rule "lenOfSeqConcatEQ" (formula "123") (term "1") (ifseqformula "125"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "lenOfSeqConcat" (formula "123") (term "0"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "true_left" (formula "123"))
                                 (rule "inEqSimp_ltToLeq" (formula "123") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "123") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "123") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "123") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "123") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "123") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "123") (term "0,0,0"))
                                 (rule "applyEq" (formula "123") (term "0,0,1,0") (ifseqformula "124"))
                                  (builtin "One Step Simplification" (formula "123"))
                                 (rule "true_left" (formula "123"))
                                 (rule "seqGetAlphaCast" (formula "176") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "176") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or_2" (formula "90") (term "0"))
                                 (rule "commute_or_2" (formula "91") (term "0"))
                                 (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "98") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "85") (term "0"))
                                 (rule "lenNonNegative" (formula "87") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "87"))
                                 (rule "commute_or" (formula "98") (term "0,0"))
                                 (rule "lenNonNegative" (formula "93") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "93"))
                                 (rule "commute_or_2" (formula "81") (term "0"))
                                 (rule "lenNonNegative" (formula "97") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "97"))
                                 (rule "seqGetAlphaCast" (formula "96") (term "0"))
                                 (rule "castedGetAny" (formula "96") (term "0"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "true_left" (formula "96"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "89") (term "0"))
                                 (rule "castedGetAny" (formula "89") (term "0"))
                                  (builtin "One Step Simplification" (formula "89"))
                                 (rule "true_left" (formula "89"))
                                 (rule "commute_or_2" (formula "82") (term "0"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "ifthenelse_split" (formula "29") (term "0"))
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 TRUE"
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "128") (ifseqformula "29") (ifseqformula "129"))
                                    (rule "close" (formula "128") (ifseqformula "75"))
                                 )
                                 (branch " de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_B«anonHeapFunction» = self_807 FALSE"
                                    (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "125"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "176") (term "0,1") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "eqSymm" (formula "175"))
                                    (rule "commute_or" (formula "59") (term "0,0"))
                                    (rule "commute_or" (formula "64") (term "0,0"))
                                    (rule "commute_or" (formula "65") (term "0,0"))
                                    (rule "commute_or" (formula "88") (term "0,0"))
                                    (rule "commute_or" (formula "89") (term "0,0"))
                                    (rule "commute_or" (formula "83") (term "0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0"))
                                    (rule "commute_or_2" (formula "59") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "88") (term "0"))
                                    (rule "commute_or_2" (formula "89") (term "0"))
                                    (rule "commute_or_2" (formula "83") (term "0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0"))
                                    (rule "commute_or" (formula "79") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0"))
                                    (rule "commute_and_2" (formula "71") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "96") (term "0,1,0"))
                                    (rule "commute_or" (formula "56") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0"))
                                    (rule "commute_or" (formula "80") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0"))
                                    (rule "commute_or" (formula "55") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0"))
                                    (rule "ex_pull_out3" (formula "71") (term "0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "71") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "71") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "71") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "71") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "96") (term "0"))
                                    (rule "cnf_rightDist" (formula "96") (term "0,0"))
                                    (rule "shift_paren_or" (formula "96") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "96") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "96") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "96") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "96") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "56") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq0" (formula "56") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "56") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "56"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_literals" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (add)"
                   (builtin "One Step Simplification" (formula "112"))
                   (builtin "One Step Simplification" (formula "134"))
                  (rule "andLeft" (formula "112"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1,0") (ifseqformula "112"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,0") (ifseqformula "107"))
                  (rule "andLeft" (formula "113"))
                  (rule "andLeft" (formula "113"))
                  (rule "andLeft" (formula "115"))
                  (rule "notLeft" (formula "113"))
                  (rule "close" (formula "116") (ifseqformula "115"))
               )
               (branch "Pre (add)"
                   (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "130")) (ifInst ""  (formula "130")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "1,1") (ifseqformula "107"))
                  (rule "wellFormedAnonEQ" (formula "132") (term "0,0,1") (ifseqformula "107"))
                  (rule "expand_inInt" (formula "132") (term "1,0,1"))
                  (rule "replace_int_MIN" (formula "132") (term "0,1,1,0,1"))
                  (rule "replace_int_MAX" (formula "132") (term "1,0,1,0,1"))
                  (rule "leq_literals" (formula "132") (term "1,1,0,1"))
                   (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "110")) (ifInst ""  (formula "106")))
                  (rule "leq_literals" (formula "132") (term "0,1"))
                   (builtin "One Step Simplification" (formula "132"))
                  (rule "dismissNonSelectedField" (formula "132") (term "0,0,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,1") (ifseqformula "99"))
                  (rule "replace_known_left" (formula "132") (term "0,0,1") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "132"))
                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "55"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "79"))
                  (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "79") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0,0,0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0,0,0,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "163") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "163") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "86"))
                  (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "86") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "61"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "61") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "159") (term "1,0,0,0,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,1,0,0,0,1,1,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                  (rule "polySimp_elimOne" (formula "55") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "159") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                  (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                  (rule "polySimp_elimOne" (formula "79") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "1,0,0,0,0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,1,0,0,0,0,1,1,1"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,1,0,0,0,0,1,1,1"))
                  (rule "mul_literals" (formula "159") (term "0,1,1,0,0,0,0,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,1,0,0,0,0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,1,0,0,0,0,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "163") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "163") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "163") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "163") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "163") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "163") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "86"))
                  (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                  (rule "polySimp_elimOne" (formula "86") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                  (rule "polySimp_elimOne" (formula "61") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "159") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "159") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "1,0,0,0,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "159") (term "1,1,0,0,0,1,1,1,1"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,1,0,0,0,1,1,1,1"))
                  (rule "mul_literals" (formula "159") (term "0,1,1,0,0,0,1,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,1,0,0,0,1,1,1,1"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,1,0,0,0,1,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_and_subsumption3" (formula "72") (term "0,0,0"))
                  (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "inEqSimp_and_subsumption3" (formula "49") (term "0,0,0"))
                  (rule "leq_literals" (formula "49") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "inEqSimp_and_subsumption3" (formula "73") (term "0,0,0"))
                  (rule "leq_literals" (formula "73") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "inEqSimp_and_subsumption3" (formula "48") (term "0,0,0"))
                  (rule "leq_literals" (formula "48") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "nnf_imp2or" (formula "57") (term "0"))
                  (rule "nnf_imp2or" (formula "76") (term "0"))
                  (rule "nnf_imp2or" (formula "163") (term "0,1"))
                  (rule "nnf_imp2or" (formula "159") (term "0,0,1,1,1"))
                  (rule "nnf_imp2or" (formula "81") (term "0"))
                  (rule "nnf_imp2or" (formula "159") (term "0,0,1"))
                  (rule "nnf_imp2or" (formula "159") (term "0,0"))
                  (rule "nnf_imp2or" (formula "82") (term "0"))
                  (rule "nnf_imp2or" (formula "58") (term "0"))
                  (rule "nnf_imp2or" (formula "89") (term "0"))
                  (rule "nnf_imp2or" (formula "52") (term "0"))
                  (rule "nnf_imp2or" (formula "159") (term "0,1,1,1,1"))
                  (rule "nnf_imp2or" (formula "64") (term "0"))
                  (rule "nnf_imp2or" (formula "72") (term "0"))
                  (rule "nnf_imp2or" (formula "49") (term "0"))
                  (rule "nnf_imp2or" (formula "73") (term "0"))
                  (rule "nnf_imp2or" (formula "48") (term "0"))
                  (rule "nnf_notAnd" (formula "57") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                  (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                  (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "76") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                  (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                  (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "81") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0"))
                  (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                  (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "81") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "81") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "82") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "82") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "82") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "82") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "82") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "82") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "82") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "82") (term "1,0,0"))
                  (rule "mul_literals" (formula "82") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "82") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
                  (rule "mul_literals" (formula "82") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "58") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                  (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                  (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "89") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                  (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                  (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "163") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "163") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "163") (term "1,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "163") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "163") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "163") (term "1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "163") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "163") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "163") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "163") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "163") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "163") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "163") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "163") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "163") (term "1,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "64") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "72") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0"))
                  (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "49") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                  (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                  (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "73") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "73") (term "1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,0"))
                  (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "48") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "159") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "159") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "159") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "159") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "159") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "159") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "159") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "159") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "159") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "159") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "159") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "159") (term "0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "159") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "159") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_literals" (formula "159") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "159") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "159") (term "1,0,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "159") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "159") (term "1,0,0,1,0,0,0,1"))
                  (rule "mul_literals" (formula "159") (term "0,1,0,0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "159") (term "0,0,1,0,0,0,1"))
                  (rule "add_literals" (formula "159") (term "0,0,0,1,0,0,0,1"))
                  (rule "add_zero_left" (formula "159") (term "0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "159") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "159") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "159") (term "1,1,0,0,0,1"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "132"))
                  (rule "closeTrue" (formula "132"))
               )
               (branch "Null reference (var_6 = null)"
                   (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "113")))
                  (rule "closeTrue" (formula "132"))
               )
            )
            (branch "Null Reference (_dataForVoter_35_B = null)"
                (builtin "One Step Simplification" (formula "133"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (addInputCols)"
             (builtin "One Step Simplification" (formula "109"))
             (builtin "One Step Simplification" (formula "88"))
            (rule "andLeft" (formula "88"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "1,0") (ifseqformula "88"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "91"))
            (rule "notLeft" (formula "89"))
            (rule "close" (formula "93") (ifseqformula "92"))
         )
         (branch "Pre (addInputCols)"
             (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "88")) (ifInst ""  (formula "99")) (ifInst ""  (formula "108")) (ifInst ""  (formula "88")) (ifInst ""  (formula "99")) (ifInst ""  (formula "108")))
            (rule "andRight" (formula "138"))
            (branch
               (rule "andRight" (formula "134"))
               (branch
                  (rule "andRight" (formula "107"))
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "allRight" (formula "107") (inst "sk=j_0"))
                        (rule "impRight" (formula "107"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "136") (inst "sk=j_1"))
                        (rule "impRight" (formula "136"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "138") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,1,0"))
                        (rule "castedGetAny" (formula "111") (term "1,1,0"))
                        (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "0,1"))
                        (rule "castedGetAny" (formula "111") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "72"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                        (rule "polySimp_elimOne" (formula "43") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                        (rule "polySimp_elimOne" (formula "49") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                        (rule "polySimp_elimOne" (formula "66") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "111") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "pullOutSelect" (formula "111") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                        (rule "applyEq" (formula "112") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "57")))
                        (rule "applyEqReverse" (formula "112") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "112") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "111") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                        (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "62"))
                        (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                        (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                        (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "nnf_imp2or" (formula "46") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_imp2or" (formula "64") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_ex2all" (formula "139"))
                        (rule "nnf_imp2or" (formula "48") (term "0"))
                        (rule "nnf_imp2or" (formula "70") (term "0"))
                        (rule "nnf_ex2all" (formula "113"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "77") (term "0"))
                        (rule "nnf_imp2or" (formula "39") (term "0"))
                        (rule "nnf_imp2or" (formula "64") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "63") (term "0"))
                        (rule "nnf_notAnd" (formula "2") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "48") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                        (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "72") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                        (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                        (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                        (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "71") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                        (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                        (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "77") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "77") (term "1,0,0"))
                        (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                        (rule "mul_literals" (formula "77") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "77") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "77") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "77") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "64") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "63") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "2") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "63") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                        (rule "commute_or_2" (formula "48") (term "0"))
                        (rule "commute_or_2" (formula "72") (term "0"))
                        (rule "commute_or_2" (formula "66") (term "0"))
                        (rule "commute_or_2" (formula "43") (term "0"))
                        (rule "commute_or_2" (formula "49") (term "0"))
                        (rule "commute_or_2" (formula "71") (term "0"))
                        (rule "commute_and" (formula "55") (term "0,0,1,0"))
                        (rule "commute_and" (formula "77") (term "0,0,1,0"))
                        (rule "lenNonNegative" (formula "91") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "91"))
                        (rule "applyEq" (formula "91") (term "0") (ifseqformula "92"))
                        (rule "qeq_literals" (formula "91"))
                        (rule "true_left" (formula "91"))
                        (rule "commute_or" (formula "55") (term "0,0"))
                        (rule "commute_or" (formula "77") (term "0,0"))
                        (rule "commute_or_2" (formula "2") (term "0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "39") (term "0"))
                        (rule "commute_or_2" (formula "64") (term "0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or" (formula "48") (term "0,0"))
                           (rule "commute_or" (formula "72") (term "0,0"))
                           (rule "commute_or" (formula "66") (term "0,0"))
                           (rule "commute_or" (formula "43") (term "0,0"))
                           (rule "commute_or" (formula "49") (term "0,0"))
                           (rule "commute_or_2" (formula "48") (term "0"))
                           (rule "commute_or" (formula "71") (term "0,0"))
                           (rule "commute_or_2" (formula "72") (term "0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or_2" (formula "43") (term "0"))
                           (rule "commute_or_2" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "71") (term "0"))
                           (rule "commute_or" (formula "2") (term "0,0"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "commute_or_2" (formula "64") (term "0,0"))
                           (rule "commute_or_2" (formula "40") (term "0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "63") (term "0,0"))
                           (rule "commute_or" (formula "39") (term "0,0,0"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_or" (formula "64") (term "0,0,0"))
                           (rule "commute_or_2" (formula "64") (term "0,0"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "commute_or" (formula "40") (term "0,0,0"))
                           (rule "commute_or_2" (formula "40") (term "0,0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or" (formula "63") (term "0,0,0"))
                           (rule "commute_or_2" (formula "63") (term "0,0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_and_2" (formula "55") (term "0,1,0"))
                           (rule "commute_and_2" (formula "77") (term "0,1,0"))
                           (rule "ex_pull_out3" (formula "55") (term "0"))
                           (rule "cnf_rightDist" (formula "55") (term "0,0"))
                           (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                           (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                           (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "77") (term "0"))
                           (rule "cnf_rightDist" (formula "77") (term "0,0"))
                           (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                           (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                           (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                           (rule "commute_and" (formula "55") (term "0,0,0"))
                           (rule "commute_and_2" (formula "55") (term "0,0"))
                           (rule "commute_and" (formula "77") (term "0,0,0"))
                           (rule "commute_and_2" (formula "77") (term "0,0"))
                           (rule "allLeft" (formula "43") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "applyEq" (formula "43") (term "0,0,0,0") (ifseqformula "48"))
                           (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "130"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "allLeft" (formula "71") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                           (rule "applyEq" (formula "71") (term "0,0,0,0") (ifseqformula "77"))
                           (rule "replace_known_right" (formula "71") (term "0,0,0") (ifseqformula "104"))
                            (builtin "One Step Simplification" (formula "71"))
                           (rule "true_left" (formula "71"))
                           (rule "allLeft" (formula "66") (inst "t=i_2_1"))
                           (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                           (rule "applyEq" (formula "66") (term "0,0,0,0") (ifseqformula "71"))
                           (rule "replace_known_right" (formula "66") (term "0,0,0") (ifseqformula "104"))
                            (builtin "One Step Simplification" (formula "66"))
                           (rule "true_left" (formula "66"))
                           (rule "allLeft" (formula "49") (inst "t=j_1"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "49") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                           (rule "add_literals" (formula "49") (term "0,0,1"))
                           (rule "leq_literals" (formula "49") (term "0,1"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "notLeft" (formula "49"))
                           (rule "allLeft" (formula "72") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                           (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                           (rule "add_literals" (formula "72") (term "0,0,1"))
                           (rule "leq_literals" (formula "72") (term "0,1"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "72") (term "0,1"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "notLeft" (formula "72"))
                           (rule "allLeft" (formula "48") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                           (rule "applyEq" (formula "48") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "replace_known_right" (formula "48") (term "0,0,0") (ifseqformula "132"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "allLeft" (formula "55") (inst "t=j_1"))
                           (rule "exLeft" (formula "55") (inst "sk=i_2"))
                           (rule "andLeft" (formula "55"))
                           (rule "andLeft" (formula "55"))
                           (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "57") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "55") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "56") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                           (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                           (rule "add_literals" (formula "57") (term "0,0,1"))
                           (rule "leq_literals" (formula "57") (term "0,1"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "applyEq" (formula "98") (term "0") (ifseqformula "57"))
                           (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                           (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                           (rule "add_literals" (formula "56") (term "0,0,1"))
                           (rule "leq_literals" (formula "56") (term "0,1"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                           (rule "add_literals" (formula "55") (term "0,0,1"))
                           (rule "leq_literals" (formula "55") (term "0,1"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "allLeft" (formula "80") (inst "t=j_0"))
                           (rule "exLeft" (formula "80") (inst "sk=i_3"))
                           (rule "andLeft" (formula "80"))
                           (rule "andLeft" (formula "80"))
                           (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "80") (term "1,0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "80") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                           (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "82") (term "0,0,1"))
                           (rule "leq_literals" (formula "82") (term "0,1"))
                            (builtin "One Step Simplification" (formula "82"))
                           (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                           (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                           (rule "add_literals" (formula "81") (term "0,0,1"))
                           (rule "leq_literals" (formula "81") (term "0,1"))
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "81") (term "0,1"))
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_contradInEq1" (formula "80") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "80") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1"))
                           (rule "add_literals" (formula "80") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "80") (term "1,0,0,1"))
                           (rule "add_literals" (formula "80") (term "0,0,1"))
                           (rule "leq_literals" (formula "80") (term "0,1"))
                            (builtin "One Step Simplification" (formula "80"))
                           (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "82") (term "0,1"))
                            (builtin "One Step Simplification" (formula "82"))
                           (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "82"))
                           (rule "applyEq" (formula "100") (term "0") (ifseqformula "82"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "59"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "114") (term "0") (ifseqformula "60"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "61"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "1") (ifseqformula "61"))
                           (rule "replace_known_right" (formula "75") (term "0") (ifseqformula "114"))
                            (builtin "One Step Simplification" (formula "75"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "61"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0") (ifseqformula "62"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "110"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "63"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "0") (ifseqformula "64"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "65"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "66"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "116") (term "0") (ifseqformula "67"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "117"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "68"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "69"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "0") (ifseqformula "70"))
                           (rule "applyEqRigid" (formula "79") (term "0,0") (ifseqformula "80"))
                           (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "120"))
                            (builtin "One Step Simplification" (formula "79"))
                           (rule "applyEqRigid" (formula "79") (term "1,0") (ifseqformula "80"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "70"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "71"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "132") (term "0") (ifseqformula "73"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "133"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "74"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "lenNonNegative" (formula "22") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "allLeft" (formula "17") (inst "t=i_2"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "74"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "73"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "107"))
                           (rule "close" (formula "94") (ifseqformula "56"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "allRight" (formula "107") (inst "sk=i_2"))
                           (rule "impRight" (formula "107"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "109"))
                           (rule "allRight" (formula "136") (inst "sk=j_0"))
                           (rule "impRight" (formula "136"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "138") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                           (rule "castedGetAny" (formula "3") (term "0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "73"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                           (rule "polySimp_elimOne" (formula "67") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "105")))
                           (rule "ifthenelse_negated" (formula "3") (term "0"))
                           (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                           (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                           (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "nnf_imp2or" (formula "71") (term "0"))
                           (rule "nnf_imp2or" (formula "70") (term "0"))
                           (rule "nnf_imp2or" (formula "48") (term "0"))
                           (rule "nnf_ex2all" (formula "139"))
                           (rule "nnf_imp2or" (formula "48") (term "0"))
                           (rule "nnf_imp2or" (formula "77") (term "0"))
                           (rule "nnf_imp2or" (formula "43") (term "0"))
                           (rule "nnf_imp2or" (formula "55") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0"))
                           (rule "nnf_imp2or" (formula "63") (term "0"))
                           (rule "nnf_imp2or" (formula "64") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "71") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "49") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "48") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "77") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "77") (term "1,0,0"))
                           (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                           (rule "mul_literals" (formula "77") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "77") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "77") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "77") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "55") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "72") (term "0"))
                           (rule "commute_or_2" (formula "71") (term "0"))
                           (rule "commute_or_2" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "48") (term "0"))
                           (rule "commute_or_2" (formula "43") (term "0"))
                           (rule "commute_and" (formula "77") (term "0,0,1,0"))
                           (rule "commute_and" (formula "55") (term "0,0,1,0"))
                           (rule "commute_or" (formula "77") (term "0,0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or" (formula "55") (term "0,0"))
                           (rule "lenNonNegative" (formula "91") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "91"))
                           (rule "applyEq" (formula "91") (term "0") (ifseqformula "92"))
                           (rule "qeq_literals" (formula "91"))
                           (rule "true_left" (formula "91"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_or" (formula "72") (term "0,0"))
                              (rule "commute_or" (formula "71") (term "0,0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "commute_or" (formula "48") (term "0,0"))
                              (rule "commute_or" (formula "43") (term "0,0"))
                              (rule "commute_or_2" (formula "72") (term "0"))
                              (rule "commute_or_2" (formula "71") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or_2" (formula "48") (term "0"))
                              (rule "commute_or" (formula "66") (term "0,0"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or_2" (formula "63") (term "0,0"))
                              (rule "commute_or_2" (formula "64") (term "0,0"))
                              (rule "commute_or" (formula "40") (term "0,0,0"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or" (formula "39") (term "0,0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "commute_or" (formula "63") (term "0,0,0"))
                              (rule "commute_or_2" (formula "63") (term "0,0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_or" (formula "64") (term "0,0,0"))
                              (rule "commute_or_2" (formula "64") (term "0,0"))
                              (rule "commute_or_2" (formula "64") (term "0"))
                              (rule "commute_and_2" (formula "77") (term "0,1,0"))
                              (rule "commute_and_2" (formula "55") (term "0,1,0"))
                              (rule "ex_pull_out3" (formula "77") (term "0"))
                              (rule "cnf_rightDist" (formula "77") (term "0,0"))
                              (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                              (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                              (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "55") (term "0"))
                              (rule "cnf_rightDist" (formula "55") (term "0,0"))
                              (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                              (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                              (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "72") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                              (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "72") (term "0,0,1"))
                              (rule "leq_literals" (formula "72") (term "0,1"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "inEqSimp_contradInEq1" (formula "72") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "72") (term "0"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "closeFalse" (formula "72"))
                           )
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "107"))
                              (rule "close" (formula "94") (ifseqformula "56"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "notRight" (formula "107"))
                              (rule "allRight" (formula "134") (inst "sk=j_0"))
                              (rule "impRight" (formula "134"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "90") (ifseqformula "3") (ifseqformula "91"))
                              (rule "close" (formula "90") (ifseqformula "52"))
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=j_0"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "136") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "70"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "70") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "64") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "136") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "136") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "136") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "136") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                 (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                 (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "61") (term "0"))
                                 (rule "nnf_ex2all" (formula "136"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_imp2or" (formula "68") (term "0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "60") (term "0"))
                                 (rule "nnf_imp2or" (formula "36") (term "0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "59") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                 (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "110") (inst "i=i") (inst "i_0=i_0"))
                                 (rule "expand_inInt" (formula "110") (term "1,0,0,1"))
                                 (rule "expand_inInt" (formula "110") (term "1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "110") (term "0,0"))
                                 (rule "castedGetAny" (formula "110") (term "0,0,1,0,1"))
                                 (rule "castedGetAny" (formula "110") (term "0,0,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,1,1,0,0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,1,1,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "110") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "110") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "110") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "110") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "110") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "0,1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,0,1"))
                                 (rule "pullOutSelect" (formula "110") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                 (rule "applyEq" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "111") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")) (ifInst ""  (formula "56")))
                                 (rule "applyEqReverse" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "111") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "111") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "110") (term "0,0"))
                                 (rule "applyEq" (formula "110") (term "1,1,1,0,0,0,1") (ifseqformula "58"))
                                 (rule "applyEq" (formula "110") (term "1,0,0") (ifseqformula "58"))
                                 (rule "pullOutSelect" (formula "110") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "111") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")) (ifInst ""  (formula "56")))
                                 (rule "applyEqReverse" (formula "111") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "111"))
                                 (rule "applyEqReverse" (formula "111") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "110") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "110") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "nnf_notAnd" (formula "110") (term "0,0,1"))
                                 (rule "nnf_notAnd" (formula "110") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "110") (term "0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "110") (term "0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "110") (term "1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "110") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "110") (term "0,0,1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "110") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "110") (term "1,0,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "110") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "110") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "110") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "110") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "1,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "110") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "1,0,0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "110") (term "0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "110") (term "1,1,1,0,0,0"))
                                 (rule "commute_or" (formula "73") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "lenNonNegative" (formula "87") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "87"))
                                 (rule "applyEq" (formula "87") (term "0") (ifseqformula "88"))
                                 (rule "qeq_literals" (formula "87"))
                                 (rule "true_left" (formula "87"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "60") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or" (formula "62") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "commute_or" (formula "68") (term "0,0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "67") (term "0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "60") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0,0"))
                                 (rule "commute_or_2" (formula "59") (term "0,0"))
                                 (rule "andRight" (formula "110"))
                                 (branch
                                    (rule "allRight" (formula "110") (inst "sk=i_0_0"))
                                    (rule "orRight" (formula "110"))
                                    (rule "notRight" (formula "111"))
                                    (rule "orRight" (formula "111"))
                                    (rule "orRight" (formula "112"))
                                    (rule "orRight" (formula "111"))
                                    (rule "inEqSimp_geqRight" (formula "113"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "114"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "114"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "114"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "commute_or" (formula "64") (term "0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or" (formula "63") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "ex_pull_out3" (formula "77") (term "0"))
                                    (rule "cnf_rightDist" (formula "77") (term "0,0"))
                                    (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "55") (term "0"))
                                    (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                    (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "63") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "63") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "63") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_contradInEq1" (formula "63") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1"))
                                    (rule "add_literals" (formula "63") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "63") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "63") (term "0,0,1"))
                                    (rule "leq_literals" (formula "63") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "63"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "110") (inst "sk=i_2"))
                                    (rule "orRight" (formula "110"))
                                    (rule "notRight" (formula "111"))
                                    (rule "orRight" (formula "111"))
                                    (rule "orRight" (formula "112"))
                                    (rule "orRight" (formula "111"))
                                    (rule "inEqSimp_geqRight" (formula "113"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "114"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "114"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "114"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "commute_or" (formula "64") (term "0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or" (formula "39") (term "0,0,0"))
                                    (rule "commute_or" (formula "63") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0"))
                                    (rule "ex_pull_out3" (formula "77") (term "0"))
                                    (rule "cnf_rightDist" (formula "77") (term "0,0"))
                                    (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "55") (term "0"))
                                    (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                    (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "64") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_contradInEq0" (formula "64") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "64") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "64"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=j_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "136") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "70") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "136") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "136") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "136") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "136") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                    (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_ex2all" (formula "136"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "60") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "35") (term "0"))
                                    (rule "nnf_imp2or" (formula "59") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "110"))
                                    (rule "closeTrue" (formula "110"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=j_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "136") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "70") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "136") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "136") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "136") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "136") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "34") (term "0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                    (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "inEqSimp_and_subsumption3" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_ex2all" (formula "136"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0"))
                                    (rule "nnf_imp2or" (formula "35") (term "0"))
                                    (rule "nnf_imp2or" (formula "60") (term "0"))
                                    (rule "nnf_imp2or" (formula "59") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "110"))
                                    (rule "closeTrue" (formula "110"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "allRight" (formula "134") (inst "sk=j_0"))
                              (rule "impRight" (formula "134"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "136") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "41") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "70"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "70") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "64"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "64") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "136") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                              (rule "polySimp_elimOne" (formula "41") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                              (rule "polySimp_elimOne" (formula "47") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                              (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                              (rule "polySimp_elimOne" (formula "70") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                              (rule "polySimp_elimOne" (formula "64") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "136") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "136") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "136") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "136") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "136") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "wellFormedStoreObject" (formula "109"))
                               (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "90")))
                              (rule "wellFormedAnonEQ" (formula "109") (term "0") (ifseqformula "82"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "1") (ifseqformula "82"))
                              (rule "replace_known_left" (formula "109") (term "1,0") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "51")) (ifInst ""  (formula "89")) (ifInst ""  (formula "84")))
                              (rule "closeTrue" (formula "109"))
                           )
                           (branch
                              (rule "allRight" (formula "134") (inst "sk=j_0"))
                              (rule "impRight" (formula "134"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "136") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "109") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (ifseqformula "82"))
                              (rule "orRight" (formula "109"))
                              (rule "close" (formula "109") (ifseqformula "84"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "134") (inst "sk=j_0"))
                           (rule "impRight" (formula "134"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "136") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "109") (term "0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (ifseqformula "82"))
                           (rule "orRight" (formula "109"))
                           (rule "referencedObjectIsCreatedRight" (formula "109") (ifseqformula "101"))
                           (rule "close" (formula "109") (ifseqformula "51"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "134") (inst "sk=j_0"))
                        (rule "impRight" (formula "134"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "136") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "109") (term "0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (ifseqformula "82"))
                        (rule "orRight" (formula "109"))
                        (rule "close" (formula "109") (ifseqformula "54"))
                     )
                  )
               )
               (branch
                  (rule "andRight" (formula "134"))
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "allRight" (formula "107") (inst "sk=j_0"))
                           (rule "impRight" (formula "107"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "136") (inst "sk=i_2"))
                           (rule "impRight" (formula "136"))
                           (rule "notRight" (formula "137"))
                           (rule "andLeft" (formula "2"))
                           (rule "castedGetAny" (formula "112") (term "1,1,0"))
                           (rule "castedGetAny" (formula "112") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "112") (term "0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "73"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                           (rule "polySimp_elimOne" (formula "67") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "112") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "pullOutSelect" (formula "112") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "113") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                           (rule "applyEq" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                           (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "114") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                           (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "63"))
                           (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                           (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_imp2or" (formula "48") (term "0"))
                           (rule "nnf_imp2or" (formula "70") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0"))
                           (rule "nnf_ex2all" (formula "113"))
                           (rule "nnf_imp2or" (formula "77") (term "0"))
                           (rule "nnf_imp2or" (formula "72") (term "0"))
                           (rule "nnf_imp2or" (formula "55") (term "0"))
                           (rule "nnf_imp2or" (formula "64") (term "0"))
                           (rule "nnf_imp2or" (formula "40") (term "0"))
                           (rule "nnf_imp2or" (formula "39") (term "0"))
                           (rule "nnf_imp2or" (formula "63") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "48") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "49") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                           (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "71") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "77") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "77") (term "1,0,0"))
                           (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                           (rule "mul_literals" (formula "77") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "77") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "77") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "77") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "55") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                           (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "48") (term "0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or_2" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "71") (term "0"))
                           (rule "commute_or_2" (formula "43") (term "0"))
                           (rule "commute_and" (formula "77") (term "0,0,1,0"))
                           (rule "commute_and" (formula "55") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "72") (term "0"))
                           (rule "commute_or" (formula "77") (term "0,0"))
                           (rule "lenNonNegative" (formula "91") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "91"))
                           (rule "applyEq" (formula "91") (term "0") (ifseqformula "92"))
                           (rule "qeq_literals" (formula "91"))
                           (rule "true_left" (formula "91"))
                           (rule "seqGetAlphaCast" (formula "3") (term "0"))
                           (rule "castedGetAny" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "commute_or" (formula "55") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "64") (term "0"))
                           (rule "commute_or_2" (formula "40") (term "0"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "commute_or_2" (formula "63") (term "0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "48") (term "0,0"))
                              (rule "commute_or" (formula "66") (term "0,0"))
                              (rule "commute_or" (formula "49") (term "0,0"))
                              (rule "commute_or" (formula "71") (term "0,0"))
                              (rule "commute_or" (formula "43") (term "0,0"))
                              (rule "commute_or" (formula "72") (term "0,0"))
                              (rule "commute_or_2" (formula "48") (term "0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or_2" (formula "71") (term "0"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "commute_or_2" (formula "72") (term "0"))
                              (rule "commute_or_2" (formula "64") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or_2" (formula "63") (term "0,0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or" (formula "64") (term "0,0,0"))
                              (rule "commute_or_2" (formula "64") (term "0,0"))
                              (rule "commute_or_2" (formula "64") (term "0"))
                              (rule "commute_or" (formula "40") (term "0,0,0"))
                              (rule "commute_or_2" (formula "40") (term "0,0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or" (formula "39") (term "0,0,0"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "commute_or" (formula "63") (term "0,0,0"))
                              (rule "commute_or_2" (formula "63") (term "0,0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_and_2" (formula "77") (term "0,1,0"))
                              (rule "commute_and_2" (formula "55") (term "0,1,0"))
                              (rule "ex_pull_out3" (formula "77") (term "0"))
                              (rule "cnf_rightDist" (formula "77") (term "0,0"))
                              (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                              (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                              (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "55") (term "0"))
                              (rule "cnf_rightDist" (formula "55") (term "0,0"))
                              (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                              (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                              (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "49") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                              (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "49") (term "0,0,1"))
                              (rule "leq_literals" (formula "49") (term "0,1"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "49") (term "0"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "closeFalse" (formula "49"))
                           )
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "107"))
                              (rule "close" (formula "94") (ifseqformula "56"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "allRight" (formula "107") (inst "sk=i_2"))
                              (rule "impRight" (formula "107"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "109"))
                              (rule "allRight" (formula "136") (inst "sk=i_3"))
                              (rule "impRight" (formula "136"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "138"))
                              (rule "dismissNonSelectedField" (formula "6") (term "0,1"))
                              (rule "castedGetAny" (formula "4") (term "0"))
                              (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "51"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "68"))
                              (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "68") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "74"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "74") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                              (rule "polySimp_elimOne" (formula "45") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                              (rule "polySimp_elimOne" (formula "51") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                              (rule "polySimp_elimOne" (formula "68") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "76") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                              (rule "polySimp_elimOne" (formula "74") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                              (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "106")))
                              (rule "ifthenelse_negated" (formula "4") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                              (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                              (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "nnf_imp2or" (formula "55") (term "0"))
                              (rule "nnf_imp2or" (formula "72") (term "0"))
                              (rule "nnf_imp2or" (formula "66") (term "0"))
                              (rule "nnf_imp2or" (formula "71") (term "0"))
                              (rule "nnf_imp2or" (formula "43") (term "0"))
                              (rule "nnf_imp2or" (formula "77") (term "0"))
                              (rule "nnf_imp2or" (formula "49") (term "0"))
                              (rule "nnf_imp2or" (formula "48") (term "0"))
                              (rule "nnf_imp2or" (formula "64") (term "0"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_imp2or" (formula "40") (term "0"))
                              (rule "nnf_imp2or" (formula "63") (term "0"))
                              (rule "nnf_notAnd" (formula "55") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                              (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "72") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                              (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                              (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "66") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "71") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                              (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "71") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                              (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "43") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "77") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "77") (term "1,0,0"))
                              (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0"))
                              (rule "mul_literals" (formula "77") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "77") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "77") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "77") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "77") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "77") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "49") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                              (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "48") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                              (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                              (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "64") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                              (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                              (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "40") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "63") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                              (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                              (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                              (rule "commute_or_2" (formula "72") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or_2" (formula "71") (term "0"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "commute_and" (formula "55") (term "0,0,1,0"))
                              (rule "commute_and" (formula "77") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or" (formula "77") (term "0,0"))
                              (rule "commute_or_2" (formula "48") (term "0"))
                              (rule "lenNonNegative" (formula "91") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "91"))
                              (rule "applyEq" (formula "91") (term "0") (ifseqformula "92"))
                              (rule "qeq_literals" (formula "91"))
                              (rule "true_left" (formula "91"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or_2" (formula "64") (term "0"))
                              (rule "commute_or_2" (formula "39") (term "0"))
                              (rule "commute_or_2" (formula "40") (term "0"))
                              (rule "commute_or_2" (formula "63") (term "0"))
                              (rule "commute_or" (formula "72") (term "0,0"))
                              (rule "commute_or" (formula "66") (term "0,0"))
                              (rule "commute_or_2" (formula "72") (term "0"))
                              (rule "commute_or" (formula "71") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or" (formula "43") (term "0,0"))
                              (rule "commute_or_2" (formula "71") (term "0"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or" (formula "48") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "48") (term "0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "63") (term "0,0"))
                                 (rule "commute_or" (formula "64") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or" (formula "63") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "63") (term "0,0"))
                                 (rule "commute_or_2" (formula "63") (term "0"))
                                 (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                 (rule "ex_pull_out3" (formula "55") (term "0"))
                                 (rule "cnf_rightDist" (formula "55") (term "0,0"))
                                 (rule "shift_paren_or" (formula "55") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "55") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "55") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "55") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "55") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "77") (term "0"))
                                 (rule "cnf_rightDist" (formula "77") (term "0,0"))
                                 (rule "shift_paren_or" (formula "77") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "77") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "77") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "77") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "77") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "72") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "72") (term "0,0,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "72"))
                                 (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "72") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1"))
                                 (rule "add_literals" (formula "72") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "72") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "72") (term "0,0,1"))
                                 (rule "leq_literals" (formula "72") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "72"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "72"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "94") (ifseqformula "107"))
                                 (rule "close" (formula "94") (ifseqformula "56"))
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "notRight" (formula "107"))
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "91") (ifseqformula "4") (ifseqformula "92"))
                                 (rule "close" (formula "91") (ifseqformula "53"))
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_2"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "136"))
                                    (rule "inEqSimp_ltToLeq" (formula "71"))
                                    (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "71") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "65"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "65") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                    (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                    (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0"))
                                    (rule "nnf_imp2or" (formula "59") (term "0"))
                                    (rule "nnf_imp2or" (formula "35") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "60") (term "0"))
                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "110") (inst "i=i") (inst "i_0=i_0"))
                                    (rule "expand_inInt" (formula "110") (term "1,0,0,1"))
                                    (rule "expand_inInt" (formula "110") (term "1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,1"))
                                    (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,1"))
                                    (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "110") (term "0,0"))
                                    (rule "castedGetAny" (formula "110") (term "0,0,1,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,1,1,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,1,1,0,0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "110") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "110") (term "0,0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "110") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "110") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "110") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "110") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "110") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "110") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "110") (term "1,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "110") (term "1,1,1,0,0,0,1"))
                                    (rule "pullOutSelect" (formula "110") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                    (rule "applyEq" (formula "111") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "111") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "111") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "111") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "111") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "110") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                    (rule "applyEq" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "111") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "112")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "111") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "111") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "111") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "110") (term "0,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "110"))
                                    (rule "applyEq" (formula "110") (term "1,1,1,0,0,0,1") (ifseqformula "58"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "110") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "110") (term "0,1"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "nnf_notAnd" (formula "110") (term "0,0,0"))
                                    (rule "nnf_notAnd" (formula "110") (term "0,0,1"))
                                    (rule "commute_or_2" (formula "68") (term "0"))
                                    (rule "nnf_notAnd" (formula "110") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "110") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "110") (term "0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "110") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,0,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "110") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "110") (term "1,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "110") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "1,0,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "110") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,1,1,0,0,1"))
                                    (rule "add_literals" (formula "110") (term "0,0,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "110") (term "0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "110") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "110") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "110") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "110") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "110") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_left" (formula "110") (term "0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "110") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "110") (term "1,1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or" (formula "73") (term "0,0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_and" (formula "73") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "lenNonNegative" (formula "87") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "87"))
                                    (rule "applyEq" (formula "87") (term "0") (ifseqformula "88"))
                                    (rule "qeq_literals" (formula "87"))
                                    (rule "true_left" (formula "87"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or_2" (formula "59") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "60") (term "0"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "68") (term "0,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "68") (term "0"))
                                    (rule "commute_or" (formula "62") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_or" (formula "45") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "commute_or_2" (formula "59") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "60") (term "0,0"))
                                    (rule "andRight" (formula "110"))
                                    (branch
                                       (rule "allRight" (formula "110") (inst "sk=i_0_0"))
                                       (rule "orRight" (formula "110"))
                                       (rule "notRight" (formula "111"))
                                       (rule "orRight" (formula "111"))
                                       (rule "orRight" (formula "111"))
                                       (rule "orRight" (formula "113"))
                                       (rule "inEqSimp_leqRight" (formula "111"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "112"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "113"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "114"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_or" (formula "63") (term "0,0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or" (formula "64") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                       (rule "commute_or_2" (formula "63") (term "0,0"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "allLeft" (formula "49") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "49") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "49"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "110") (inst "sk=i_3"))
                                       (rule "orRight" (formula "110"))
                                       (rule "notRight" (formula "111"))
                                       (rule "orRight" (formula "111"))
                                       (rule "orRight" (formula "111"))
                                       (rule "orRight" (formula "113"))
                                       (rule "inEqSimp_leqRight" (formula "111"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "112"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "113"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "114"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_or" (formula "63") (term "0,0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or" (formula "64") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "77") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                       (rule "commute_or_2" (formula "63") (term "0,0"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "allLeft" (formula "49") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "49") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "49"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "136"))
                                       (rule "inEqSimp_ltToLeq" (formula "71"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "71") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                       (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                       (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "68") (term "0"))
                                       (rule "nnf_imp2or" (formula "73") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "62") (term "0"))
                                       (rule "nnf_imp2or" (formula "51") (term "0"))
                                       (rule "nnf_imp2or" (formula "67") (term "0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "59") (term "0"))
                                       (rule "nnf_imp2or" (formula "35") (term "0"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_imp2or" (formula "60") (term "0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                       (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                       (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "110"))
                                       (rule "closeTrue" (formula "110"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "136"))
                                       (rule "inEqSimp_ltToLeq" (formula "71"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "71") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "65"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                       (rule "polySimp_elimOne" (formula "65") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_and_subsumption3" (formula "35") (term "0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_and_subsumption3" (formula "59") (term "0,0,0"))
                                       (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                       (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "nnf_imp2or" (formula "67") (term "0"))
                                       (rule "nnf_imp2or" (formula "51") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "68") (term "0"))
                                       (rule "nnf_imp2or" (formula "73") (term "0"))
                                       (rule "nnf_imp2or" (formula "62") (term "0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_imp2or" (formula "35") (term "0"))
                                       (rule "nnf_imp2or" (formula "59") (term "0"))
                                       (rule "nnf_imp2or" (formula "60") (term "0"))
                                       (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                       (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                       (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                       (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "110"))
                                       (rule "closeTrue" (formula "110"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_ltToLeq" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "65") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "wellFormedStoreObject" (formula "110"))
                                  (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "91")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1") (ifseqformula "83"))
                                 (rule "wellFormedAnonEQ" (formula "110") (term "0") (ifseqformula "83"))
                                 (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "52")) (ifInst ""  (formula "82")) (ifInst ""  (formula "85")))
                                 (rule "closeTrue" (formula "110"))
                              )
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "dismissNonSelectedField" (formula "110") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (ifseqformula "83"))
                                 (rule "orRight" (formula "110"))
                                 (rule "close" (formula "110") (ifseqformula "85"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "134") (inst "sk=i_2"))
                              (rule "impRight" (formula "134"))
                              (rule "notRight" (formula "135"))
                              (rule "andLeft" (formula "2"))
                              (rule "dismissNonSelectedField" (formula "110") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (ifseqformula "83"))
                              (rule "orRight" (formula "110"))
                              (rule "referencedObjectIsCreatedRight" (formula "110") (ifseqformula "102"))
                              (rule "close" (formula "110") (ifseqformula "52"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "134") (inst "sk=i_2"))
                           (rule "impRight" (formula "134"))
                           (rule "notRight" (formula "135"))
                           (rule "andLeft" (formula "2"))
                           (rule "dismissNonSelectedField" (formula "110") (term "0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (ifseqformula "83"))
                           (rule "orRight" (formula "110"))
                           (rule "close" (formula "110") (ifseqformula "55"))
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "134"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "notRight" (formula "134"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                              (rule "close" (formula "112") (ifseqformula "26"))
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "notRight" (formula "134"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                 (rule "close" (formula "112") (ifseqformula "26"))
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "notRight" (formula "107"))
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "27"))
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "134"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                       (rule "close" (formula "112") (ifseqformula "26"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "notRight" (formula "134"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                          (rule "close" (formula "112") (ifseqformula "26"))
                                       )
                                       (branch
                                          (rule "notRight" (formula "134"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                          (rule "close" (formula "112") (ifseqformula "26"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "26"))
                                 )
                                 (branch
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "26"))
                                 )
                              )
                              (branch
                                 (rule "notRight" (formula "134"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                 (rule "close" (formula "112") (ifseqformula "26"))
                              )
                           )
                           (branch
                              (rule "notRight" (formula "134"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                              (rule "close" (formula "112") (ifseqformula "26"))
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "134"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "136"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "allRight" (formula "112") (inst "sk=j_0"))
                                 (rule "impRight" (formula "112"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "114") (term "0,1,0"))
                                 (rule "castedGetAny" (formula "114") (term "1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "75"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "114") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "114") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "114") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "114") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "114") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "114") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "114") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "pullOutSelect" (formula "113") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                 (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "114") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "113") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                 (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                                 (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                 (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "nnf_imp2or" (formula "48") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "72") (term "0"))
                                 (rule "nnf_ex2all" (formula "114"))
                                 (rule "nnf_imp2or" (formula "72") (term "0"))
                                 (rule "nnf_imp2or" (formula "78") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                                 (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                 (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "78") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "78") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                                 (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "72") (term "0"))
                                 (rule "commute_and" (formula "78") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or" (formula "78") (term "0,0"))
                                 (rule "lenNonNegative" (formula "92") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "92"))
                                 (rule "applyEq" (formula "92") (term "0") (ifseqformula "93"))
                                 (rule "qeq_literals" (formula "92"))
                                 (rule "true_left" (formula "92"))
                                 (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                 (rule "castedGetAny" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "73") (term "0,0"))
                                    (rule "commute_or" (formula "72") (term "0,0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "64") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "ex_pull_out3" (formula "78") (term "0"))
                                    (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                    (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "56") (term "0"))
                                    (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                    (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "40") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                    (rule "leq_literals" (formula "40") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "closeFalse" (formula "40"))
                                 )
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "108"))
                                    (rule "close" (formula "95") (ifseqformula "57"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "notRight" (formula "135"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "allRight" (formula "112") (inst "sk=i_2"))
                                    (rule "impRight" (formula "112"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "114"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "70") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "76"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "76") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                    (rule "polySimp_elimOne" (formula "76") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                    (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                                    (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                                    (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "56") (term "0"))
                                    (rule "nnf_imp2or" (formula "72") (term "0"))
                                    (rule "nnf_imp2or" (formula "49") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "50") (term "0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "78") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "78") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "65") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_and" (formula "78") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "lenNonNegative" (formula "92") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "92"))
                                    (rule "applyEq" (formula "92") (term "0") (ifseqformula "93"))
                                    (rule "qeq_literals" (formula "92"))
                                    (rule "true_left" (formula "92"))
                                    (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                    (rule "castedGetAny" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "commute_or" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or" (formula "72") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_or" (formula "73") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or_2" (formula "50") (term "0"))
                                       (rule "commute_or_2" (formula "73") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "65") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "64") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                       (rule "ex_pull_out3" (formula "56") (term "0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                       (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "78") (term "0"))
                                       (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                       (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "73") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                       (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,1"))
                                       (rule "leq_literals" (formula "73") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_contradInEq1" (formula "73") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "73") (term "0"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "closeFalse" (formula "73"))
                                    )
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "108"))
                                       (rule "close" (formula "95") (ifseqformula "57"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "107"))
                                       (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "93") (ifseqformula "6") (ifseqformula "94"))
                                       (rule "close" (formula "93") (ifseqformula "55"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                          (rule "impRight" (formula "134"))
                                          (rule "notRight" (formula "135"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "67") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "73") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                          (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                          (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                          (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                          (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "nnf_imp2or" (formula "68") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "74") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "63") (term "0"))
                                          (rule "nnf_imp2or" (formula "52") (term "0"))
                                          (rule "nnf_imp2or" (formula "40") (term "0"))
                                          (rule "nnf_imp2or" (formula "69") (term "0"))
                                          (rule "nnf_imp2or" (formula "60") (term "0"))
                                          (rule "nnf_imp2or" (formula "37") (term "0"))
                                          (rule "nnf_imp2or" (formula "61") (term "0"))
                                          (rule "nnf_imp2or" (formula "36") (term "0"))
                                          (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                          (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                          (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                          (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                          (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                          (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "111") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "expand_inInt" (formula "111") (term "1,0,0,1"))
                                          (rule "expand_inInt" (formula "111") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "111") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0"))
                                          (rule "castedGetAny" (formula "111") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "111") (term "0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "111") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,0,1,0"))
                                          (rule "pullOutSelect" (formula "111") (term "0,1,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                          (rule "applyEq" (formula "112") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "112") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "111") (term "0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                          (rule "applyEq" (formula "112") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "112") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "111") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "applyEq" (formula "111") (term "1,1,1,0,0,0,1") (ifseqformula "59"))
                                          (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "111") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "111") (term "0,1"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,1"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "111") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "111") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,1,1,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "111") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_left" (formula "111") (term "0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "111") (term "1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,1,0,0,1"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "74") (term "0,0"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_and" (formula "74") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "52") (term "0,0"))
                                          (rule "commute_or_2" (formula "69") (term "0"))
                                          (rule "lenNonNegative" (formula "88") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "88"))
                                          (rule "applyEq" (formula "88") (term "0") (ifseqformula "89"))
                                          (rule "qeq_literals" (formula "88"))
                                          (rule "true_left" (formula "88"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "60") (term "0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or_2" (formula "61") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "68") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or" (formula "63") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_or" (formula "69") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "69") (term "0"))
                                          (rule "commute_or_2" (formula "60") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or_2" (formula "61") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "andRight" (formula "111"))
                                          (branch
                                             (rule "allRight" (formula "111") (inst "sk=i_0_1"))
                                             (rule "orRight" (formula "111"))
                                             (rule "notRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_leqRight" (formula "112"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "113"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "114"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "115"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "ex_pull_out3" (formula "78") (term "0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "56") (term "0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "64") (inst "t=i_0_1"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq0" (formula "64") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "64") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (ifseqformula "2"))
                                             (rule "andLeft" (formula "64"))
                                             (rule "inEqSimp_homoInEq1" (formula "64"))
                                             (rule "polySimp_pullOutFactor1b" (formula "64") (term "0"))
                                             (rule "add_literals" (formula "64") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "64") (term "1,0"))
                                             (rule "add_zero_right" (formula "64") (term "0"))
                                             (rule "leq_literals" (formula "64"))
                                             (rule "closeFalse" (formula "64"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "111") (inst "sk=i_2"))
                                             (rule "orRight" (formula "111"))
                                             (rule "notRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_leqRight" (formula "112"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "113"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "114"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "115"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "ex_pull_out3" (formula "78") (term "0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "56") (term "0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "65") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "65") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                             (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "65") (term "0,0,1"))
                                             (rule "leq_literals" (formula "65") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "65"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "64"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "andRight" (formula "107"))
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                             (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                             (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "nnf_imp2or" (formula "68") (term "0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0"))
                                             (rule "nnf_imp2or" (formula "74") (term "0"))
                                             (rule "nnf_imp2or" (formula "46") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "69") (term "0"))
                                             (rule "nnf_imp2or" (formula "60") (term "0"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "61") (term "0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "111"))
                                             (rule "closeTrue" (formula "111"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                             (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                             (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "nnf_imp2or" (formula "69") (term "0"))
                                             (rule "nnf_imp2or" (formula "68") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "46") (term "0"))
                                             (rule "nnf_imp2or" (formula "74") (term "0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_imp2or" (formula "60") (term "0"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "61") (term "0"))
                                             (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "111"))
                                             (rule "closeTrue" (formula "111"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_ltToLeq" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "67") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "wellFormedStoreObject" (formula "111"))
                                        (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "92")))
                                       (rule "wellFormedAnonEQ" (formula "111") (term "0") (ifseqformula "84"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "1") (ifseqformula "84"))
                                       (rule "replace_known_left" (formula "111") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "83")) (ifInst ""  (formula "91")) (ifInst ""  (formula "86")))
                                       (rule "closeTrue" (formula "111"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                       (rule "orRight" (formula "112"))
                                       (rule "close" (formula "112") (ifseqformula "87"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "notRight" (formula "135"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                    (rule "orRight" (formula "112"))
                                    (rule "referencedObjectIsCreatedRight" (formula "112") (ifseqformula "104"))
                                    (rule "close" (formula "112") (ifseqformula "54"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                 (rule "orRight" (formula "112"))
                                 (rule "close" (formula "112") (ifseqformula "57"))
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "136"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "allRight" (formula "112") (inst "sk=j_0"))
                                 (rule "impRight" (formula "112"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "114") (term "0,1,0"))
                                 (rule "castedGetAny" (formula "114") (term "1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "75"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "75") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "114") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "114") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "114") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "114") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "114") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "114") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "114") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "pullOutSelect" (formula "113") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                 (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "114") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "113") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                 (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                                 (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                 (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "nnf_imp2or" (formula "48") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "72") (term "0"))
                                 (rule "nnf_ex2all" (formula "114"))
                                 (rule "nnf_imp2or" (formula "72") (term "0"))
                                 (rule "nnf_imp2or" (formula "78") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0"))
                                 (rule "nnf_imp2or" (formula "64") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                                 (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "72") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                 (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "78") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "78") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                                 (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "72") (term "0"))
                                 (rule "commute_and" (formula "78") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or" (formula "78") (term "0,0"))
                                 (rule "lenNonNegative" (formula "92") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "92"))
                                 (rule "applyEq" (formula "92") (term "0") (ifseqformula "93"))
                                 (rule "qeq_literals" (formula "92"))
                                 (rule "true_left" (formula "92"))
                                 (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                 (rule "castedGetAny" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "73") (term "0,0"))
                                    (rule "commute_or" (formula "72") (term "0,0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "64") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0,0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "ex_pull_out3" (formula "78") (term "0"))
                                    (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                    (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "56") (term "0"))
                                    (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                    (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "41") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                    (rule "leq_literals" (formula "41") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "41"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "40"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "108"))
                                    (rule "close" (formula "95") (ifseqformula "57"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_2"))
                                    (rule "impRight" (formula "134"))
                                    (rule "notRight" (formula "135"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "allRight" (formula "112") (inst "sk=i_3"))
                                    (rule "impRight" (formula "112"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "114"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "70") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "76"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "76") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                    (rule "polySimp_elimOne" (formula "76") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                                    (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                                    (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                                    (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "56") (term "0"))
                                    (rule "nnf_imp2or" (formula "72") (term "0"))
                                    (rule "nnf_imp2or" (formula "49") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "50") (term "0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0"))
                                    (rule "nnf_imp2or" (formula "78") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "72") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "72") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "72") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "78") (term "1,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0"))
                                    (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "78") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "78") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "65") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or" (formula "56") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "78") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "73") (term "0"))
                                    (rule "lenNonNegative" (formula "92") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "92"))
                                    (rule "applyEq" (formula "92") (term "0") (ifseqformula "93"))
                                    (rule "qeq_literals" (formula "92"))
                                    (rule "true_left" (formula "92"))
                                    (rule "seqGetAlphaCast" (formula "5") (term "0"))
                                    (rule "castedGetAny" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "commute_or" (formula "78") (term "0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0"))
                                    (rule "commute_or" (formula "72") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "72") (term "0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or" (formula "73") (term "0,0"))
                                       (rule "commute_or_2" (formula "50") (term "0"))
                                       (rule "commute_or_2" (formula "73") (term "0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "65") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "64") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                       (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                       (rule "ex_pull_out3" (formula "56") (term "0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                       (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "78") (term "0"))
                                       (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                       (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "73") (inst "t=i_3"))
                                       (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "73") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1"))
                                       (rule "add_literals" (formula "73") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "73") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,1"))
                                       (rule "leq_literals" (formula "73") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "73"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "95") (ifseqformula "108"))
                                       (rule "close" (formula "95") (ifseqformula "57"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "107"))
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "93") (ifseqformula "6") (ifseqformula "94"))
                                       (rule "close" (formula "93") (ifseqformula "55"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "allRight" (formula "134") (inst "sk=i_2"))
                                          (rule "impRight" (formula "134"))
                                          (rule "notRight" (formula "135"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "67") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "73") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                          (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                          (rule "polySimp_elimOne" (formula "73") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                          (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                          (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                          (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                          (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "nnf_imp2or" (formula "68") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "74") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "63") (term "0"))
                                          (rule "nnf_imp2or" (formula "52") (term "0"))
                                          (rule "nnf_imp2or" (formula "40") (term "0"))
                                          (rule "nnf_imp2or" (formula "69") (term "0"))
                                          (rule "nnf_imp2or" (formula "60") (term "0"))
                                          (rule "nnf_imp2or" (formula "37") (term "0"))
                                          (rule "nnf_imp2or" (formula "61") (term "0"))
                                          (rule "nnf_imp2or" (formula "36") (term "0"))
                                          (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                          (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                          (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                          (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                          (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                          (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                          (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "111") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "expand_inInt" (formula "111") (term "1,0,0,1"))
                                          (rule "expand_inInt" (formula "111") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "111") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,1,0,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "111") (term "0,0,0,0"))
                                          (rule "castedGetAny" (formula "111") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "111") (term "0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "111") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "111") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,0,1,0"))
                                          (rule "pullOutSelect" (formula "111") (term "0,1,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                          (rule "applyEq" (formula "112") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "112") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "111") (term "0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                          (rule "applyEq" (formula "112") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "112") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "112") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "111") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "applyEq" (formula "111") (term "1,1,1,0,0,0,1") (ifseqformula "59"))
                                          (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "111") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "111") (term "0,1"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,1"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "111") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "111") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,1,1,0,0,0"))
                                          (rule "add_literals" (formula "111") (term "0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "111") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "111") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "111") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_left" (formula "111") (term "0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "111") (term "1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "111") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "111") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "111") (term "0,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "111") (term "1,0,1,0,0,1"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "74") (term "0,0"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_and" (formula "74") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "52") (term "0,0"))
                                          (rule "commute_or_2" (formula "69") (term "0"))
                                          (rule "lenNonNegative" (formula "88") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "88"))
                                          (rule "applyEq" (formula "88") (term "0") (ifseqformula "89"))
                                          (rule "qeq_literals" (formula "88"))
                                          (rule "true_left" (formula "88"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "60") (term "0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or_2" (formula "61") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_or" (formula "68") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "68") (term "0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or" (formula "63") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_or" (formula "69") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "69") (term "0"))
                                          (rule "commute_or_2" (formula "60") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or_2" (formula "61") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "andRight" (formula "111"))
                                          (branch
                                             (rule "allRight" (formula "111") (inst "sk=i_0_0"))
                                             (rule "orRight" (formula "111"))
                                             (rule "notRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_leqRight" (formula "112"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "113"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "114"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "115"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "ex_pull_out3" (formula "78") (term "0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "56") (term "0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "64") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_commuteGeq" (formula "64") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "64") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
                                             (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "64") (term "0,0,1"))
                                             (rule "leq_literals" (formula "64") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "64"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "111") (inst "sk=i_3"))
                                             (rule "orRight" (formula "111"))
                                             (rule "notRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "112"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_leqRight" (formula "112"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "113"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "114"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "115"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_or" (formula "64") (term "0,0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or" (formula "65") (term "0,0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "64") (term "0,0"))
                                             (rule "commute_or_2" (formula "64") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_or_2" (formula "65") (term "0,0"))
                                             (rule "commute_or_2" (formula "65") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "ex_pull_out3" (formula "78") (term "0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "78") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "78") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "78") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "78") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "56") (term "0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "56") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "56") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "41") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "41"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch
                                          (rule "andRight" (formula "107"))
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_2"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                             (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                             (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "nnf_imp2or" (formula "68") (term "0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0"))
                                             (rule "nnf_imp2or" (formula "74") (term "0"))
                                             (rule "nnf_imp2or" (formula "46") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "69") (term "0"))
                                             (rule "nnf_imp2or" (formula "60") (term "0"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "61") (term "0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "111"))
                                             (rule "closeTrue" (formula "111"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_2"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                             (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                             (rule "polySimp_elimOne" (formula "67") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                             (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                             (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "nnf_imp2or" (formula "69") (term "0"))
                                             (rule "nnf_imp2or" (formula "68") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "46") (term "0"))
                                             (rule "nnf_imp2or" (formula "74") (term "0"))
                                             (rule "nnf_imp2or" (formula "52") (term "0"))
                                             (rule "nnf_imp2or" (formula "40") (term "0"))
                                             (rule "nnf_imp2or" (formula "45") (term "0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_imp2or" (formula "60") (term "0"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "61") (term "0"))
                                             (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                             (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "68") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "63") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                             (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                             (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "60") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "111"))
                                             (rule "closeTrue" (formula "111"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_ltToLeq" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "67") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "wellFormedStoreObject" (formula "111"))
                                        (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "92")))
                                       (rule "wellFormedAnonEQ" (formula "111") (term "0") (ifseqformula "84"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "1") (ifseqformula "84"))
                                       (rule "replace_known_left" (formula "111") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "83")) (ifInst ""  (formula "91")) (ifInst ""  (formula "86")))
                                       (rule "closeTrue" (formula "111"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "notRight" (formula "135"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                       (rule "orRight" (formula "112"))
                                       (rule "close" (formula "112") (ifseqformula "87"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_2"))
                                    (rule "impRight" (formula "134"))
                                    (rule "notRight" (formula "135"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                    (rule "orRight" (formula "112"))
                                    (rule "referencedObjectIsCreatedRight" (formula "112") (ifseqformula "104"))
                                    (rule "close" (formula "112") (ifseqformula "54"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                 (rule "orRight" (formula "112"))
                                 (rule "close" (formula "112") (ifseqformula "57"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch
               (rule "andRight" (formula "134"))
               (branch
                  (rule "andRight" (formula "107"))
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "allRight" (formula "134") (inst "sk=j_0"))
                        (rule "impRight" (formula "134"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "140") (inst "sk=iv_0"))
                        (rule "impRight" (formula "140"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "111") (inst "sk=j_1"))
                        (rule "impRight" (formula "111"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "140") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "113") (term "0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "113") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                        (rule "castedGetAny" (formula "113") (term "0,1,0"))
                        (rule "castedGetAny" (formula "113") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "74"))
                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "74") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "68") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "140") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "140") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                        (rule "polySimp_elimOne" (formula "74") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                        (rule "polySimp_elimOne" (formula "68") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                        (rule "polySimp_elimOne" (formula "51") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "140") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "140") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "140") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "140") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "140") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "140") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "113") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "113") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                        (rule "applyEq" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                        (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "114") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "113") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                        (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                        (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                        (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                        (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "nnf_imp2or" (formula "43") (term "0"))
                        (rule "nnf_imp2or" (formula "72") (term "0"))
                        (rule "nnf_imp2or" (formula "71") (term "0"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_ex2all" (formula "141"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_ex2all" (formula "115"))
                        (rule "nnf_imp2or" (formula "79") (term "0"))
                        (rule "nnf_imp2or" (formula "68") (term "0"))
                        (rule "nnf_imp2or" (formula "65") (term "0"))
                        (rule "nnf_imp2or" (formula "66") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_imp2or" (formula "42") (term "0"))
                        (rule "nnf_notAnd" (formula "2") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "74") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                        (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                        (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "73") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                        (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "50") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "57") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                        (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "79") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                        (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "68") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                        (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                        (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "65") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "2") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                        (rule "commute_or_2" (formula "45") (term "0"))
                        (rule "commute_or_2" (formula "74") (term "0"))
                        (rule "commute_or_2" (formula "73") (term "0"))
                        (rule "commute_or_2" (formula "51") (term "0"))
                        (rule "commute_or_2" (formula "50") (term "0"))
                        (rule "commute_and" (formula "57") (term "0,0,1,0"))
                        (rule "commute_and" (formula "79") (term "0,0,1,0"))
                        (rule "lenNonNegative" (formula "93") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "93"))
                        (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                        (rule "qeq_literals" (formula "93"))
                        (rule "true_left" (formula "93"))
                        (rule "seqGetAlphaCast" (formula "145") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "seqGetAlphaCast" (formula "145") (term "1"))
                        (rule "castDel" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "commute_or" (formula "57") (term "0,0"))
                        (rule "commute_or_2" (formula "68") (term "0"))
                        (rule "commute_or" (formula "79") (term "0,0"))
                        (rule "commute_or_2" (formula "2") (term "0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (rule "commute_or_2" (formula "65") (term "0"))
                        (rule "commute_or_2" (formula "66") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "commute_or" (formula "45") (term "0,0"))
                           (rule "commute_or" (formula "74") (term "0,0"))
                           (rule "commute_or" (formula "73") (term "0,0"))
                           (rule "commute_or" (formula "51") (term "0,0"))
                           (rule "commute_or" (formula "50") (term "0,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or_2" (formula "74") (term "0"))
                           (rule "commute_or_2" (formula "73") (term "0"))
                           (rule "commute_or_2" (formula "51") (term "0"))
                           (rule "commute_or_2" (formula "50") (term "0"))
                           (rule "commute_or" (formula "68") (term "0,0"))
                           (rule "commute_or" (formula "2") (term "0,0"))
                           (rule "commute_or_2" (formula "68") (term "0"))
                           (rule "commute_or_2" (formula "65") (term "0,0"))
                           (rule "commute_or_2" (formula "66") (term "0,0"))
                           (rule "commute_or_2" (formula "41") (term "0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "42") (term "0,0"))
                           (rule "commute_and_2" (formula "57") (term "0,1,0"))
                           (rule "commute_and_2" (formula "79") (term "0,1,0"))
                           (rule "commute_or" (formula "65") (term "0,0,0"))
                           (rule "commute_or_2" (formula "65") (term "0,0"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "commute_or" (formula "66") (term "0,0,0"))
                           (rule "commute_or_2" (formula "66") (term "0,0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or" (formula "41") (term "0,0,0"))
                           (rule "commute_or_2" (formula "41") (term "0,0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "commute_or" (formula "42") (term "0,0,0"))
                           (rule "commute_or_2" (formula "42") (term "0,0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "ex_pull_out3" (formula "57") (term "0"))
                           (rule "cnf_rightDist" (formula "57") (term "0,0"))
                           (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                           (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                           (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                           (rule "ex_pull_out3" (formula "79") (term "0"))
                           (rule "cnf_rightDist" (formula "79") (term "0,0"))
                           (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                           (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                           (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                           (rule "commute_and" (formula "57") (term "0,0,0"))
                           (rule "commute_and_2" (formula "57") (term "0,0"))
                           (rule "commute_and" (formula "79") (term "0,0,0"))
                           (rule "commute_and_2" (formula "79") (term "0,0"))
                           (rule "allLeft" (formula "73") (inst "t=i_1"))
                           (rule "inEqSimp_commuteGeq" (formula "73") (term "1"))
                           (rule "applyEq" (formula "73") (term "0,0,0,0") (ifseqformula "79"))
                           (rule "replace_known_right" (formula "73") (term "0,0,0") (ifseqformula "106"))
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "true_left" (formula "73"))
                           (rule "allLeft" (formula "68") (inst "t=i_2_1"))
                           (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                           (rule "applyEq" (formula "68") (term "0,0,0,0") (ifseqformula "73"))
                           (rule "replace_known_right" (formula "68") (term "0,0,0") (ifseqformula "106"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "true_left" (formula "68"))
                           (rule "allLeft" (formula "74") (inst "t=j_1"))
                           (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "74") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "74") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "74"))
                           (rule "inEqSimp_contradInEq1" (formula "74") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1"))
                           (rule "add_literals" (formula "74") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "74") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "74") (term "0,0,1"))
                           (rule "leq_literals" (formula "74") (term "0,1"))
                            (builtin "One Step Simplification" (formula "74"))
                           (rule "notLeft" (formula "74"))
                           (rule "allLeft" (formula "51") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                           (rule "add_literals" (formula "51") (term "0,0,1"))
                           (rule "leq_literals" (formula "51") (term "0,1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "51") (term "0,1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "notLeft" (formula "51"))
                           (rule "allLeft" (formula "50") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                           (rule "applyEq" (formula "50") (term "0,0,0,0") (ifseqformula "56"))
                           (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "134"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "allLeft" (formula "45") (inst "t=i_2_0"))
                           (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                           (rule "applyEq" (formula "45") (term "0,0,0,0") (ifseqformula "50"))
                           (rule "replace_known_right" (formula "45") (term "0,0,0") (ifseqformula "134"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "allLeft" (formula "57") (inst "t=j_0"))
                           (rule "exLeft" (formula "57") (inst "sk=i_2"))
                           (rule "andLeft" (formula "57"))
                           (rule "andLeft" (formula "57"))
                           (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                           (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "57") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "59") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "58") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                           (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                           (rule "add_literals" (formula "57") (term "0,0,1"))
                           (rule "leq_literals" (formula "57") (term "0,1"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                           (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                           (rule "add_literals" (formula "59") (term "0,0,1"))
                           (rule "leq_literals" (formula "59") (term "0,1"))
                            (builtin "One Step Simplification" (formula "59"))
                           (rule "applyEq" (formula "2") (term "1,0,0,0,0") (ifseqformula "59"))
                           (rule "applyEq" (formula "99") (term "0") (ifseqformula "59"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                           (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                           (rule "add_literals" (formula "58") (term "0,0,1"))
                           (rule "leq_literals" (formula "58") (term "0,1"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "allLeft" (formula "82") (inst "t=j_1"))
                           (rule "exLeft" (formula "82") (inst "sk=i_3"))
                           (rule "andLeft" (formula "82"))
                           (rule "andLeft" (formula "82"))
                           (rule "inEqSimp_commuteGeq" (formula "84") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
                           (rule "inEqSimp_commuteGeq" (formula "82") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "83") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "83") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "83") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "83") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,1"))
                           (rule "add_literals" (formula "83") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "83") (term "1,0,0,1"))
                           (rule "add_literals" (formula "83") (term "0,0,1"))
                           (rule "leq_literals" (formula "83") (term "0,1"))
                            (builtin "One Step Simplification" (formula "83"))
                           (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1"))
                           (rule "add_literals" (formula "82") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "82") (term "1,0,0,1"))
                           (rule "add_literals" (formula "82") (term "0,0,1"))
                           (rule "leq_literals" (formula "82") (term "0,1"))
                            (builtin "One Step Simplification" (formula "82"))
                           (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "84") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "84"))
                           (rule "inEqSimp_contradInEq1" (formula "83") (term "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "83") (term "0,1"))
                            (builtin "One Step Simplification" (formula "83"))
                           (rule "inEqSimp_contradInEq1" (formula "82") (term "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "82") (term "0,1"))
                            (builtin "One Step Simplification" (formula "82"))
                           (rule "inEqSimp_contradInEq1" (formula "84") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1"))
                           (rule "add_literals" (formula "84") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "84") (term "1,0,0,1"))
                           (rule "add_literals" (formula "84") (term "0,0,1"))
                           (rule "leq_literals" (formula "84") (term "0,1"))
                            (builtin "One Step Simplification" (formula "84"))
                           (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "84"))
                           (rule "applyEq" (formula "103") (term "0") (ifseqformula "84"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "61"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "62"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "63"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "64"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "65"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "66"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "125") (term "0") (ifseqformula "67"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "126"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "68"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "1") (ifseqformula "69"))
                           (rule "replace_known_right" (formula "89") (term "0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "69"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "117") (term "0") (ifseqformula "70"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "71"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "134") (term "0") (ifseqformula "71"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "135"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "129") (term "0") (ifseqformula "72"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "130"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "73"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "1") (ifseqformula "74"))
                           (rule "replace_known_right" (formula "83") (term "0") (ifseqformula "124"))
                            (builtin "One Step Simplification" (formula "83"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "74"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "134") (term "0") (ifseqformula "75"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "135"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "76"))
                           (rule "applyEq" (formula "86") (term "1,0,1") (ifseqformula "87"))
                           (rule "replace_known_left" (formula "86") (term "1") (ifseqformula "85"))
                            (builtin "One Step Simplification" (formula "86"))
                           (rule "true_left" (formula "86"))
                           (rule "lenNonNegative" (formula "20") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "20"))
                           (rule "allLeft" (formula "17") (inst "t=i_2"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "74"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "75"))
                           (rule "andLeft" (formula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_literals" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "109"))
                           (rule "close" (formula "96") (ifseqformula "58"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "allRight" (formula "138") (inst "sk=iv_0"))
                           (rule "impRight" (formula "138"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "136") (inst "sk=j_0"))
                           (rule "impRight" (formula "136"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "111") (inst "sk=i_2"))
                           (rule "impRight" (formula "111"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "113"))
                           (rule "eqSymm" (formula "140") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "69") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "75"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "140") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "140") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                           (rule "polySimp_elimOne" (formula "69") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                           (rule "polySimp_elimOne" (formula "75") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "140") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "140") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "140") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "140") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "140") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "140") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                           (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "64"))
                           (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                           (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                           (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                           (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_ex2all" (formula "141"))
                           (rule "nnf_imp2or" (formula "68") (term "0"))
                           (rule "nnf_imp2or" (formula "51") (term "0"))
                           (rule "nnf_imp2or" (formula "57") (term "0"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "nnf_imp2or" (formula "50") (term "0"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_imp2or" (formula "79") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_imp2or" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "74") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "68") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "51") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "57") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "50") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                           (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                           (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "73") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                           (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "74") (term "0"))
                           (rule "commute_or_2" (formula "68") (term "0"))
                           (rule "commute_or_2" (formula "51") (term "0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "57") (term "0,0"))
                           (rule "commute_or_2" (formula "50") (term "0"))
                           (rule "commute_and" (formula "57") (term "0,0,1,0"))
                           (rule "commute_and" (formula "79") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "73") (term "0"))
                           (rule "lenNonNegative" (formula "93") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "93"))
                           (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                           (rule "qeq_literals" (formula "93"))
                           (rule "true_left" (formula "93"))
                           (rule "seqGetAlphaCast" (formula "145") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "145") (term "1"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commute_or" (formula "79") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "74") (term "0,0"))
                              (rule "commute_or" (formula "68") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "50") (term "0,0"))
                              (rule "commute_or" (formula "73") (term "0,0"))
                              (rule "commute_or_2" (formula "74") (term "0"))
                              (rule "commute_or_2" (formula "68") (term "0"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_or_2" (formula "73") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0,0"))
                              (rule "commute_or" (formula "65") (term "0,0,0"))
                              (rule "commute_or_2" (formula "65") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_and_2" (formula "57") (term "0,1,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_and_2" (formula "79") (term "0,1,0"))
                              (rule "commute_or" (formula "66") (term "0,0,0"))
                              (rule "commute_or_2" (formula "66") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "ex_pull_out3" (formula "57") (term "0"))
                              (rule "cnf_rightDist" (formula "57") (term "0,0"))
                              (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                              (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                              (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "79") (term "0"))
                              (rule "cnf_rightDist" (formula "79") (term "0,0"))
                              (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                              (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                              (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "74") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "74") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "74") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1"))
                              (rule "add_literals" (formula "74") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "74") (term "1,0,0,1"))
                              (rule "add_literals" (formula "74") (term "0,0,1"))
                              (rule "leq_literals" (formula "74") (term "0,1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "inEqSimp_contradInEq1" (formula "74") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "74") (term "0"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "closeFalse" (formula "74"))
                           )
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "109"))
                              (rule "close" (formula "96") (ifseqformula "58"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "notRight" (formula "107"))
                              (rule "allRight" (formula "138") (inst "sk=iv_0"))
                              (rule "impRight" (formula "138"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "136") (inst "sk=j_0"))
                              (rule "impRight" (formula "136"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "5"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "92") (ifseqformula "5") (ifseqformula "93"))
                              (rule "close" (formula "92") (ifseqformula "54"))
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=j_0"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "140"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "138") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "72"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "72") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "66") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                 (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                 (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                 (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "nnf_imp2or" (formula "63") (term "0"))
                                 (rule "nnf_imp2or" (formula "45") (term "0"))
                                 (rule "nnf_ex2all" (formula "138"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "70") (term "0"))
                                 (rule "nnf_imp2or" (formula "75") (term "0"))
                                 (rule "nnf_imp2or" (formula "69") (term "0"))
                                 (rule "nnf_imp2or" (formula "53") (term "0"))
                                 (rule "nnf_imp2or" (formula "47") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0"))
                                 (rule "nnf_imp2or" (formula "38") (term "0"))
                                 (rule "nnf_imp2or" (formula "61") (term "0"))
                                 (rule "nnf_imp2or" (formula "62") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                 (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                 (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "75") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                 (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                 (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                 (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "112") (inst "i=i") (inst "i_0=i_0"))
                                 (rule "expand_inInt" (formula "112") (term "1,0,0,1,0"))
                                 (rule "expand_inInt" (formula "112") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1"))
                                 (rule "eqSymm" (formula "112") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0,1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0,0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "112") (term "0,0"))
                                 (rule "castedGetAny" (formula "112") (term "0,0,1,0,1"))
                                 (rule "castedGetAny" (formula "112") (term "0,0,1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "112") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "112") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "112") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "112") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "0,1,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,0,1"))
                                 (rule "pullOutSelect" (formula "112") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                 (rule "applyEq" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "113") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "58")))
                                 (rule "applyEqReverse" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "113") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "113") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "112") (term "0,0"))
                                 (rule "applyEq" (formula "112") (term "1,1,1,0,0,0,1") (ifseqformula "60"))
                                 (rule "applyEq" (formula "112") (term "1,0,0") (ifseqformula "60"))
                                 (rule "pullOutSelect" (formula "112") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "113") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "58")))
                                 (rule "applyEqReverse" (formula "113") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "113") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "112") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "112") (term "0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or_2" (formula "46") (term "0"))
                                 (rule "nnf_notAnd" (formula "112") (term "0,0,1"))
                                 (rule "nnf_notAnd" (formula "112") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "nnf_notAnd" (formula "112") (term "1,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "112") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,0,1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "112") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,1,1,0,0,1"))
                                 (rule "add_literals" (formula "112") (term "0,0,1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "112") (term "0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_left" (formula "112") (term "0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "112") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "112") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "1,0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "112") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "112") (term "0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "1,1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "112") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "112") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "112") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "112") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "70") (term "0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_and" (formula "75") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "75") (term "0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or" (formula "53") (term "0,0"))
                                 (rule "lenNonNegative" (formula "89") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "89"))
                                 (rule "applyEq" (formula "89") (term "0") (ifseqformula "90"))
                                 (rule "qeq_literals" (formula "89"))
                                 (rule "true_left" (formula "89"))
                                 (rule "seqGetAlphaCast" (formula "142") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "142") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or_2" (formula "61") (term "0"))
                                 (rule "commute_or_2" (formula "62") (term "0"))
                                 (rule "commute_or" (formula "64") (term "0,0"))
                                 (rule "commute_or" (formula "46") (term "0,0"))
                                 (rule "commute_or" (formula "41") (term "0,0"))
                                 (rule "commute_or" (formula "70") (term "0,0"))
                                 (rule "commute_or" (formula "69") (term "0,0"))
                                 (rule "commute_or_2" (formula "64") (term "0"))
                                 (rule "commute_or" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "46") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "70") (term "0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "61") (term "0,0"))
                                 (rule "commute_or_2" (formula "62") (term "0,0"))
                                 (rule "andRight" (formula "112"))
                                 (branch
                                    (rule "allRight" (formula "112") (inst "sk=i_0_0"))
                                    (rule "orRight" (formula "112"))
                                    (rule "notRight" (formula "113"))
                                    (rule "orRight" (formula "113"))
                                    (rule "orRight" (formula "114"))
                                    (rule "orRight" (formula "113"))
                                    (rule "inEqSimp_geqRight" (formula "115"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "116"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "116"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "116"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "79") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "ex_pull_out3" (formula "79") (term "0"))
                                    (rule "cnf_rightDist" (formula "79") (term "0,0"))
                                    (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "57") (term "0"))
                                    (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                    (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "65") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_commuteGeq" (formula "65") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "65") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                                    (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "65") (term "0,0,1"))
                                    (rule "leq_literals" (formula "65") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "65"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "64"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "112") (inst "sk=i_2"))
                                    (rule "orRight" (formula "112"))
                                    (rule "notRight" (formula "113"))
                                    (rule "orRight" (formula "113"))
                                    (rule "orRight" (formula "114"))
                                    (rule "orRight" (formula "113"))
                                    (rule "inEqSimp_geqRight" (formula "115"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "116"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "116"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "116"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or" (formula "65") (term "0,0,0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "79") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "65") (term "0,0"))
                                    (rule "commute_or_2" (formula "65") (term "0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "ex_pull_out3" (formula "79") (term "0"))
                                    (rule "cnf_rightDist" (formula "79") (term "0,0"))
                                    (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "57") (term "0"))
                                    (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                    (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "66") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "66") (term "0,0,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_commuteGeq" (formula "66") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_contradInEq0" (formula "66") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "66") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (ifseqformula "2"))
                                    (rule "andLeft" (formula "66"))
                                    (rule "inEqSimp_homoInEq1" (formula "66"))
                                    (rule "polySimp_pullOutFactor1b" (formula "66") (term "0"))
                                    (rule "add_literals" (formula "66") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0"))
                                    (rule "add_zero_right" (formula "66") (term "0"))
                                    (rule "leq_literals" (formula "66"))
                                    (rule "closeFalse" (formula "66"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=j_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "140"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "138") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "72") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                    (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "nnf_imp2or" (formula "63") (term "0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0"))
                                    (rule "nnf_ex2all" (formula "138"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "70") (term "0"))
                                    (rule "nnf_imp2or" (formula "75") (term "0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "53") (term "0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "75") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "112"))
                                    (rule "closeTrue" (formula "112"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=j_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "140"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "138") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "72") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "60") (term "0,0,0"))
                                    (rule "leq_literals" (formula "60") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_and_subsumption3" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0"))
                                    (rule "nnf_ex2all" (formula "138"))
                                    (rule "nnf_imp2or" (formula "75") (term "0"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "70") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_imp2or" (formula "53") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "112"))
                                    (rule "closeTrue" (formula "112"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "allRight" (formula "134") (inst "sk=j_0"))
                              (rule "impRight" (formula "134"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "140") (inst "sk=iv_0"))
                              (rule "impRight" (formula "140"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "138") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "66") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "72"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "72") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "49") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "138") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                              (rule "polySimp_elimOne" (formula "66") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                              (rule "polySimp_elimOne" (formula "43") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                              (rule "polySimp_elimOne" (formula "72") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "74") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                              (rule "polySimp_elimOne" (formula "49") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "138") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "138") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "138") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "138") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "138") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "wellFormedStoreObject" (formula "111"))
                               (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "92")))
                              (rule "wellFormedAnonEQ" (formula "111") (term "0") (ifseqformula "84"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (term "1") (ifseqformula "84"))
                              (rule "replace_known_left" (formula "111") (term "1,0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "53")) (ifInst ""  (formula "91")) (ifInst ""  (formula "86")))
                              (rule "closeTrue" (formula "111"))
                           )
                           (branch
                              (rule "allRight" (formula "138") (inst "sk=iv_0"))
                              (rule "impRight" (formula "138"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "136") (inst "sk=j_0"))
                              (rule "impRight" (formula "136"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "138") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "111") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "84"))
                              (rule "orRight" (formula "111"))
                              (rule "close" (formula "111") (ifseqformula "86"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "138") (inst "sk=iv_0"))
                           (rule "impRight" (formula "138"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "136") (inst "sk=j_0"))
                           (rule "impRight" (formula "136"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "138") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "111") (term "0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "84"))
                           (rule "orRight" (formula "111"))
                           (rule "referencedObjectIsCreatedRight" (formula "111") (ifseqformula "103"))
                           (rule "close" (formula "111") (ifseqformula "53"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "138") (inst "sk=iv_0"))
                        (rule "impRight" (formula "138"))
                        (rule "andLeft" (formula "1"))
                        (rule "allRight" (formula "136") (inst "sk=j_0"))
                        (rule "impRight" (formula "136"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "138") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "111") (term "0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "111") (ifseqformula "84"))
                        (rule "orRight" (formula "111"))
                        (rule "close" (formula "111") (ifseqformula "56"))
                     )
                  )
               )
               (branch
                  (rule "andRight" (formula "134"))
                  (branch
                     (rule "andRight" (formula "107"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "allRight" (formula "134") (inst "sk=i_2"))
                           (rule "impRight" (formula "134"))
                           (rule "notRight" (formula "135"))
                           (rule "andLeft" (formula "2"))
                           (rule "allRight" (formula "110") (inst "sk=j_0"))
                           (rule "impRight" (formula "110"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "142") (inst "sk=iv_0"))
                           (rule "impRight" (formula "142"))
                           (rule "andLeft" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "114") (term "0,0,1,1,0"))
                           (rule "castedGetAny" (formula "114") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "114") (term "0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "4") (term "0,1"))
                           (rule "castedGetAny" (formula "114") (term "1,1,0"))
                           (rule "dismissNonSelectedField" (formula "114") (term "0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "69") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "52") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "75"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "114") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "114") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                           (rule "polySimp_elimOne" (formula "69") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                           (rule "polySimp_elimOne" (formula "75") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "114") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "114") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "114") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "114") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "114") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "pullOutSelect" (formula "114") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "115") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                           (rule "applyEq" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "89"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "117")) (ifInst ""  (formula "61")))
                           (rule "applyEqReverse" (formula "116") (term "0,1,1,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "116") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                           (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                           (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                           (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "inEqSimp_and_subsumption3" (formula "64") (term "0,0,0"))
                           (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "64"))
                           (rule "nnf_imp2or" (formula "49") (term "0"))
                           (rule "nnf_imp2or" (formula "73") (term "0"))
                           (rule "nnf_imp2or" (formula "72") (term "0"))
                           (rule "nnf_imp2or" (formula "78") (term "0"))
                           (rule "nnf_imp2or" (formula "50") (term "0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_ex2all" (formula "115"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "nnf_imp2or" (formula "68") (term "0"))
                           (rule "nnf_imp2or" (formula "41") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_imp2or" (formula "65") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "50") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                           (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                           (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "74") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "73") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                           (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "51") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                           (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "57") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                           (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "68") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "68") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                           (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "65") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "50") (term "0"))
                           (rule "commute_or_2" (formula "74") (term "0"))
                           (rule "commute_or_2" (formula "73") (term "0"))
                           (rule "commute_or_2" (formula "51") (term "0"))
                           (rule "commute_or" (formula "79") (term "0,0"))
                           (rule "commute_and" (formula "79") (term "0,0,1,0"))
                           (rule "commute_and" (formula "57") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0"))
                           (rule "commute_or" (formula "57") (term "0,0"))
                           (rule "lenNonNegative" (formula "93") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "93"))
                           (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                           (rule "qeq_literals" (formula "93"))
                           (rule "true_left" (formula "93"))
                           (rule "seqGetAlphaCast" (formula "7") (term "0"))
                           (rule "castedGetAny" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "commute_or_2" (formula "68") (term "0"))
                           (rule "seqGetAlphaCast" (formula "145") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "seqGetAlphaCast" (formula "145") (term "1"))
                           (rule "castDel" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "41") (term "0"))
                           (rule "commute_or_2" (formula "42") (term "0"))
                           (rule "commute_or_2" (formula "66") (term "0"))
                           (rule "commute_or_2" (formula "65") (term "0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "50") (term "0,0"))
                              (rule "commute_or" (formula "74") (term "0,0"))
                              (rule "commute_or" (formula "73") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_or_2" (formula "74") (term "0"))
                              (rule "commute_or" (formula "68") (term "0,0"))
                              (rule "commute_or_2" (formula "73") (term "0"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_or_2" (formula "68") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0,0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_and_2" (formula "79") (term "0,1,0"))
                              (rule "commute_and_2" (formula "57") (term "0,1,0"))
                              (rule "commute_or" (formula "41") (term "0,0,0"))
                              (rule "commute_or_2" (formula "41") (term "0,0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_or" (formula "42") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or" (formula "66") (term "0,0,0"))
                              (rule "commute_or_2" (formula "66") (term "0,0"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or" (formula "65") (term "0,0,0"))
                              (rule "commute_or_2" (formula "65") (term "0,0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "ex_pull_out3" (formula "79") (term "0"))
                              (rule "cnf_rightDist" (formula "79") (term "0,0"))
                              (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                              (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                              (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                              (rule "ex_pull_out3" (formula "57") (term "0"))
                              (rule "cnf_rightDist" (formula "57") (term "0,0"))
                              (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                              (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                              (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                              (rule "allLeft" (formula "51") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                              (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,1"))
                              (rule "leq_literals" (formula "51") (term "0,1"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "51") (term "0"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "closeFalse" (formula "51"))
                           )
                           (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "109"))
                              (rule "close" (formula "96") (ifseqformula "58"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "allRight" (formula "107") (inst "sk=i_2"))
                              (rule "impRight" (formula "107"))
                              (rule "notRight" (formula "108"))
                              (rule "andLeft" (formula "2"))
                              (rule "allRight" (formula "140") (inst "sk=iv_0"))
                              (rule "impRight" (formula "140"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "138") (inst "sk=i_3"))
                              (rule "impRight" (formula "138"))
                              (rule "notRight" (formula "139"))
                              (rule "andLeft" (formula "2"))
                              (rule "castedGetAny" (formula "6") (term "0"))
                              (rule "dismissNonSelectedField" (formula "8") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "6") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "53") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "76"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "76") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "70"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "70") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "78") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                              (rule "polySimp_elimOne" (formula "47") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                              (rule "polySimp_elimOne" (formula "53") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                              (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                              (rule "polySimp_elimOne" (formula "70") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "pullOutSelect" (formula "6") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
                              (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "89"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "108")))
                              (rule "ifthenelse_negated" (formula "6") (term "0"))
                              (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                              (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                              (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                              (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "nnf_imp2or" (formula "74") (term "0"))
                              (rule "nnf_imp2or" (formula "57") (term "0"))
                              (rule "nnf_imp2or" (formula "50") (term "0"))
                              (rule "nnf_imp2or" (formula "73") (term "0"))
                              (rule "nnf_imp2or" (formula "45") (term "0"))
                              (rule "nnf_imp2or" (formula "51") (term "0"))
                              (rule "nnf_imp2or" (formula "68") (term "0"))
                              (rule "nnf_imp2or" (formula "79") (term "0"))
                              (rule "nnf_imp2or" (formula "66") (term "0"))
                              (rule "nnf_imp2or" (formula "65") (term "0"))
                              (rule "nnf_imp2or" (formula "42") (term "0"))
                              (rule "nnf_imp2or" (formula "41") (term "0"))
                              (rule "nnf_notAnd" (formula "74") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                              (rule "times_zero_1" (formula "74") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                              (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "57") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "57") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "57") (term "1,0,0"))
                              (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
                              (rule "mul_literals" (formula "57") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "50") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "50") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                              (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "73") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "73") (term "1,0,0"))
                              (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "73") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
                              (rule "mul_literals" (formula "73") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "73") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "73") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "73") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "73") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "45") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                              (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                              (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "51") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "68") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "68") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "68") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "68") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "68") (term "1,0,0"))
                              (rule "times_zero_1" (formula "68") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0"))
                              (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "79") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                              (rule "mul_literals" (formula "79") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                              (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "65") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "65") (term "1,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "41") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "65") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "74") (term "0"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_or" (formula "57") (term "0,0"))
                              (rule "commute_or_2" (formula "73") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_and" (formula "57") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (rule "commute_and" (formula "79") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "68") (term "0"))
                              (rule "lenNonNegative" (formula "93") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "93"))
                              (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                              (rule "qeq_literals" (formula "93"))
                              (rule "true_left" (formula "93"))
                              (rule "seqGetAlphaCast" (formula "145") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "145") (term "1"))
                              (rule "castDel" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or" (formula "79") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "commute_or_2" (formula "66") (term "0"))
                              (rule "commute_or_2" (formula "65") (term "0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or_2" (formula "41") (term "0"))
                              (rule "commute_or" (formula "74") (term "0,0"))
                              (rule "commute_or" (formula "50") (term "0,0"))
                              (rule "commute_or" (formula "73") (term "0,0"))
                              (rule "commute_or" (formula "45") (term "0,0"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "commute_or" (formula "68") (term "0,0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "73") (term "0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or_2" (formula "68") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                 (rule "commute_or" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "commute_and_2" (formula "79") (term "0,1,0"))
                                 (rule "commute_or" (formula "65") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0,0"))
                                 (rule "commute_or_2" (formula "65") (term "0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "ex_pull_out3" (formula "57") (term "0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                 (rule "shift_paren_or" (formula "57") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "57") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "57") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "79") (term "0"))
                                 (rule "cnf_rightDist" (formula "79") (term "0,0"))
                                 (rule "shift_paren_or" (formula "79") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "79") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "79") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "79") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "79") (term "0,0,0,0,0"))
                                 (rule "allLeft" (formula "74") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "74") (term "0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "74"))
                                 (rule "inEqSimp_commuteGeq" (formula "74") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "74") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "74") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "74"))
                                 (rule "inEqSimp_contradInEq1" (formula "74") (ifseqformula "9"))
                                 (rule "andLeft" (formula "74"))
                                 (rule "inEqSimp_homoInEq1" (formula "74"))
                                 (rule "polySimp_pullOutFactor1b" (formula "74") (term "0"))
                                 (rule "add_literals" (formula "74") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "74") (term "1,0"))
                                 (rule "add_literals" (formula "74") (term "0"))
                                 (rule "leq_literals" (formula "74"))
                                 (rule "closeFalse" (formula "74"))
                              )
                              (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "96") (ifseqformula "109"))
                                 (rule "close" (formula "96") (ifseqformula "58"))
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "notRight" (formula "107"))
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "notRight" (formula "135"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "140"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "93") (ifseqformula "6") (ifseqformula "94"))
                                 (rule "close" (formula "93") (ifseqformula "55"))
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "138"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "136") (inst "sk=i_2"))
                                    (rule "impRight" (formula "136"))
                                    (rule "notRight" (formula "137"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_ltToLeq" (formula "67"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "67") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "73") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                    (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "nnf_imp2or" (formula "47") (term "0"))
                                    (rule "nnf_imp2or" (formula "75") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0"))
                                    (rule "nnf_imp2or" (formula "70") (term "0"))
                                    (rule "nnf_imp2or" (formula "53") (term "0"))
                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "38") (term "0"))
                                    (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "112") (inst "i=i") (inst "i_0=i_0"))
                                    (rule "expand_inInt" (formula "112") (term "1,0,0,1,0"))
                                    (rule "expand_inInt" (formula "112") (term "1,0,0,1"))
                                    (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1,0"))
                                    (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1"))
                                    (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1"))
                                    (rule "eqSymm" (formula "112") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0,1,0,1"))
                                    (rule "castedGetAny" (formula "112") (term "0,0,1,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0,0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,1,1,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "112") (term "0,0"))
                                    (rule "castedGetAny" (formula "112") (term "0,0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,1,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "112") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "112") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "112") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "112") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "112") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,0,1,0"))
                                    (rule "pullOutSelect" (formula "112") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                    (rule "applyEq" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "113") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "113") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "113") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "112") (term "0,0"))
                                    (rule "applyEq" (formula "112") (term "1,1,1,0,0,0,1") (ifseqformula "60"))
                                    (rule "applyEq" (formula "112") (term "1,0,0") (ifseqformula "60"))
                                    (rule "pullOutSelect" (formula "112") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                    (rule "applyEq" (formula "113") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "86"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "113") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "113") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "113"))
                                    (rule "applyEqReverse" (formula "113") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_notAnd" (formula "61") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "61") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "112") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "112") (term "0,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "nnf_notAnd" (formula "112") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "112") (term "0,0,0"))
                                    (rule "nnf_notAnd" (formula "112") (term "0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_left" (formula "112") (term "0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "112") (term "1,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "112") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,0,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "112") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,1,1,0,0,1"))
                                    (rule "add_literals" (formula "112") (term "0,0,1,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "112") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "112") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "112") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "112") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "112") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "112") (term "0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "112") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "112") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "1,0,1,0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "75") (term "0,0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_and" (formula "75") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_and" (formula "53") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "70") (term "0"))
                                    (rule "commute_or" (formula "53") (term "0,0"))
                                    (rule "lenNonNegative" (formula "89") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "89"))
                                    (rule "applyEq" (formula "89") (term "0") (ifseqformula "90"))
                                    (rule "qeq_literals" (formula "89"))
                                    (rule "true_left" (formula "89"))
                                    (rule "seqGetAlphaCast" (formula "142") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "142") (term "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or_2" (formula "61") (term "0"))
                                    (rule "commute_or_2" (formula "62") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or" (formula "47") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "69") (term "0,0"))
                                    (rule "commute_or" (formula "64") (term "0,0"))
                                    (rule "commute_or" (formula "70") (term "0,0"))
                                    (rule "commute_or_2" (formula "47") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or_2" (formula "64") (term "0"))
                                    (rule "commute_or_2" (formula "70") (term "0"))
                                    (rule "commute_or_2" (formula "61") (term "0,0"))
                                    (rule "commute_or_2" (formula "62") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "andRight" (formula "112"))
                                    (branch
                                       (rule "allRight" (formula "112") (inst "sk=i_0_0"))
                                       (rule "orRight" (formula "112"))
                                       (rule "orRight" (formula "112"))
                                       (rule "notRight" (formula "114"))
                                       (rule "orRight" (formula "114"))
                                       (rule "orRight" (formula "113"))
                                       (rule "inEqSimp_leqRight" (formula "116"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "116"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "116"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "116"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "commute_or" (formula "65") (term "0,0,0"))
                                       (rule "commute_or" (formula "66") (term "0,0,0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "79") (term "0,1,0"))
                                       (rule "commute_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "allLeft" (formula "51") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                       (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "51") (term "0,0,1"))
                                       (rule "leq_literals" (formula "51") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "51") (term "0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "closeFalse" (formula "51"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "112") (inst "sk=i_3"))
                                       (rule "orRight" (formula "112"))
                                       (rule "orRight" (formula "112"))
                                       (rule "notRight" (formula "114"))
                                       (rule "orRight" (formula "114"))
                                       (rule "orRight" (formula "113"))
                                       (rule "inEqSimp_leqRight" (formula "116"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "116"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "115"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "116"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "commute_or" (formula "65") (term "0,0,0"))
                                       (rule "commute_or" (formula "66") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "79") (term "0,1,0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or_2" (formula "65") (term "0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0"))
                                       (rule "commute_or_2" (formula "41") (term "0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "allLeft" (formula "51") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "51") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "51"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_literals" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_2"))
                                       (rule "impRight" (formula "136"))
                                       (rule "notRight" (formula "137"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_ltToLeq" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "67") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                       (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                       (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "nnf_imp2or" (formula "47") (term "0"))
                                       (rule "nnf_imp2or" (formula "75") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "69") (term "0"))
                                       (rule "nnf_imp2or" (formula "64") (term "0"))
                                       (rule "nnf_imp2or" (formula "53") (term "0"))
                                       (rule "nnf_imp2or" (formula "70") (term "0"))
                                       (rule "nnf_imp2or" (formula "61") (term "0"))
                                       (rule "nnf_imp2or" (formula "62") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                       (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                       (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                       (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                       (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "112"))
                                       (rule "closeTrue" (formula "112"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_2"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "138"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "67") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                       (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                       (rule "polySimp_elimOne" (formula "67") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_and_subsumption3" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                       (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                       (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "nnf_imp2or" (formula "70") (term "0"))
                                       (rule "nnf_imp2or" (formula "47") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "75") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_imp2or" (formula "64") (term "0"))
                                       (rule "nnf_imp2or" (formula "69") (term "0"))
                                       (rule "nnf_imp2or" (formula "53") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "62") (term "0"))
                                       (rule "nnf_imp2or" (formula "61") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                       (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                       (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                       (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "64") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "64") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0"))
                                       (rule "mul_literals" (formula "64") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "64") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                       (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                       (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "112"))
                                       (rule "closeTrue" (formula "112"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "136") (inst "sk=i_2"))
                                 (rule "impRight" (formula "136"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "138"))
                                 (rule "inEqSimp_ltToLeq" (formula "73"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "73") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "67") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "75") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "67"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "wellFormedStoreObject" (formula "112"))
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "93")))
                                 (rule "wellFormedAnonEQ" (formula "112") (term "0") (ifseqformula "85"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1") (ifseqformula "85"))
                                 (rule "replace_known_left" (formula "112") (term "1,0") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "54")) (ifInst ""  (formula "92")) (ifInst ""  (formula "87")))
                                 (rule "closeTrue" (formula "112"))
                              )
                              (branch
                                 (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "138"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "136") (inst "sk=i_2"))
                                 (rule "impRight" (formula "136"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "138"))
                                 (rule "dismissNonSelectedField" (formula "112") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                                 (rule "orRight" (formula "112"))
                                 (rule "close" (formula "112") (ifseqformula "87"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "138") (inst "sk=iv_0"))
                              (rule "impRight" (formula "138"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "136") (inst "sk=i_2"))
                              (rule "impRight" (formula "136"))
                              (rule "andLeft" (formula "1"))
                              (rule "notRight" (formula "138"))
                              (rule "dismissNonSelectedField" (formula "112") (term "0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                              (rule "orRight" (formula "112"))
                              (rule "referencedObjectIsCreatedRight" (formula "112") (ifseqformula "104"))
                              (rule "close" (formula "112") (ifseqformula "54"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "138") (inst "sk=iv_0"))
                           (rule "impRight" (formula "138"))
                           (rule "andLeft" (formula "1"))
                           (rule "allRight" (formula "136") (inst "sk=i_2"))
                           (rule "impRight" (formula "136"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "138"))
                           (rule "dismissNonSelectedField" (formula "112") (term "0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "85"))
                           (rule "orRight" (formula "112"))
                           (rule "close" (formula "112") (ifseqformula "57"))
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "134"))
                     (branch
                        (rule "andRight" (formula "107"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "notRight" (formula "134"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                              (rule "close" (formula "112") (ifseqformula "26"))
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "notRight" (formula "134"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                 (rule "close" (formula "112") (ifseqformula "26"))
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "26"))
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "134"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                       (rule "close" (formula "112") (ifseqformula "26"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "notRight" (formula "134"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                          (rule "close" (formula "112") (ifseqformula "26"))
                                       )
                                       (branch
                                          (rule "notRight" (formula "134"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                          (rule "close" (formula "112") (ifseqformula "26"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "26"))
                                 )
                                 (branch
                                    (rule "notRight" (formula "134"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                    (rule "close" (formula "112") (ifseqformula "26"))
                                 )
                              )
                              (branch
                                 (rule "notRight" (formula "134"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                                 (rule "close" (formula "112") (ifseqformula "26"))
                              )
                           )
                           (branch
                              (rule "notRight" (formula "134"))
                              (rule "referencedObjectIsCreatedRightEQ" (formula "112") (ifseqformula "1") (ifseqformula "113"))
                              (rule "close" (formula "112") (ifseqformula "26"))
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "134"))
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "107") (inst "sk=j_0"))
                                 (rule "impRight" (formula "107"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "140"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "138") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "138"))
                                 (rule "notRight" (formula "139"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "castedGetAny" (formula "116") (term "1,1,0"))
                                 (rule "castedGetAny" (formula "116") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "9") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "77") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "116") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "116") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "116") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "116") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "115") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                                 (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "89"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "116") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "117") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "62")))
                                 (rule "applyEqReverse" (formula "117") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "117") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                                 (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                                 (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "nnf_imp2or" (formula "50") (term "0"))
                                 (rule "nnf_imp2or" (formula "68") (term "0"))
                                 (rule "nnf_imp2or" (formula "45") (term "0"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "79") (term "0"))
                                 (rule "nnf_ex2all" (formula "116"))
                                 (rule "nnf_imp2or" (formula "52") (term "0"))
                                 (rule "nnf_imp2or" (formula "75") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                 (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                 (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                 (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                 (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or_2" (formula "46") (term "0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_or_2" (formula "52") (term "0"))
                                 (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "80") (term "0,0"))
                                 (rule "commute_or_2" (formula "75") (term "0"))
                                 (rule "lenNonNegative" (formula "94") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "94"))
                                 (rule "applyEq" (formula "94") (term "0") (ifseqformula "95"))
                                 (rule "qeq_literals" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                 (rule "seqGetAlphaCast" (formula "146") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "146") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "69") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "74") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "75") (term "0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "74") (term "0"))
                                    (rule "commute_or_2" (formula "52") (term "0"))
                                    (rule "commute_or_2" (formula "75") (term "0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "ex_pull_out3" (formula "80") (term "0"))
                                    (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                    (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "42") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                    (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "42") (term "0,0,1"))
                                    (rule "leq_literals" (formula "42") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "42"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "41"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "97") (ifseqformula "110"))
                                    (rule "close" (formula "97") (ifseqformula "59"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "107") (inst "sk=i_2"))
                                    (rule "impRight" (formula "107"))
                                    (rule "notRight" (formula "108"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "140"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "138") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "138"))
                                    (rule "notRight" (formula "139"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "dismissNonSelectedField" (formula "8") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "10") (term "0,1"))
                                    (rule "castedGetAny" (formula "8") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "78") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "72") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "pullOutSelect" (formula "7") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "109")))
                                    (rule "ifthenelse_negated" (formula "7") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_and_subsumption3" (formula "67") (term "0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                                    (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "80") (term "0"))
                                    (rule "nnf_imp2or" (formula "74") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "52") (term "0"))
                                    (rule "nnf_imp2or" (formula "75") (term "0"))
                                    (rule "nnf_imp2or" (formula "58") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "66") (term "0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                                    (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                                    (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or_2" (formula "74") (term "0"))
                                    (rule "commute_or" (formula "80") (term "0,0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "commute_or_2" (formula "52") (term "0"))
                                    (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "75") (term "0"))
                                    (rule "lenNonNegative" (formula "94") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "94"))
                                    (rule "applyEq" (formula "94") (term "0") (ifseqformula "95"))
                                    (rule "qeq_literals" (formula "94"))
                                    (rule "true_left" (formula "94"))
                                    (rule "seqGetAlphaCast" (formula "146") (term "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "146") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "commute_or" (formula "69") (term "0,0"))
                                    (rule "commute_or" (formula "74") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "7") (term "0"))
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "8"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "commute_or" (formula "75") (term "0,0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or_2" (formula "74") (term "0"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or_2" (formula "51") (term "0"))
                                       (rule "commute_or_2" (formula "52") (term "0"))
                                       (rule "commute_or_2" (formula "75") (term "0"))
                                       (rule "commute_or_2" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                       (rule "commute_or" (formula "43") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "67") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or" (formula "66") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0"))
                                       (rule "ex_pull_out3" (formula "80") (term "0"))
                                       (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                       (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "75") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                                       (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "75") (term "0,0,1"))
                                       (rule "leq_literals" (formula "75") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "inEqSimp_contradInEq1" (formula "75") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "75") (term "0"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "closeFalse" (formula "75"))
                                    )
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "97") (ifseqformula "110"))
                                       (rule "close" (formula "97") (ifseqformula "59"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "107"))
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "138"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "95") (ifseqformula "8") (ifseqformula "96"))
                                       (rule "close" (formula "95") (ifseqformula "57"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                          (rule "impRight" (formula "134"))
                                          (rule "notRight" (formula "135"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                          (rule "impRight" (formula "142"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "52"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "69"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "69") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "75") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                          (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                          (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                          (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                          (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "nnf_imp2or" (formula "71") (term "0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0"))
                                          (rule "nnf_imp2or" (formula "70") (term "0"))
                                          (rule "nnf_imp2or" (formula "65") (term "0"))
                                          (rule "nnf_imp2or" (formula "54") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "nnf_imp2or" (formula "76") (term "0"))
                                          (rule "nnf_imp2or" (formula "63") (term "0"))
                                          (rule "nnf_imp2or" (formula "38") (term "0"))
                                          (rule "nnf_imp2or" (formula "39") (term "0"))
                                          (rule "nnf_imp2or" (formula "62") (term "0"))
                                          (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                          (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                          (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                          (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                          (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                          (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "113") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "expand_inInt" (formula "113") (term "1,0,0,1"))
                                          (rule "expand_inInt" (formula "113") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,1,1,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "113") (term "0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,1,1,0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "castedGetAny" (formula "113") (term "0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,1"))
                                          (rule "pullOutSelect" (formula "113") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                          (rule "applyEq" (formula "114") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "applyEq" (formula "113") (term "1,1,1,0,0,0,1") (ifseqformula "61"))
                                          (rule "applyEq" (formula "113") (term "1,0,0") (ifseqformula "61"))
                                          (rule "pullOutSelect" (formula "113") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                          (rule "applyEq" (formula "114") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "114"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "113") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "113") (term "0,0"))
                                          (rule "commute_or_2" (formula "71") (term "0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "113") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "113") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,1,0,0,0"))
                                          (rule "commute_or_2" (formula "70") (term "0"))
                                          (rule "commute_or_2" (formula "65") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "54") (term "0,0"))
                                          (rule "commute_and" (formula "76") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or" (formula "76") (term "0,0"))
                                          (rule "lenNonNegative" (formula "90") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "90"))
                                          (rule "applyEq" (formula "90") (term "0") (ifseqformula "91"))
                                          (rule "qeq_literals" (formula "90"))
                                          (rule "true_left" (formula "90"))
                                          (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                          (rule "castedGetAny" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "seqGetAlphaCast" (formula "143") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "seqGetAlphaCast" (formula "143") (term "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_or_2" (formula "62") (term "0"))
                                          (rule "commute_or" (formula "71") (term "0,0"))
                                          (rule "commute_or" (formula "42") (term "0,0"))
                                          (rule "commute_or" (formula "70") (term "0,0"))
                                          (rule "commute_or" (formula "65") (term "0,0"))
                                          (rule "commute_or" (formula "47") (term "0,0"))
                                          (rule "commute_or" (formula "48") (term "0,0"))
                                          (rule "commute_or_2" (formula "71") (term "0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "commute_or_2" (formula "70") (term "0"))
                                          (rule "commute_or_2" (formula "65") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "63") (term "0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "62") (term "0,0"))
                                          (rule "andRight" (formula "113"))
                                          (branch
                                             (rule "allRight" (formula "113") (inst "sk=i_0_1"))
                                             (rule "orRight" (formula "113"))
                                             (rule "orRight" (formula "113"))
                                             (rule "notRight" (formula "115"))
                                             (rule "orRight" (formula "115"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_geqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "117"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "117"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "commute_or" (formula "67") (term "0,0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "67") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0"))
                                             (rule "ex_pull_out3" (formula "58") (term "0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "80") (term "0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "42") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "42") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "9"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "inEqSimp_homoInEq1" (formula "42"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0"))
                                             (rule "add_zero_right" (formula "42") (term "0"))
                                             (rule "leq_literals" (formula "42"))
                                             (rule "closeFalse" (formula "42"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "113") (inst "sk=i_2"))
                                             (rule "orRight" (formula "113"))
                                             (rule "orRight" (formula "113"))
                                             (rule "notRight" (formula "115"))
                                             (rule "orRight" (formula "115"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_geqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "117"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "117"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "commute_or" (formula "67") (term "0,0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "67") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0"))
                                             (rule "ex_pull_out3" (formula "58") (term "0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "80") (term "0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "67") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq0" (formula "67") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "67") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "67"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "andRight" (formula "107"))
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "142"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "69") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                             (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "nnf_imp2or" (formula "71") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "nnf_imp2or" (formula "70") (term "0"))
                                             (rule "nnf_imp2or" (formula "65") (term "0"))
                                             (rule "nnf_imp2or" (formula "54") (term "0"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "nnf_imp2or" (formula "76") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_imp2or" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "62") (term "0"))
                                             (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                             (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                             (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "113"))
                                             (rule "closeTrue" (formula "113"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "142"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "69") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                             (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "54") (term "0"))
                                             (rule "nnf_imp2or" (formula "71") (term "0"))
                                             (rule "nnf_imp2or" (formula "65") (term "0"))
                                             (rule "nnf_imp2or" (formula "70") (term "0"))
                                             (rule "nnf_imp2or" (formula "76") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "62") (term "0"))
                                             (rule "nnf_imp2or" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                             (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                             (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "113"))
                                             (rule "closeTrue" (formula "113"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "138"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "75") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "wellFormedStoreObject" (formula "113"))
                                        (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "94")))
                                       (rule "wellFormedAnonEQ" (formula "113") (term "0") (ifseqformula "86"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1") (ifseqformula "86"))
                                       (rule "replace_known_left" (formula "113") (term "1,0") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "55")) (ifInst ""  (formula "93")) (ifInst ""  (formula "88")))
                                       (rule "closeTrue" (formula "113"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "134"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "136"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "142"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                       (rule "orRight" (formula "114"))
                                       (rule "close" (formula "114") (ifseqformula "89"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "136"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "142"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                    (rule "orRight" (formula "114"))
                                    (rule "referencedObjectIsCreatedRight" (formula "114") (ifseqformula "106"))
                                    (rule "close" (formula "114") (ifseqformula "56"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "136"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "142"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                 (rule "orRight" (formula "114"))
                                 (rule "close" (formula "114") (ifseqformula "59"))
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "107"))
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "allRight" (formula "107") (inst "sk=j_0"))
                                 (rule "impRight" (formula "107"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "140"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "138") (inst "sk=i_2"))
                                 (rule "impRight" (formula "138"))
                                 (rule "notRight" (formula "139"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "castedGetAny" (formula "116") (term "1,1,0"))
                                 (rule "castedGetAny" (formula "116") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,1,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "9") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "116") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "77"))
                                 (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "77") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                 (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                 (rule "polySimp_elimOne" (formula "77") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "116") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "116") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "116") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "116") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "115") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_6"))
                                 (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "89"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "116") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                 (rule "applyEq" (formula "117") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "118")) (ifInst ""  (formula "62")))
                                 (rule "applyEqReverse" (formula "117") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "117") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                                 (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_and_subsumption3" (formula "65") (term "0,0,0"))
                                 (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "nnf_imp2or" (formula "50") (term "0"))
                                 (rule "nnf_imp2or" (formula "68") (term "0"))
                                 (rule "nnf_imp2or" (formula "45") (term "0"))
                                 (rule "nnf_imp2or" (formula "73") (term "0"))
                                 (rule "nnf_imp2or" (formula "79") (term "0"))
                                 (rule "nnf_ex2all" (formula "116"))
                                 (rule "nnf_imp2or" (formula "52") (term "0"))
                                 (rule "nnf_imp2or" (formula "75") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "67") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_imp2or" (formula "66") (term "0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                 (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                 (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "74") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                 (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                 (rule "mul_literals" (formula "75") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                 (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "67") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "commute_or_2" (formula "69") (term "0"))
                                 (rule "commute_or_2" (formula "46") (term "0"))
                                 (rule "commute_or_2" (formula "74") (term "0"))
                                 (rule "commute_or_2" (formula "52") (term "0"))
                                 (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "80") (term "0,0"))
                                 (rule "commute_or_2" (formula "75") (term "0"))
                                 (rule "lenNonNegative" (formula "94") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "94"))
                                 (rule "applyEq" (formula "94") (term "0") (ifseqformula "95"))
                                 (rule "qeq_literals" (formula "94"))
                                 (rule "true_left" (formula "94"))
                                 (rule "seqGetAlphaCast" (formula "146") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "146") (term "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "67") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "66") (term "0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "69") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "74") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "commute_or" (formula "75") (term "0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "74") (term "0"))
                                    (rule "commute_or_2" (formula "52") (term "0"))
                                    (rule "commute_or_2" (formula "75") (term "0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or" (formula "67") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0,0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0,0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "ex_pull_out3" (formula "80") (term "0"))
                                    (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                    (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "43") (inst "t=i_2"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,1"))
                                    (rule "leq_literals" (formula "43") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "97") (ifseqformula "110"))
                                    (rule "close" (formula "97") (ifseqformula "59"))
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "allRight" (formula "107") (inst "sk=i_2"))
                                    (rule "impRight" (formula "107"))
                                    (rule "notRight" (formula "108"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "allRight" (formula "140") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "140"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "allRight" (formula "138") (inst "sk=i_3"))
                                    (rule "impRight" (formula "138"))
                                    (rule "notRight" (formula "139"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "dismissNonSelectedField" (formula "8") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "10") (term "0,1"))
                                    (rule "castedGetAny" (formula "8") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "78") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "72") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "pullOutSelect" (formula "7") (term "0,0") (inst "selectSK=java_util_Collection_seq_6"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "109")))
                                    (rule "ifthenelse_negated" (formula "7") (term "0"))
                                    (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_and_subsumption3" (formula "67") (term "0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_and_subsumption3" (formula "66") (term "0,0,0"))
                                    (rule "leq_literals" (formula "66") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "nnf_imp2or" (formula "69") (term "0"))
                                    (rule "nnf_imp2or" (formula "80") (term "0"))
                                    (rule "nnf_imp2or" (formula "74") (term "0"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "52") (term "0"))
                                    (rule "nnf_imp2or" (formula "75") (term "0"))
                                    (rule "nnf_imp2or" (formula "58") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0"))
                                    (rule "nnf_imp2or" (formula "66") (term "0"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "69") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "80") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "80") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "80") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "80") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "80") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "80") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "80") (term "1,0,0"))
                                    (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
                                    (rule "mul_literals" (formula "80") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "74") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "75") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "75") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "75") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "75") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0"))
                                    (rule "mul_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "67") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "67") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "66") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                                    (rule "commute_or_2" (formula "69") (term "0"))
                                    (rule "commute_or_2" (formula "74") (term "0"))
                                    (rule "commute_or" (formula "80") (term "0,0"))
                                    (rule "commute_or_2" (formula "46") (term "0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "commute_or_2" (formula "52") (term "0"))
                                    (rule "commute_and" (formula "80") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "75") (term "0"))
                                    (rule "lenNonNegative" (formula "94") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "94"))
                                    (rule "applyEq" (formula "94") (term "0") (ifseqformula "95"))
                                    (rule "qeq_literals" (formula "94"))
                                    (rule "true_left" (formula "94"))
                                    (rule "seqGetAlphaCast" (formula "146") (term "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "146") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or_2" (formula "67") (term "0"))
                                    (rule "commute_or_2" (formula "66") (term "0"))
                                    (rule "commute_or" (formula "69") (term "0,0"))
                                    (rule "commute_or" (formula "74") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "7") (term "0"))
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "8"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "commute_or" (formula "75") (term "0,0"))
                                       (rule "commute_or_2" (formula "69") (term "0"))
                                       (rule "commute_or_2" (formula "74") (term "0"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or_2" (formula "51") (term "0"))
                                       (rule "commute_or_2" (formula "52") (term "0"))
                                       (rule "commute_or_2" (formula "75") (term "0"))
                                       (rule "commute_or_2" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                       (rule "commute_or" (formula "43") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "67") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0"))
                                       (rule "commute_or" (formula "66") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0,0"))
                                       (rule "commute_or_2" (formula "66") (term "0"))
                                       (rule "ex_pull_out3" (formula "80") (term "0"))
                                       (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                       (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "75") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "75") (term "0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                                       (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "75") (term "0,0,1"))
                                       (rule "leq_literals" (formula "75") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "75"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "75"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                    (branch " self_805_B.inputColsForDist.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "97") (ifseqformula "110"))
                                       (rule "close" (formula "97") (ifseqformula "59"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "notRight" (formula "107"))
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_2"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "138"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "95") (ifseqformula "8") (ifseqformula "96"))
                                       (rule "close" (formula "95") (ifseqformula "57"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "107"))
                                       (branch
                                          (rule "allRight" (formula "134") (inst "sk=i_2"))
                                          (rule "impRight" (formula "134"))
                                          (rule "notRight" (formula "135"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                          (rule "impRight" (formula "142"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "52"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "69"))
                                          (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "69") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "75"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "75") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                          (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                          (rule "polySimp_elimOne" (formula "69") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                          (rule "polySimp_elimOne" (formula "75") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                          (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                          (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                          (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                          (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "nnf_imp2or" (formula "71") (term "0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0"))
                                          (rule "nnf_imp2or" (formula "70") (term "0"))
                                          (rule "nnf_imp2or" (formula "65") (term "0"))
                                          (rule "nnf_imp2or" (formula "54") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "nnf_imp2or" (formula "76") (term "0"))
                                          (rule "nnf_imp2or" (formula "63") (term "0"))
                                          (rule "nnf_imp2or" (formula "38") (term "0"))
                                          (rule "nnf_imp2or" (formula "39") (term "0"))
                                          (rule "nnf_imp2or" (formula "62") (term "0"))
                                          (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                          (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                          (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                          (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                          (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                          (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "113") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "expand_inInt" (formula "113") (term "1,0,0,1"))
                                          (rule "expand_inInt" (formula "113") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "113") (term "0,1,1,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "113") (term "1,0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,1,1,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "113") (term "0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,1,1,0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "castedGetAny" (formula "113") (term "0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "113") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,1,0,0,0,1"))
                                          (rule "pullOutSelect" (formula "113") (term "0,0,0,1,0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                                          (rule "applyEq" (formula "114") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "113") (term "0,0"))
                                          (rule "applyEq" (formula "113") (term "1,1,1,0,0,0,1") (ifseqformula "61"))
                                          (rule "applyEq" (formula "113") (term "1,0,0") (ifseqformula "61"))
                                          (rule "pullOutSelect" (formula "113") (term "0,0,0,1,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                                          (rule "applyEq" (formula "114") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")) (ifInst ""  (formula "59")))
                                          (rule "applyEqReverse" (formula "114") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "114"))
                                          (rule "applyEqReverse" (formula "114") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_notAnd" (formula "63") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "63") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "63") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "62") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "113") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "113") (term "0,0"))
                                          (rule "commute_or_2" (formula "71") (term "0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "113") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "113") (term "1,0,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "113") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,1,1,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,1,0,0,0"))
                                          (rule "commute_or_2" (formula "70") (term "0"))
                                          (rule "commute_or_2" (formula "65") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_and" (formula "54") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "54") (term "0,0"))
                                          (rule "commute_and" (formula "76") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or" (formula "76") (term "0,0"))
                                          (rule "lenNonNegative" (formula "90") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "90"))
                                          (rule "applyEq" (formula "90") (term "0") (ifseqformula "91"))
                                          (rule "qeq_literals" (formula "90"))
                                          (rule "true_left" (formula "90"))
                                          (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                          (rule "castedGetAny" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "seqGetAlphaCast" (formula "143") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "seqGetAlphaCast" (formula "143") (term "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "commute_or_2" (formula "62") (term "0"))
                                          (rule "commute_or" (formula "71") (term "0,0"))
                                          (rule "commute_or" (formula "42") (term "0,0"))
                                          (rule "commute_or" (formula "70") (term "0,0"))
                                          (rule "commute_or" (formula "65") (term "0,0"))
                                          (rule "commute_or" (formula "47") (term "0,0"))
                                          (rule "commute_or" (formula "48") (term "0,0"))
                                          (rule "commute_or_2" (formula "71") (term "0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "commute_or_2" (formula "70") (term "0"))
                                          (rule "commute_or_2" (formula "65") (term "0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "63") (term "0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0"))
                                          (rule "commute_or_2" (formula "62") (term "0,0"))
                                          (rule "andRight" (formula "113"))
                                          (branch
                                             (rule "allRight" (formula "113") (inst "sk=i_0_0"))
                                             (rule "orRight" (formula "113"))
                                             (rule "orRight" (formula "113"))
                                             (rule "notRight" (formula "115"))
                                             (rule "orRight" (formula "115"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_geqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "117"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "117"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "commute_or" (formula "67") (term "0,0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "67") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0"))
                                             (rule "ex_pull_out3" (formula "58") (term "0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "80") (term "0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "43") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "9"))
                                             (rule "andLeft" (formula "43"))
                                             (rule "inEqSimp_homoInEq1" (formula "43"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0"))
                                             (rule "add_zero_right" (formula "43") (term "0"))
                                             (rule "leq_literals" (formula "43"))
                                             (rule "closeFalse" (formula "43"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "113") (inst "sk=i_3"))
                                             (rule "orRight" (formula "113"))
                                             (rule "orRight" (formula "113"))
                                             (rule "notRight" (formula "115"))
                                             (rule "orRight" (formula "115"))
                                             (rule "orRight" (formula "114"))
                                             (rule "inEqSimp_geqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "117"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "116"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "117"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "commute_or" (formula "67") (term "0,0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "58") (term "0,1,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "commute_or" (formula "66") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "80") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "67") (term "0,0"))
                                             (rule "commute_or_2" (formula "67") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "66") (term "0,0"))
                                             (rule "commute_or_2" (formula "66") (term "0"))
                                             (rule "ex_pull_out3" (formula "58") (term "0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "58") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "58") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "80") (term "0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "80") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "80") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "80") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "80") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "67") (inst "t=i_3"))
                                             (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "67") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq0" (formula "67") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "67") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "67"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "andRight" (formula "107"))
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_2"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "142"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "69") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                             (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "nnf_imp2or" (formula "71") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "nnf_imp2or" (formula "70") (term "0"))
                                             (rule "nnf_imp2or" (formula "65") (term "0"))
                                             (rule "nnf_imp2or" (formula "54") (term "0"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "nnf_imp2or" (formula "76") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_imp2or" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "62") (term "0"))
                                             (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                             (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                             (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "113"))
                                             (rule "closeTrue" (formula "113"))
                                          )
                                          (branch
                                             (rule "allRight" (formula "134") (inst "sk=i_2"))
                                             (rule "impRight" (formula "134"))
                                             (rule "notRight" (formula "135"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "142"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "69"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "69") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                             (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                             (rule "polySimp_elimOne" (formula "69") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_and_subsumption3" (formula "63") (term "0,0,0"))
                                             (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_and_subsumption3" (formula "39") (term "0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_and_subsumption3" (formula "38") (term "0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "nnf_imp2or" (formula "54") (term "0"))
                                             (rule "nnf_imp2or" (formula "71") (term "0"))
                                             (rule "nnf_imp2or" (formula "65") (term "0"))
                                             (rule "nnf_imp2or" (formula "70") (term "0"))
                                             (rule "nnf_imp2or" (formula "76") (term "0"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "nnf_imp2or" (formula "63") (term "0"))
                                             (rule "nnf_imp2or" (formula "62") (term "0"))
                                             (rule "nnf_imp2or" (formula "39") (term "0"))
                                             (rule "nnf_imp2or" (formula "38") (term "0"))
                                             (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "71") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "71") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0"))
                                             (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "71") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                             (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "70") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "70") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "70") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "70") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0"))
                                             (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "76") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "76") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0"))
                                             (rule "mul_literals" (formula "76") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "63") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "113"))
                                             (rule "closeTrue" (formula "113"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "107"))
                              (branch
                                 (rule "andRight" (formula "107"))
                                 (branch
                                    (rule "andRight" (formula "107"))
                                    (branch
                                       (rule "allRight" (formula "138") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "138"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "allRight" (formula "136") (inst "sk=i_2"))
                                       (rule "impRight" (formula "136"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "138"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "75"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "75") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "69") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                       (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                       (rule "polySimp_elimOne" (formula "69") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "77") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "77") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "wellFormedStoreObject" (formula "113"))
                                        (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "94")))
                                       (rule "wellFormedAnonEQ" (formula "113") (term "0") (ifseqformula "86"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "1") (ifseqformula "86"))
                                       (rule "replace_known_left" (formula "113") (term "1,0") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "55")) (ifInst ""  (formula "93")) (ifInst ""  (formula "88")))
                                       (rule "closeTrue" (formula "113"))
                                    )
                                    (branch
                                       (rule "allRight" (formula "134") (inst "sk=i_2"))
                                       (rule "impRight" (formula "134"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "136"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "142"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                       (rule "orRight" (formula "114"))
                                       (rule "close" (formula "114") (ifseqformula "89"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "134") (inst "sk=i_2"))
                                    (rule "impRight" (formula "134"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "136"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "142"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                    (rule "orRight" (formula "114"))
                                    (rule "referencedObjectIsCreatedRight" (formula "114") (ifseqformula "106"))
                                    (rule "close" (formula "114") (ifseqformula "56"))
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "134") (inst "sk=i_2"))
                                 (rule "impRight" (formula "134"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "136"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "allRight" (formula "142") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "142"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "114") (term "0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (ifseqformula "87"))
                                 (rule "orRight" (formula "114"))
                                 (rule "close" (formula "114") (ifseqformula "59"))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Exceptional Post (ArrayList)"
          (builtin "One Step Simplification" (formula "75"))
          (builtin "One Step Simplification" (formula "94"))
         (rule "andLeft" (formula "75"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,0,0") (ifseqformula "75"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "76") (term "1,1,0,1,0") (ifseqformula "75"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "77"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "78"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "78"))
         (rule "andLeft" (formula "81"))
         (rule "notLeft" (formula "76"))
         (rule "close" (formula "83") (ifseqformula "82"))
      )
      (branch "Pre (ArrayList)"
          (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "47")))
         (rule "closeTrue" (formula "92"))
      )
   )
)
(branch "Exceptional Post (ArrayList)"
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "44"))
   (rule "andLeft" (formula "22"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0,0") (ifseqformula "22"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1,0,1,0") (ifseqformula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "25"))
   (rule "notLeft" (formula "23"))
   (rule "close" (formula "30") (ifseqformula "29"))
)
(branch "Pre (ArrayList)"
    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "42"))
)
)
}
