\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Oct 26 16:05:51 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Oct 26 16:05:51 CEST 2019
contract=de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator\\:\\:newSalt()].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator\\:\\:newSalt()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "9874")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "result_43,exc_50,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "4"))
(rule "true_left" (formula "4"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "3"))
(rule "true_left" (formula "3"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "3"))
(rule "true_left" (formula "3"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_newSalt,savedHeapBefore_newSalt"))
 (builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationFinalAssign" (formula "8") (term "1"))
(rule "variableDeclarationFinal" (formula "8") (term "1") (newnames "b_1"))
(rule "arrayCreation" (formula "8") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "dim0"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAtPre_0"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
(rule "nnf_imp2or" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "nnf_imp2or" (formula "3") (term "0,0,0"))
(rule "nnf_imp2or" (formula "2") (term "0,0,0"))
(rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
(rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
(rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
(rule "commute_or" (formula "2") (term "1,0,0,0"))
(rule "commute_or" (formula "3") (term "1,0,0,0"))
(rule "commute_or" (formula "3") (term "0,0,0,0"))
(rule "commute_or_2" (formula "3") (term "0,0,0"))
(rule "commute_or" (formula "2") (term "0,0,0,0"))
(rule "commute_or_2" (formula "2") (term "0,0,0"))
(rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
(rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
(rule "cnf_rightDist" (formula "3") (term "0,0,0"))
(rule "distr_forallAnd" (formula "3") (term "0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "shift_paren_or" (formula "3") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
(rule "castedGetAny" (formula "3") (term "0,0,1,0,0,0"))
(rule "castedGetAny" (formula "3") (term "1,0,0,0,0,0,0"))
(rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "true_left" (formula "3"))
(rule "cnf_rightDist" (formula "2") (term "0,0,0"))
(rule "distr_forallAnd" (formula "2") (term "0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "shift_paren_or" (formula "2") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
(rule "castedGetAny" (formula "2") (term "0,0,1,0,0,0"))
(rule "castedGetAny" (formula "2") (term "1,0,0,0,0,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "true_left" (formula "2"))
(rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "cnf_rightDist" (formula "1") (term "0,0"))
(rule "distr_forallAnd" (formula "1") (term "0"))
(rule "distr_forallAnd" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "cnf_rightDist" (formula "1") (term "0,0"))
(rule "distr_forallAnd" (formula "1") (term "0"))
(rule "distr_forallAnd" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "cnf_rightDist" (formula "3") (term "0,0"))
(rule "distr_forallAnd" (formula "3") (term "0"))
(rule "distr_forallAnd" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heap"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
(rule "nnf_imp2or" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "nnf_imp2or" (formula "3") (term "0,0,0"))
(rule "nnf_imp2or" (formula "2") (term "0,0,0"))
(rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
(rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
(rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
(rule "commute_or" (formula "3") (term "1,0,0,0"))
(rule "commute_or" (formula "2") (term "1,0,0,0"))
(rule "commute_or" (formula "3") (term "0,0,0,0"))
(rule "commute_or_2" (formula "3") (term "0,0,0"))
(rule "commute_or" (formula "2") (term "0,0,0,0"))
(rule "commute_or_2" (formula "2") (term "0,0,0"))
(rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
(rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
(rule "cnf_rightDist" (formula "3") (term "0,0,0"))
(rule "distr_forallAnd" (formula "3") (term "0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "shift_paren_or" (formula "3") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
(rule "castedGetAny" (formula "3") (term "1,0,0,0,0,0,0"))
(rule "castedGetAny" (formula "3") (term "0,0,1,0,0,0"))
(rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "true_left" (formula "3"))
(rule "cnf_rightDist" (formula "2") (term "0,0,0"))
(rule "distr_forallAnd" (formula "2") (term "0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "shift_paren_or" (formula "2") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
(rule "castedGetAny" (formula "2") (term "1,0,0,0,0,0,0"))
(rule "castedGetAny" (formula "2") (term "0,0,1,0,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "true_left" (formula "2"))
(rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "cnf_rightDist" (formula "1") (term "0,0"))
(rule "distr_forallAnd" (formula "1") (term "0"))
(rule "distr_forallAnd" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "cnf_rightDist" (formula "1") (term "0,0"))
(rule "distr_forallAnd" (formula "1") (term "0"))
(rule "distr_forallAnd" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "commute_or" (formula "1") (term "0,0"))
(rule "cnf_rightDist" (formula "1") (term "0,0"))
(rule "distr_forallAnd" (formula "1") (term "0"))
(rule "distr_forallAnd" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "commute_or" (formula "1") (term "0,0"))
(rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "less_literals" (formula "12") (term "0,0,1,0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "ifSplit" (formula "12"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "17") (term "1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "17") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "17") (term "1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "allocateInstanceWithLength" (formula "17"))
    (builtin "One Step Simplification" (formula "18"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "21") (term "1"))
   (rule "assignment" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
   (rule "expand_inInt" (formula "1"))
   (rule "replace_int_MAX" (formula "1") (term "1,0"))
   (rule "replace_int_MIN" (formula "1") (term "0,1"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "leq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCall" (formula "21") (term "1"))
   (branch "Normal Execution (newObject != null )"
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")))
      (rule "false_right" (formula "21"))
      (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "assignment_write_attribute_this" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "methodCallWithinClass" (formula "21") (term "1"))
      (rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "arrayInitialisation" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_elimSub" (formula "21") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "21") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "21") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "21") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "21") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "21") (term "1"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "assignment_write_attribute_this" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "methodCallReturnIgnoreResult" (formula "21") (term "1"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "methodCallReturn" (formula "21") (term "1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "methodCallEmpty" (formula "21") (term "1"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "methodCallUnfoldTarget" (formula "21") (term "1") (inst "#v0=s"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "s"))
      (rule "activeUseStaticFieldReadAccess" (formula "21") (term "1"))
      (rule "assignment_read_static_attribute" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "dismissNonSelectedField" (formula "21") (term "0,1,0"))
      (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
      (rule "simplifySelectOfMemset" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "simplifySelectOfCreate" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
      (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
       (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_nextBytes,exc_51,heapAfter_nextBytes,anon_heap_nextBytes") (contract "java.security.SecureRandom[java.security.SecureRandom::nextBytes([B)].JML normal_behavior operation contract.0"))
      (branch "Post (nextBytes)"
          (builtin "One Step Simplification" (formula "23"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "returnUnfold" (formula "24") (term "1") (inst "#v0=s"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "s_1"))
         (rule "methodCallWithAssignmentUnfoldTarget" (formula "24") (term "1") (inst "#v0=s_2"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "s_2"))
          (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_asHexString,result_44,exc_52,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
         (branch "Post (asHexString)"
             (builtin "One Step Simplification" (formula "26"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1,0") (ifseqformula "18"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "20"))
            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "dismissNonSelectedField" (formula "19") (term "0,0,0"))
            (rule "assignment" (formula "29") (term "1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "pullOutSelect" (formula "19") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "19"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfStore" (formula "19"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfStore" (formula "19"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfStore" (formula "19"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfCreate" (formula "19"))
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
            (rule "castDel" (formula "19") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "19") (term "0,0"))
            (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
            (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "commute_or_2" (formula "19"))
             (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_toLowerCase,result_45,exc_53,heapAfter_toLowerCase,anon_heap_toLowerCase") (contract "java.lang.String[java.lang.String::toLowerCase()].JML normal_behavior operation contract.0"))
            (branch "Post (toLowerCase)"
                (builtin "One Step Simplification" (formula "31"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "andLeft" (formula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,1,0") (ifseqformula "18"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1,1,0") (ifseqformula "15"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0"))
               (rule "assignment" (formula "35") (term "1"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "pullOutSelect" (formula "23") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfMemset" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "simplifySelectOfStore" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "simplifySelectOfStore" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "simplifySelectOfStore" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "simplifySelectOfCreate" (formula "23"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")))
               (rule "castDel" (formula "23") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "23") (term "0,0"))
               (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
               (rule "applyEqReverse" (formula "24") (term "0,0,0,0") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "Class_invariant_axiom_for_java_lang_String" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "methodCallReturn" (formula "34") (term "1"))
               (rule "assignment" (formula "34") (term "1"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "methodCallEmpty" (formula "34") (term "1"))
               (rule "tryEmpty" (formula "34") (term "1"))
               (rule "emptyModality" (formula "34") (term "1"))
                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")))
               (rule "eqSymm" (formula "34") (term "1,0,0,1"))
               (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "34") (term "0"))
               (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_1"))
               (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "replaceKnownSelect_taclet01_0" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet01_2" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,1,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
               (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "35") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "34") (term "1,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "34") (term "0"))
               (rule "pullOutSelect" (formula "34") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
               (rule "applyEq" (formula "35") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "35") (term "0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
               (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
               (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "18"))
               (rule "ifthenelse_negated" (formula "2") (term "0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "3") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__2"))
               (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
               (rule "simplifySelectOfMemset" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "simplifySelectOfStore" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "simplifySelectOfStore" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "simplifySelectOfStore" (formula "3"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "simplifySelectOfCreate" (formula "3"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
               (rule "castDel" (formula "3") (term "1,0"))
               (rule "eqSymm" (formula "3") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
               (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
               (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "37") (term "0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "37") (term "1,0,1,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00001_30" (formula "1") (term "0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_35" (formula "1") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00001_30" (formula "1") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_35" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0"))
               (rule "replaceKnownSelect_taclet00001_30" (formula "2") (term "0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_35" (formula "2") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfMemset" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
               (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "36") (term "1,0,1,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "1,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "34") (term "1,0"))
               (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
               (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,0"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__3"))
               (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
               (rule "simplifySelectOfMemset" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfCreate" (formula "2"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
               (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
               (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "36") (term "1,1,1,0") (ifseqformula "2"))
               (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
               (rule "replaceKnownSelect_taclet00001_48" (formula "1") (term "0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00001_53" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "35") (term "1,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "34") (term "0,0,1,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(store(memset(store(store(store(create(heap,
                                           x_arr_2),
                                    x_arr_2,
                                    java.lang.Object::<transient>,
                                    Z(0(#))),
                              x_arr_2,
                              java.lang.Object::<transactionConditionallyUpdated>,
                              FALSE),
                        x_arr_2,
                        java.lang.Object::<initialized>,
                        FALSE),
                  arrayRange(x_arr_2, Z(0(#)), Z(7(#))),
                  Z(0(#))),
           x_arr_2,
           java.lang.Object::<initialized>,
           TRUE),
     allFields(x_arr_2),
     anon_heap_nextBytes<<anonHeapFunction>>)"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_nextBytes<<anonHeapFunction>>"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_nextBytes"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "21"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "21"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_asHexString<<anonHeapFunction>>"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_asHexString"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "23"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_nextBytes,
     empty,
     anon_heap_asHexString<<anonHeapFunction>>)"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "25"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0,0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "43") (term "0,0"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_asHexString,
     empty,
     anon_heap_toLowerCase<<anonHeapFunction>>)"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "25"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_toLowerCase<<anonHeapFunction>>"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_toLowerCase"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "32"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "32"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "true_left" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
               (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "5") (term "0,0,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0,0"))
               (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0,0"))
               (rule "cut_direct" (formula "34") (term "0,0"))
               (branch "CUT: result_44.<created> = TRUE TRUE"
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,1,0,0,0,0,0"))
                  (rule "commute_or" (formula "13") (term "1,0,0,0"))
                  (rule "commute_or" (formula "12") (term "1,0,0,0"))
                  (rule "commute_or" (formula "13") (term "0,0,0,0"))
                  (rule "commute_or" (formula "12") (term "0,0,0,0"))
                  (rule "cut_direct" (formula "36") (term "0,0,0"))
                  (branch "CUT: result_45.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "commute_or" (formula "9") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "47") (term "0"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "allRight" (formula "47") (inst "sk=f_0"))
                     (rule "allRight" (formula "47") (inst "sk=o_0"))
                     (rule "orRight" (formula "47"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                     (rule "eqSymm" (formula "49"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet0000001_61" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "51"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "18") (term "1,0,0,0"))
                     (rule "commute_or" (formula "17") (term "1,0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0,0"))
                     (rule "commute_or" (formula "17") (term "0,0,0,0"))
                     (rule "shift_paren_and" (formula "21") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "commute_or" (formula "16") (term "1,0,0,0"))
                     (rule "commute_or" (formula "15") (term "1,0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "1,0,0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "0,0,0,0"))
                     (rule "commute_or" (formula "11") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,1,0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "1,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_or_2" (formula "12") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=memset(store(store(store(create(heap, x_arr_2),
                         x_arr_2,
                         java.lang.Object::<transient>,
                         Z(0(#))),
                   x_arr_2,
                   java.lang.Object::<transactionConditionallyUpdated>,
                   FALSE),
             x_arr_2,
             java.lang.Object::<initialized>,
             FALSE),
       arrayRange(x_arr_2, Z(0(#)), Z(7(#))),
       Z(0(#)))"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "nnf_imp2or" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_and" (formula "27") (term "1,0,0,0"))
                     (rule "commute_and" (formula "26") (term "1,0,0,0"))
                     (rule "commute_and" (formula "23") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0"))
                     (rule "commute_and" (formula "22") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0"))
                     (rule "commute_and" (formula "21") (term "1,0,0,0"))
                     (rule "commute_and" (formula "20") (term "1,0,0,0"))
                     (rule "commute_and" (formula "19") (term "1,0,0,0"))
                     (rule "commute_and" (formula "18") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "15") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "14") (term "1,0,0,0"))
                     (rule "commute_and" (formula "17") (term "1,0,0,0"))
                     (rule "commute_and" (formula "16") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,1,0,0"))
                     (rule "commute_or" (formula "10") (term "0,1,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0"))
                     (rule "distr_forallAnd" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0"))
                     (rule "distr_forallAnd" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0"))
                     (rule "distr_forallAnd" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0"))
                     (rule "distr_forallAnd" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "eqSymm" (formula "24") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_and" (formula "3") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0"))
                     (rule "distr_forallAnd" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_and" (formula "2") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0"))
                     (rule "distr_forallAnd" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0"))
                     (rule "distr_forallAnd" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "14"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEq" (formula "56") (term "1,0,0,1") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "56") (term "0,1") (ifseqformula "49"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "notRight" (formula "56"))
                        (rule "replace_known_left" (formula "11") (term "0,1,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "ifthenelse_negated" (formula "11") (term "0"))
                        (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "12"))
                        (rule "close" (formula "51") (ifseqformula "12"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0,0,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "7") (term "1,1,1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "45")))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "commute_or_2" (formula "9") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "7") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cut_direct" (formula "50") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "false_right" (formula "51"))
                           (rule "replace_known_left" (formula "5") (term "0,1,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "49")))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "notRight" (formula "51"))
                           (rule "replace_known_right" (formula "5") (term "0,1,0,1,0,0") (ifseqformula "51"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "5") (term "0,0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "50")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "49"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "50")))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
                  (branch "CUT: result_45.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "commute_or" (formula "9") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "allRight" (formula "48") (inst "sk=f_0"))
                     (rule "allRight" (formula "48") (inst "sk=o_0"))
                     (rule "orRight" (formula "48"))
                     (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                     (rule "eqSymm" (formula "50"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet1000001_61" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "52"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "18") (term "1,0,0,0"))
                     (rule "commute_or" (formula "17") (term "1,0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0,0"))
                     (rule "commute_or" (formula "17") (term "0,0,0,0"))
                     (rule "shift_paren_and" (formula "21") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "commute_or" (formula "16") (term "1,0,0,0"))
                     (rule "commute_or" (formula "15") (term "1,0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "1,0,0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "0,0,0,0"))
                     (rule "commute_or" (formula "11") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,1,0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "1,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_or_2" (formula "12") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=memset(store(store(store(create(heap, x_arr_2),
                         x_arr_2,
                         java.lang.Object::<transient>,
                         Z(0(#))),
                   x_arr_2,
                   java.lang.Object::<transactionConditionallyUpdated>,
                   FALSE),
             x_arr_2,
             java.lang.Object::<initialized>,
             FALSE),
       arrayRange(x_arr_2, Z(0(#)), Z(7(#))),
       Z(0(#)))"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "nnf_imp2or" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0"))
                     (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_and" (formula "27") (term "1,0,0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_and" (formula "26") (term "1,0,0,0"))
                     (rule "commute_and" (formula "23") (term "1,0,0,0"))
                     (rule "commute_and" (formula "22") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0"))
                     (rule "commute_and" (formula "21") (term "1,0,0,0"))
                     (rule "commute_and" (formula "20") (term "1,0,0,0"))
                     (rule "commute_and" (formula "19") (term "1,0,0,0"))
                     (rule "commute_and" (formula "18") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "15") (term "1,0,0,0"))
                     (rule "commute_and" (formula "14") (term "1,0,0,0"))
                     (rule "commute_and" (formula "17") (term "1,0,0,0"))
                     (rule "commute_and" (formula "16") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,1,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,1,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0"))
                     (rule "distr_forallAnd" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0"))
                     (rule "distr_forallAnd" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0"))
                     (rule "distr_forallAnd" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0"))
                     (rule "distr_forallAnd" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "eqSymm" (formula "24") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_and" (formula "3") (term "1,0,0,0"))
                     (rule "commute_and" (formula "2") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0"))
                     (rule "distr_forallAnd" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0"))
                     (rule "distr_forallAnd" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0"))
                     (rule "distr_forallAnd" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "10") (term "0,0,1,1,0,0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "10") (term "0,1,1,0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "ifthenelse_negated" (formula "10") (term "0"))
                        (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "notRight" (formula "57"))
                        (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
                        (rule "close" (formula "51") (ifseqformula "1"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "10") (term "1,1,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "48")))
                        (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "commute_or_2" (formula "9") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "7") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cut_direct" (formula "51") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "false_right" (formula "52"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "0,1,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "50")))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "notRight" (formula "52"))
                           (rule "replace_known_left" (formula "6") (term "0,0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "52")))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
               )
               (branch "CUT: result_44.<created> = TRUE FALSE"
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,1,0,0,0,0,0"))
                  (rule "commute_or" (formula "13") (term "1,0,0,0"))
                  (rule "commute_or" (formula "12") (term "1,0,0,0"))
                  (rule "commute_or" (formula "13") (term "0,0,0,0"))
                  (rule "commute_or" (formula "12") (term "0,0,0,0"))
                  (rule "cut_direct" (formula "36") (term "0,0,0"))
                  (branch "CUT: result_45.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "commute_or" (formula "9") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "allRight" (formula "48") (inst "sk=f_0"))
                     (rule "allRight" (formula "48") (inst "sk=o_0"))
                     (rule "orRight" (formula "48"))
                     (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                     (rule "eqSymm" (formula "50"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet0100001_61" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "52"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "18") (term "1,0,0,0"))
                     (rule "commute_or" (formula "17") (term "1,0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0,0"))
                     (rule "commute_or" (formula "17") (term "0,0,0,0"))
                     (rule "shift_paren_and" (formula "21") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "commute_or" (formula "16") (term "1,0,0,0"))
                     (rule "commute_or" (formula "15") (term "1,0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "1,0,0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "0,0,0,0"))
                     (rule "commute_or" (formula "11") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "commute_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,1,0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "1,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_or_2" (formula "12") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=memset(store(store(store(create(heap, x_arr_2),
                         x_arr_2,
                         java.lang.Object::<transient>,
                         Z(0(#))),
                   x_arr_2,
                   java.lang.Object::<transactionConditionallyUpdated>,
                   FALSE),
             x_arr_2,
             java.lang.Object::<initialized>,
             FALSE),
       arrayRange(x_arr_2, Z(0(#)), Z(7(#))),
       Z(0(#)))"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0,0"))
                     (rule "commute_and" (formula "27") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_and" (formula "26") (term "1,0,0,0"))
                     (rule "commute_and" (formula "23") (term "1,0,0,0"))
                     (rule "commute_and" (formula "22") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0"))
                     (rule "commute_and" (formula "21") (term "1,0,0,0"))
                     (rule "commute_and" (formula "20") (term "1,0,0,0"))
                     (rule "commute_and" (formula "19") (term "1,0,0,0"))
                     (rule "commute_and" (formula "18") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "15") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "14") (term "1,0,0,0"))
                     (rule "commute_and" (formula "17") (term "1,0,0,0"))
                     (rule "commute_and" (formula "16") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,1,0,0"))
                     (rule "commute_or" (formula "10") (term "1,1,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0"))
                     (rule "distr_forallAnd" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0"))
                     (rule "distr_forallAnd" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0"))
                     (rule "distr_forallAnd" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0"))
                     (rule "distr_forallAnd" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "eqSymm" (formula "24") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_and" (formula "3") (term "1,0,0,0"))
                     (rule "commute_and" (formula "2") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0"))
                     (rule "distr_forallAnd" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0"))
                     (rule "distr_forallAnd" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0"))
                     (rule "distr_forallAnd" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "57") (term "1,0,0,1") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "57") (term "0,1") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "57"))
                        (rule "notRight" (formula "57"))
                        (rule "replace_known_left" (formula "11") (term "0,1,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "ifthenelse_negated" (formula "11") (term "0"))
                        (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "12"))
                        (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "12"))
                        (rule "close" (formula "52") (ifseqformula "12"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0,0,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "10") (term "1,1,1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "48")))
                        (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "commute_or_2" (formula "9") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "7") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                        (rule "distr_forallAnd" (formula "11") (term "0,0"))
                        (rule "distr_forallAnd" (formula "11") (term "0"))
                        (rule "distr_forallAnd" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "cut_direct" (formula "52") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "false_right" (formula "53"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "0,1,0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "notRight" (formula "53"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "53"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "5") (term "0,1,0,1,0,0") (ifseqformula "52"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "52")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "51"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "52")))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
                  (branch "CUT: result_45.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "commute_or" (formula "9") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,0"))
                     (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "49") (term "0"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "allRight" (formula "49") (inst "sk=f_0"))
                     (rule "allRight" (formula "49") (inst "sk=o_0"))
                     (rule "orRight" (formula "49"))
                     (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                     (rule "eqSymm" (formula "51"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet1100001_61" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "53"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "18") (term "1,0,0,0"))
                     (rule "commute_or" (formula "17") (term "1,0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0,0"))
                     (rule "commute_or" (formula "17") (term "0,0,0,0"))
                     (rule "shift_paren_and" (formula "21") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "commute_or" (formula "16") (term "1,0,0,0"))
                     (rule "commute_or" (formula "15") (term "1,0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "1,0,0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or" (formula "12") (term "0,0,0,0"))
                     (rule "commute_or" (formula "11") (term "0,0,0,0"))
                     (rule "commute_or" (formula "14") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or" (formula "13") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,1,0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0"))
                     (rule "commute_or_2" (formula "17") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "1,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0,0,0"))
                     (rule "commute_or_2" (formula "15") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_or_2" (formula "12") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=memset(store(store(store(create(heap, x_arr_2),
                         x_arr_2,
                         java.lang.Object::<transient>,
                         Z(0(#))),
                   x_arr_2,
                   java.lang.Object::<transactionConditionallyUpdated>,
                   FALSE),
             x_arr_2,
             java.lang.Object::<initialized>,
             FALSE),
       arrayRange(x_arr_2, Z(0(#)), Z(7(#))),
       Z(0(#)))"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "nnf_imp2or" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "25") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "17") (term "0,0,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0,0"))
                     (rule "shift_paren_or" (formula "16") (term "0,0,0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_and" (formula "27") (term "1,0,0,0"))
                     (rule "commute_and" (formula "26") (term "1,0,0,0"))
                     (rule "commute_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_and" (formula "23") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0"))
                     (rule "commute_and" (formula "22") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0"))
                     (rule "commute_and" (formula "21") (term "1,0,0,0"))
                     (rule "commute_and" (formula "20") (term "1,0,0,0"))
                     (rule "commute_and" (formula "19") (term "1,0,0,0"))
                     (rule "commute_and" (formula "18") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "15") (term "1,0,0,0"))
                     (rule "commute_and" (formula "14") (term "1,0,0,0"))
                     (rule "commute_and" (formula "17") (term "1,0,0,0"))
                     (rule "commute_and" (formula "16") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,1,0,0"))
                     (rule "commute_or" (formula "10") (term "1,1,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or" (formula "10") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0,0"))
                     (rule "distr_forallAnd" (formula "25") (term "0"))
                     (rule "distr_forallAnd" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0,0"))
                     (rule "distr_forallAnd" (formula "24") (term "0"))
                     (rule "distr_forallAnd" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0,0"))
                     (rule "distr_forallAnd" (formula "21") (term "0"))
                     (rule "distr_forallAnd" (formula "21"))
                     (rule "andLeft" (formula "21"))
                     (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0,0"))
                     (rule "distr_forallAnd" (formula "20") (term "0"))
                     (rule "distr_forallAnd" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0,0"))
                     (rule "distr_forallAnd" (formula "19") (term "0"))
                     (rule "distr_forallAnd" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "eqSymm" (formula "24") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_and" (formula "3") (term "1,0,0,0"))
                     (rule "commute_and" (formula "2") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0,0"))
                     (rule "distr_forallAnd" (formula "15") (term "0"))
                     (rule "distr_forallAnd" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0,0"))
                     (rule "distr_forallAnd" (formula "14") (term "0"))
                     (rule "distr_forallAnd" (formula "14"))
                     (rule "andLeft" (formula "14"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0,0"))
                     (rule "distr_forallAnd" (formula "18") (term "0"))
                     (rule "distr_forallAnd" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0,0"))
                     (rule "distr_forallAnd" (formula "17") (term "0"))
                     (rule "distr_forallAnd" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0,0"))
                     (rule "distr_forallAnd" (formula "23") (term "0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0,0"))
                     (rule "distr_forallAnd" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch "o_0 = x_arr_2 TRUE"
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEq" (formula "10") (term "0,0,1,1,0,0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "10") (term "0,1,1,0,0") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "ifthenelse_negated" (formula "10") (term "0"))
                        (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "notRight" (formula "58"))
                        (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
                        (rule "close" (formula "52") (ifseqformula "1"))
                     )
                     (branch "o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "10") (term "1,1,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "48")))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "commute_or_2" (formula "9") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "commute_or_2" (formula "7") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                        (rule "distr_forallAnd" (formula "11") (term "0,0"))
                        (rule "distr_forallAnd" (formula "11") (term "0"))
                        (rule "distr_forallAnd" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cut_direct" (formula "52") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "false_right" (formula "53"))
                           (rule "replace_known_left" (formula "5") (term "0,1,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "51")))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "notRight" (formula "53"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "53"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "52"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
                           (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "replace_known_right" (formula "5") (term "0,1,0,1,0,0") (ifseqformula "51"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (toLowerCase)"
                (builtin "One Step Simplification" (formula "22"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "andLeft" (formula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,0") (ifseqformula "18"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,1,0") (ifseqformula "15"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "25"))
               (rule "notLeft" (formula "23"))
               (rule "close" (formula "27") (ifseqformula "26"))
            )
            (branch "Pre (toLowerCase)"
                (builtin "One Step Simplification" (formula "29"))
               (rule "wellFormedAnonEQ" (formula "29") (term "1") (ifseqformula "18"))
               (rule "wellFormedAnonEQ" (formula "29") (term "0,1") (ifseqformula "15"))
               (rule "wellFormedStorePrimitive" (formula "29") (term "0,0,1"))
               (rule "replace_known_left" (formula "29") (term "1,0,1") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "17")))
               (rule "wellFormedMemsetArrayPrimitive" (formula "29") (term "1"))
               (rule "wellFormedStorePrimitive" (formula "29") (term "1"))
               (rule "wellFormedStorePrimitive" (formula "29") (term "1"))
               (rule "wellFormedStorePrimitive" (formula "29") (term "1"))
               (rule "wellFormedCreate" (formula "29") (term "1"))
               (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "Class_invariant_axiom_for_java_lang_String" (formula "29"))
               (rule "closeTrue" (formula "29"))
            )
            (branch "Null reference (s_2 = null)"
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "21")))
               (rule "closeTrue" (formula "29"))
            )
         )
         (branch "Exceptional Post (asHexString)"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "andLeft" (formula "18"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "21"))
            (rule "notLeft" (formula "19"))
            (rule "close" (formula "21") (ifseqformula "20"))
         )
         (branch "Pre (asHexString)"
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "wellFormedAnonEQ" (formula "24") (term "0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "15"))
            (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
            (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
            (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "24") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "24") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "24") (term "0"))
            (rule "wellFormedCreate" (formula "24") (term "0"))
            (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "closeTrue" (formula "25"))
         )
      )
      (branch "Exceptional Post (nextBytes)"
          (builtin "One Step Simplification" (formula "23"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "16"))
         (rule "close" (formula "19") (ifseqformula "18"))
      )
      (branch "Pre (nextBytes)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
         (rule "wellFormedStorePrimitive" (formula "21") (term "0,1"))
         (rule "dismissNonSelectedField" (formula "21") (term "0,1,1"))
         (rule "wellFormedMemsetArrayPrimitive" (formula "21") (term "0,1"))
         (rule "wellFormedStorePrimitive" (formula "21") (term "0,1"))
         (rule "wellFormedStorePrimitive" (formula "21") (term "0,1"))
         (rule "wellFormedStorePrimitive" (formula "21") (term "0,1"))
         (rule "wellFormedCreate" (formula "21") (term "0,1"))
         (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfMemset" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfCreate" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "21"))
         (rule "closeTrue" (formula "21"))
      )
      (branch "Null reference (s = null)"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
         (rule "closeTrue" (formula "21"))
      )
   )
   (branch "Null Reference (newObject = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
