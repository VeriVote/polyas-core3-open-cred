\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 16:20:34 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_TRUE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";



\sorts{
Heap;
Update;
Formula;
java.math.BigInteger\extends java.lang.Comparable, java.lang.Number;
Field;
boolean;
java.lang.String\extends java.lang.Comparable, java.io.Serializable, java.lang.Object;
int;
numbers;
java.lang.Throwable\extends java.io.Serializable, java.lang.Object;
}

\functions{
Heap heapAtPre_A;
Formula wellFormed(Heap);
Field java.lang.Object::<created>;
boolean boolean::select(Heap,java.lang.Object,Field);
boolean TRUE;
Null null;
Field java.math.BigInteger::$ZERO;
java.math.BigInteger java.math.BigInteger::select(Heap,java.lang.Object,Field);
Field java.math.BigInteger::$value;
int int::select(Heap,java.lang.Object,Field);
numbers #;
numbers 0(numbers);
int Z(numbers);
Heap heapAtPost_A;
Heap heapAtPre_B;
Heap heapAtPost_B;
Formula java.math.BigInteger::<$inv>(Heap);
}

\programVariables{
Heap heap;
java.math.BigInteger upperBound_6_A;
java.lang.String s1_14_A;
java.lang.String s2_14_A;
java.lang.String s3_14_A;
java.lang.Throwable exc_267_A;
java.math.BigInteger result_237_A;
java.math.BigInteger resultAtPost_237_A;
java.lang.Throwable excAtPost_267_A;
java.math.BigInteger upperBound_6_B;
java.lang.String s1_14_B;
java.lang.String s2_14_B;
java.lang.String s3_14_B;
java.lang.Throwable exc_267_B;
java.math.BigInteger result_237_B;
java.math.BigInteger resultAtPost_237_B;
java.lang.Throwable excAtPost_267_B;
java.math.BigInteger _upperBound_6_A;
java.lang.String _s1_14_A;
java.lang.String _s2_14_A;
java.lang.String _s3_14_A;
java.math.BigInteger _upperBound_6_B;
java.lang.String _s1_14_B;
java.lang.String _s2_14_B;
java.lang.String _s3_14_B;
}

\rules{

unfold_computed_formula_2_of_uniformHash_2142081982 {
  \schemaVar \term Heap sv_heapAtPre_A#32;
  \schemaVar \term java.math.BigInteger sv_upperBound_6_A#28;
  \schemaVar \term java.lang.String sv_s1_14_A#29;
  \schemaVar \term java.lang.String sv_s2_14_A#30;
  \schemaVar \term java.lang.String sv_s3_14_A#31;
  \schemaVar \term java.math.BigInteger sv_resultAtPost_237_A#34;
  \schemaVar \term java.lang.Throwable sv_excAtPost_267_A#35;
  \schemaVar \term Heap sv_heapAtPost_A#36;
  \schemaVar \term Heap sv_heapAtPre_B#41;
  \schemaVar \term java.math.BigInteger sv_upperBound_6_B#37;
  \schemaVar \term java.lang.String sv_s1_14_B#38;
  \schemaVar \term java.lang.String sv_s2_14_B#39;
  \schemaVar \term java.lang.String sv_s3_14_B#40;
  \schemaVar \term java.math.BigInteger sv_resultAtPost_237_B#43;
  \schemaVar \term java.lang.Throwable sv_excAtPost_267_B#44;
  \schemaVar \term Heap sv_heapAtPost_B#45;
  
  \find (
      {heap:=sv_heapAtPre_A#32}
        (  wellFormed(sv_heapAtPre_A#32)
         & heap = sv_heapAtPre_A#32
         & (  ((  sv_upperBound_6_A#28 = null
                |   boolean::select(sv_heapAtPre_A#32,
                                    sv_upperBound_6_A#28,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s1_14_A#29 = null
                |   boolean::select(sv_heapAtPre_A#32,
                                    sv_s1_14_A#29,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s2_14_A#30 = null
                |   boolean::select(sv_heapAtPre_A#32,
                                    sv_s2_14_A#30,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s3_14_A#31 = null
                |   boolean::select(sv_heapAtPre_A#32,
                                    sv_s3_14_A#31,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  java.math.BigInteger::<$inv>(sv_heapAtPre_A#32)
             & (!sv_upperBound_6_A#28 = null)<<impl>>)<<SC>>)
         & {_upperBound_6_A:=sv_upperBound_6_A#28
            || _s1_14_A:=sv_s1_14_A#29
            || _s2_14_A:=sv_s2_14_A#30
            || _s3_14_A:=sv_s3_14_A#31}
             \[{
                 exc_267_A=null;try {
                   result_237_A=de.polyas.core3.open.crypto.basic.Hashes.uniformHash(_upperBound_6_A,_s1_14_A,_s2_14_A,_s3_14_A)@de.polyas.core3.open.crypto.basic.Hashes;
                 }   catch (java.lang.Throwable e) {
                   exc_267_A=e;
                 }
               }\] (  sv_resultAtPost_237_A#34 = result_237_A
                    & sv_excAtPost_267_A#35 = exc_267_A
                    & sv_heapAtPost_A#36 = heap))
    & {heap:=sv_heapAtPre_B#41}
        (  wellFormed(sv_heapAtPre_B#41)
         & heap = sv_heapAtPre_B#41
         & (  ((  sv_upperBound_6_B#37 = null
                |   boolean::select(sv_heapAtPre_B#41,
                                    sv_upperBound_6_B#37,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s1_14_B#38 = null
                |   boolean::select(sv_heapAtPre_B#41,
                                    sv_s1_14_B#38,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s2_14_B#39 = null
                |   boolean::select(sv_heapAtPre_B#41,
                                    sv_s2_14_B#39,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s3_14_B#40 = null
                |   boolean::select(sv_heapAtPre_B#41,
                                    sv_s3_14_B#40,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  java.math.BigInteger::<$inv>(sv_heapAtPre_B#41)
             & (!sv_upperBound_6_B#37 = null)<<impl>>)<<SC>>)
         & {_upperBound_6_B:=sv_upperBound_6_B#37
            || _s1_14_B:=sv_s1_14_B#38
            || _s2_14_B:=sv_s2_14_B#39
            || _s3_14_B:=sv_s3_14_B#40}
             \[{
                 exc_267_B=null;try {
                   result_237_B=de.polyas.core3.open.crypto.basic.Hashes.uniformHash(_upperBound_6_B,_s1_14_B,_s2_14_B,_s3_14_B)@de.polyas.core3.open.crypto.basic.Hashes;
                 }   catch (java.lang.Throwable e) {
                   exc_267_B=e;
                 }
               }\] (  sv_resultAtPost_237_B#43 = result_237_B
                    & sv_excAtPost_267_B#44 = exc_267_B
                    & sv_heapAtPost_B#45 = heap))
  )
  \antecedentPolarity
  \replacewith (
      {heap:=sv_heapAtPre_A#32}
        (  wellFormed(sv_heapAtPre_A#32)
         & sv_heapAtPre_A#32 = heap
         &   boolean::select(sv_heapAtPre_A#32,
                             sv_upperBound_6_A#28,
                             java.lang.Object::<created>)
           = TRUE
         & ((  sv_s1_14_A#29 = null
             |   boolean::select(sv_heapAtPre_A#32,
                                 sv_s1_14_A#29,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         & ((  sv_s2_14_A#30 = null
             |   boolean::select(sv_heapAtPre_A#32,
                                 sv_s2_14_A#30,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         & ((  sv_s3_14_A#31 = null
             |   boolean::select(sv_heapAtPre_A#32,
                                 sv_s3_14_A#31,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         &   int::select(sv_heapAtPre_A#32,
                         java.math.BigInteger::select(sv_heapAtPre_A#32,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         & !  java.math.BigInteger::select(sv_heapAtPre_A#32,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !{exc_267_A:=null
             || result_237_A:=java.math.BigInteger::select(heap,
                                                           null,
                                                           java.math.BigInteger::$ZERO)}
              !(  result_237_A = sv_resultAtPost_237_A#34
                & exc_267_A = sv_excAtPost_267_A#35
                & sv_heapAtPost_A#36 = heap)
         & !sv_upperBound_6_A#28 = null)
    & {heap:=sv_heapAtPre_B#41}
        (  wellFormed(sv_heapAtPre_B#41)
         & sv_heapAtPre_B#41 = heap
         &   boolean::select(sv_heapAtPre_B#41,
                             sv_upperBound_6_B#37,
                             java.lang.Object::<created>)
           = TRUE
         & ((  sv_s1_14_B#38 = null
             |   boolean::select(sv_heapAtPre_B#41,
                                 sv_s1_14_B#38,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         & ((  sv_s2_14_B#39 = null
             |   boolean::select(sv_heapAtPre_B#41,
                                 sv_s2_14_B#39,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         & ((  sv_s3_14_B#40 = null
             |   boolean::select(sv_heapAtPre_B#41,
                                 sv_s3_14_B#40,
                                 java.lang.Object::<created>)
               = TRUE)<<SC>>)
         &   int::select(sv_heapAtPre_B#41,
                         java.math.BigInteger::select(sv_heapAtPre_B#41,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         & !  java.math.BigInteger::select(sv_heapAtPre_B#41,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !{exc_267_B:=null
             || result_237_B:=java.math.BigInteger::select(heap,
                                                           null,
                                                           java.math.BigInteger::$ZERO)}
              !(  result_237_B = sv_resultAtPost_237_B#43
                & exc_267_B = sv_excAtPost_267_B#44
                & sv_heapAtPost_B#45 = heap)
         & !sv_upperBound_6_B#37 = null)
  )
  \heuristics ( concrete )
};
}

\problem {
     {heap:=heapAtPre_A<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_A<<anonHeapFunction>>)
        & heap = heapAtPre_A<<anonHeapFunction>>
        & (  ((  upperBound_6_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   upperBound_6_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s1_14_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s1_14_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s2_14_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s2_14_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s3_14_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s3_14_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  java.math.BigInteger::<$inv>(heapAtPre_A<<anonHeapFunction>>)
            & (!(upperBound_6_A = null)<<origin("requires @ file Hashes.java @ line 71","[]")>>)<<impl,
                                                                                                  origin("requires @ file Hashes.java @ line 71","[]")>>)<<SC>>)
        & {_upperBound_6_A:=upperBound_6_A
           || _s1_14_A:=s1_14_A
           || _s2_14_A:=s2_14_A
           || _s3_14_A:=s3_14_A}
            \[{
                exc_267_A=null;try {
                  result_237_A=de.polyas.core3.open.crypto.basic.Hashes.uniformHash(_upperBound_6_A,_s1_14_A,_s2_14_A,_s3_14_A)@de.polyas.core3.open.crypto.basic.Hashes;
                }   catch (java.lang.Throwable e) {
                  exc_267_A=e;
                }
              }\] (  resultAtPost_237_A = result_237_A
                   & excAtPost_267_A = exc_267_A
                   & heapAtPost_A = heap))
   & {heap:=heapAtPre_B<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_B<<anonHeapFunction>>)
        & heap = heapAtPre_B<<anonHeapFunction>>
        & (  ((  upperBound_6_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   upperBound_6_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s1_14_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s1_14_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s2_14_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s2_14_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s3_14_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s3_14_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  java.math.BigInteger::<$inv>(heapAtPre_B<<anonHeapFunction>>)
            & (!upperBound_6_B = null)<<impl>>)<<SC>>)
        & {_upperBound_6_B:=upperBound_6_B
           || _s1_14_B:=s1_14_B
           || _s2_14_B:=s2_14_B
           || _s3_14_B:=s3_14_B}
            \[{
                exc_267_B=null;try {
                  result_237_B=de.polyas.core3.open.crypto.basic.Hashes.uniformHash(_upperBound_6_B,_s1_14_B,_s2_14_B,_s3_14_B)@de.polyas.core3.open.crypto.basic.Hashes;
                }   catch (java.lang.Throwable e) {
                  exc_267_B=e;
                }
              }\] (  resultAtPost_237_B = result_237_B
                   & excAtPost_267_B = exc_267_B
                   & heapAtPost_B = heap))
-> (  int::select(heapAtPost_A,
                  resultAtPost_237_A,
                  java.math.BigInteger::$value)
    = int::select(heapAtPost_B,
                  resultAtPost_237_B,
                  java.math.BigInteger::$value))<<postCondition>>

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "49")

(branch "dummy ID"
(rule "unfold_computed_formula_2_of_uniformHash_2142081982" (formula "1") (term "0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
 (builtin "One Step Simplification" (formula "2"))
 (builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "23"))
(rule "eqSymm" (formula "17"))
(rule "eqSymm" (formula "8"))
(rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "18"))
(rule "eqSymm" (formula "23"))
(rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
(rule "applyEq" (formula "6") (term "1,0") (ifseqformula "7"))
(rule "applyEq" (formula "15") (term "1,0") (ifseqformula "16"))
(rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
(rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "9"))
(rule "eqSymm" (formula "23"))
(rule "applyEq" (formula "23") (term "0") (ifseqformula "15"))
(rule "eqSymm" (formula "23"))
(rule "close" (formula "23") (ifseqformula "6"))
)
}
