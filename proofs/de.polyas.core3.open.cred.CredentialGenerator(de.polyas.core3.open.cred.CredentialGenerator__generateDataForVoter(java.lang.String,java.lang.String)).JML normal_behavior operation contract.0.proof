\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Nov 09 14:52:50 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Nov 09 14:52:50 CET 2019
contract=de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator\\:\\:generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator\\:\\:generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))
(keyLog "1" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "135642")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "voterId,password,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
(rule "insert_constant_string_value" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "castDel" (formula "5") (term "0,0,0,0,0"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "7"))
(rule "true_left" (formula "7"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "6"))
(rule "true_left" (formula "6"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "6"))
(rule "true_left" (formula "6"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_generateDataForVoter,savedHeapBefore_generateDataForVoter"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationFinalAssign" (formula "17") (term "1"))
(rule "variableDeclarationFinal" (formula "17") (term "1") (newnames "pubCred"))
(rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heap") (inst "i_0=i_0") (inst "seq_0=seq_0") (inst "str=str") (inst "i=i") (inst "seq=seq"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
(rule "commute_and" (formula "3") (term "0,0,0,0"))
(rule "commute_and" (formula "2") (term "0,0,0,0"))
(rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "shift_paren_and" (formula "1") (term "1,0,0"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "20") (term "1"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var"))
(rule "activeUseStaticFieldReadAccess" (formula "20") (term "1"))
(rule "assignment_read_static_attribute" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var_1"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var_2"))
(rule "assignment" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_publicCredentialFromPIN,result_0,exc_0,heapAfter_publicCredentialFromPIN,anon_heap_publicCredentialFromPIN") (contract "de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto::publicCredentialFromPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (publicCredentialFromPIN)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "12"))
   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "13"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "blockEmpty" (formula "25") (term "1"))
   (rule "variableDeclarationFinalAssign" (formula "25") (term "1"))
   (rule "variableDeclarationFinal" (formula "25") (term "1") (newnames "pubCredHex"))
   (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heap"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
   (rule "commute_and" (formula "3") (term "0,0,0,0"))
   (rule "commute_and" (formula "2") (term "0,0,0,0"))
   (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "shift_paren_and" (formula "1") (term "1,0,0"))
   (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAtPre"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
   (rule "commute_and" (formula "3") (term "0,0,0,0"))
   (rule "commute_and" (formula "2") (term "0,0,0,0"))
   (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "shift_paren_and" (formula "1") (term "1,0,0"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "27") (term "1"))
   (rule "variableDeclarationAssign" (formula "27") (term "1"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_3"))
   (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_publicCredentialFromPIN<<anonHeapFunction>>"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
   (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
   (rule "commute_and" (formula "3") (term "0,0,0,0"))
   (rule "commute_and" (formula "2") (term "0,0,0,0"))
   (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "shift_paren_and" (formula "1") (term "1,0,0"))
   (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heap,
     empty,
     anon_heap_publicCredentialFromPIN<<anonHeapFunction>>)"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
   (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
   (rule "commute_and" (formula "3") (term "0,0,0,0"))
   (rule "commute_and" (formula "2") (term "0,0,0,0"))
   (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "shift_paren_and" (formula "1") (term "1,0,0"))
   (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_publicCredentialFromPIN"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "17"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "17"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
   (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
   (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
   (rule "commute_and" (formula "3") (term "0,0,0,0"))
   (rule "commute_and" (formula "2") (term "0,0,0,0"))
   (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "shift_paren_and" (formula "1") (term "1,0,0"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "31") (term "1") (inst "#v0=e"))
   (rule "variableDeclaration" (formula "31") (term "1") (newnames "e"))
   (rule "activeUseStaticFieldReadAccess" (formula "31") (term "1"))
   (rule "assignment_read_static_attribute" (formula "31") (term "1"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "pullOutSelect" (formula "31") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
    (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_elementToBytes,result_1,exc_1,heapAfter_elementToBytes,anon_heap_elementToBytes") (contract "de.polyas.core3.open.crypto.groups.ECGroup[de.polyas.core3.open.crypto.groups.ECGroup::elementToBytes(org.bouncycastle.math.ec.ECPoint)].JML normal_behavior operation contract.0"))
   (branch "Post (elementToBytes)"
       (builtin "One Step Simplification" (formula "33"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,1,0") (ifseqformula "16"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "notLeft" (formula "24"))
      (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "25"))
      (rule "notLeft" (formula "24"))
      (rule "notLeft" (formula "23"))
      (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
      (rule "applyEq" (formula "27") (term "0") (ifseqformula "24"))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "16"))
      (rule "ifthenelse_negated" (formula "24") (term "0"))
      (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
      (rule "applyEq" (formula "27") (term "0") (ifseqformula "23"))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "34")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "16"))
      (rule "ifthenelse_negated" (formula "23") (term "0"))
      (rule "pullOutSelect" (formula "25") (term "1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")))
      (rule "ifthenelse_negated" (formula "25") (term "0"))
      (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "36")))
      (rule "ifthenelse_negated" (formula "23") (term "0"))
      (rule "commute_or_2" (formula "22"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "28"))
      (rule "pullOutSelect" (formula "28") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
      (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "16"))
      (rule "ifthenelse_negated" (formula "28") (term "0"))
      (rule "pullOutSelect" (formula "28") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
      (rule "ifthenelse_negated" (formula "28") (term "0"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "29"))
      (rule "true_left" (formula "29"))
       (builtin "Use Operation Contract" (formula "45") (newnames "heapBefore_asHexString,result_2,exc_2,heapAfter_asHexString,anon_heap_asHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::asHexString([B)].JML normal_behavior operation contract.0"))
      (branch "Post (asHexString)"
          (builtin "One Step Simplification" (formula "30"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "andLeft" (formula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0") (ifseqformula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,1,0") (ifseqformula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,1,0") (ifseqformula "16"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "33"))
         (rule "notLeft" (formula "33"))
         (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "assignment" (formula "50") (term "1"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "blockEmpty" (formula "50") (term "1"))
         (rule "variableDeclarationFinalAssign" (formula "50") (term "1"))
         (rule "variableDeclarationFinal" (formula "50") (term "1") (newnames "loginPasswordFromMasterPIN"))
         (rule "commute_or_2" (formula "32"))
         (rule "commute_or_2" (formula "32") (term "0"))
         (rule "commute_or_2" (formula "32"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_elementToBytes<<anonHeapFunction>>"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "commute_and" (formula "3") (term "0,0,0,0"))
         (rule "commute_and" (formula "2") (term "0,0,0,0"))
         (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "shift_paren_and" (formula "1") (term "1,0,0"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_publicCredentialFromPIN,
     empty,
     anon_heap_elementToBytes<<anonHeapFunction>>)"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "19"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "19"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
         (rule "commute_and" (formula "2") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0"))
         (rule "commute_and" (formula "3") (term "0,0,0,0"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_elementToBytes"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "26"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "26"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "22"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
         (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
         (rule "commute_and" (formula "2") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
         (rule "commute_and" (formula "1") (term "0,0,0,0"))
         (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "shift_paren_and" (formula "1") (term "1,0,0"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "54") (term "1"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "var_4"))
         (rule "activeUseStaticFieldReadAccess" (formula "54") (term "1"))
         (rule "assignment_read_static_attribute" (formula "54") (term "1"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "pullOutSelect" (formula "54") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "var_5"))
         (rule "assignment" (formula "54") (term "1"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "var_6"))
         (rule "assignment" (formula "54") (term "1"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_asHexString<<anonHeapFunction>>"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "commute_and" (formula "3") (term "0,0,0,0"))
         (rule "commute_and" (formula "2") (term "0,0,0,0"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_elementToBytes,
     empty,
     anon_heap_asHexString<<anonHeapFunction>>)"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "24"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
         (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_asHexString"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "40"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "40"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "26"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
         (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
         (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
         (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
         (rule "shift_paren_and" (formula "5") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1,0") (ifseqformula "21"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "applyEqReverse" (formula "39") (term "1,0,1,0,0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "38") (term "1,2,0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "38") (term "1,0,0,0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "37"))
         (rule "applyEqReverse" (formula "39") (term "1,2,0") (ifseqformula "37"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "36"))
         (rule "hideAuxiliaryEq" (formula "36"))
         (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "35"))
         (rule "hideAuxiliaryEq" (formula "35"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "22"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "37"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "36"))
         (rule "hideAuxiliaryEq" (formula "36"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "23"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "24"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "25"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "26"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "27"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "28"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_or_2" (formula "9") (term "1,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0,0"))
         (rule "shift_paren_and" (formula "13") (term "1,0,0"))
         (rule "commute_or_2" (formula "11") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0,0,0"))
          (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_loginPasswordFromMasterPIN,result_3,exc_3,heapAfter_loginPasswordFromMasterPIN,anon_heap_loginPasswordFromMasterPIN") (contract "de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto::loginPasswordFromMasterPIN(de.polyas.core3.open.crypto.groups.ECGroup,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (loginPasswordFromMasterPIN)"
             (builtin "One Step Simplification" (formula "46"))
             (builtin "One Step Simplification" (formula "61"))
            (rule "andLeft" (formula "46"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,1,0") (ifseqformula "46"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,1,0") (ifseqformula "42"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,1,0") (ifseqformula "38"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,1,1,0") (ifseqformula "34"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "47"))
            (rule "notLeft" (formula "48"))
            (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "assignment" (formula "64") (term "1"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "blockEmpty" (formula "64") (term "1"))
            (rule "variableDeclarationFinalAssign" (formula "64") (term "1"))
            (rule "variableDeclarationFinal" (formula "64") (term "1") (newnames "salt"))
            (rule "commute_or_2" (formula "47") (term "0"))
            (rule "commute_or_2" (formula "47") (term "0,0"))
            (rule "commute_or_2" (formula "47") (term "0"))
            (rule "commute_or_2" (formula "47"))
            (rule "commute_and" (formula "11") (term "0,0,0,0"))
            (rule "commute_and" (formula "12") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "11") (term "0,1,0,0,0,0"))
            (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0,0,0,0,0,0"))
            (rule "commute_and" (formula "10") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "9") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "9") (term "0,0,0,0"))
             (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_newSalt,result_4,exc_4,heapAfter_newSalt,anon_heap_newSalt") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::newSalt()].JML normal_behavior operation contract.0"))
            (branch "Post (newSalt)"
                (builtin "One Step Simplification" (formula "48"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "andLeft" (formula "48"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1,0") (ifseqformula "48"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,1,1,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,0,1,1,0") (ifseqformula "32"))
               (rule "andLeft" (formula "49"))
               (rule "andLeft" (formula "49"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "notLeft" (formula "52"))
               (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "assignment" (formula "68") (term "1"))
                (builtin "One Step Simplification" (formula "68"))
               (rule "variableDeclarationFinalAssign" (formula "68") (term "1"))
               (rule "variableDeclarationFinal" (formula "68") (term "1") (newnames "hashedPassword"))
               (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "notLeft" (formula "51"))
               (rule "notLeft" (formula "51"))
               (rule "pullOutSelect" (formula "52") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
               (rule "applyEq" (formula "54") (term "0") (ifseqformula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "52"))
               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "52"))
               (rule "hideAuxiliaryEq" (formula "52"))
               (rule "pullOutSelect" (formula "51") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
               (rule "applyEq" (formula "54") (term "0") (ifseqformula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "replaceKnownSelect_taclet000_8" (formula "51") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_10" (formula "51") (term "0"))
               (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "51"))
               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "51"))
               (rule "hideAuxiliaryEq" (formula "51"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "52"))
               (rule "true_left" (formula "52"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "53"))
               (rule "notLeft" (formula "52"))
               (rule "notLeft" (formula "51"))
               (rule "pullOutSelect" (formula "51") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
               (rule "applyEq" (formula "54") (term "0") (ifseqformula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "64")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "64")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "64")))
               (rule "replaceKnownSelect_taclet00_3" (formula "51") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_13" (formula "51") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "51") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "51"))
               (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "51"))
               (rule "hideAuxiliaryEq" (formula "51"))
               (rule "pullOutSelect" (formula "52") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
               (rule "applyEq" (formula "54") (term "0") (ifseqformula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
               (rule "replaceKnownSelect_taclet00_2" (formula "52") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "52") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "52") (term "0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "52"))
               (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "52"))
               (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "52"))
               (rule "hideAuxiliaryEq" (formula "52"))
               (rule "commute_or_2" (formula "50") (term "0,0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "51"))
               (rule "true_left" (formula "51"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "notLeft" (formula "51"))
               (rule "pullOutSelect" (formula "51") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
               (rule "applyEq" (formula "53") (term "0") (ifseqformula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "60")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "60")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "60")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "60")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "32"))
               (rule "replace_known_left" (formula "51") (term "0,0,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "51"))
               (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
               (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "51"))
               (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "51"))
               (rule "hideAuxiliaryEq" (formula "51"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "51"))
               (rule "true_left" (formula "51"))
               (rule "commute_or_2" (formula "50") (term "0,0,0"))
               (rule "commute_or_2" (formula "50") (term "0,0"))
               (rule "commute_or_2" (formula "50") (term "0"))
               (rule "commute_or_2" (formula "50"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_loginPasswordFromMasterPIN<<anonHeapFunction>>"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_asHexString,
     empty,
     anon_heap_loginPasswordFromMasterPIN<<anonHeapFunction>>)"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "36"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_loginPasswordFromMasterPIN"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "46"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "46"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "38"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
               (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
               (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                (builtin "Use Operation Contract" (formula "72") (newnames "heapBefore_hashPasswordWithSHA256,result_5,exc_5,heapAfter_hashPasswordWithSHA256,anon_heap_hashPasswordWithSHA256") (contract "de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto::hashPasswordWithSHA256(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
               (branch "Post (hashPasswordWithSHA256)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "74"))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1,0") (ifseqformula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,1,0") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,1,0") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,1,1,0") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,1,1,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,1,1,0") (ifseqformula "37"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "60"))
                  (rule "notLeft" (formula "61"))
                  (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "59"))
                  (rule "assignment" (formula "78") (term "1"))
                   (builtin "One Step Simplification" (formula "78"))
                  (rule "variableDeclarationFinalAssign" (formula "78") (term "1"))
                  (rule "variableDeclarationFinal" (formula "78") (term "1") (newnames "hashedPasswordWithSalt"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "60"))
                  (rule "insert_constant_string_value" (formula "60") (term "0,0,0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "castDel" (formula "60") (term "0,0,0,0,0"))
                  (rule "andLeft" (formula "60"))
                  (rule "andLeft" (formula "60"))
                  (rule "notLeft" (formula "62"))
                  (rule "notLeft" (formula "60"))
                  (rule "notLeft" (formula "60"))
                  (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_or_2" (formula "59"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_newSalt<<anonHeapFunction>>"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_loginPasswordFromMasterPIN,
     empty,
     anon_heap_newSalt<<anonHeapFunction>>)"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "52"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "48"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "52"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "48"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "44"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "44"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "40"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_newSalt"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "58"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "58"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "42"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "commute_and" (formula "9") (term "0,0,0,0"))
                  (rule "commute_and" (formula "8") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "63") (term "0"))
                  (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "7") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "commute_or_2" (formula "63") (term "0,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0,0,0"))
                  (rule "commute_and" (formula "3") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "63") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "63") (term "0,0,0"))
                  (rule "commute_or_2" (formula "63") (term "0,0"))
                  (rule "commute_or_2" (formula "63") (term "0"))
                  (rule "commute_or_2" (formula "63"))
                  (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "7") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "80") (term "1"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_7"))
                  (rule "assignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "variableDeclarationAssign" (formula "80") (term "1"))
                  (rule "variableDeclaration" (formula "80") (term "1") (newnames "var_8"))
                  (rule "stringAssignment" (formula "80") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (ifseqformula "62"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0") (ifseqformula "58"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0") (ifseqformula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "46"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "42"))
                  (rule "notLeft" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "82") (term "1"))
                  (rule "variableDeclaration" (formula "82") (term "1") (newnames "var_9"))
                  (rule "assignment" (formula "82") (term "1"))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "commute_or_2" (formula "1"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "commute_or_2" (formula "1"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_hashPasswordWithSHA256<<anonHeapFunction>>"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_newSalt,
     empty,
     anon_heap_hashPasswordWithSHA256<<anonHeapFunction>>)"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "61"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "61"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "45"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_hashPasswordWithSHA256"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "67"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "63"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "59"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "63"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "59"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "55"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "55"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "47"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "47"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                  (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                  (rule "commute_and" (formula "5") (term "0,0,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "12") (term "1,0,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "7") (term "1,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "3") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "3") (term "1,0,0"))
                  (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0"))
                   (builtin "Use Operation Contract" (formula "86") (newnames "heapBefore_append,result_6,exc_6,heapAfter_append,anon_heap_append") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::append(java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
                  (branch "Post (append)"
                      (builtin "One Step Simplification" (formula "69"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "andLeft" (formula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,1,0") (ifseqformula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,1,0") (ifseqformula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,1,1,0") (ifseqformula "61"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,1,1,0") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,1,1,0") (ifseqformula "53"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,1,1,0") (ifseqformula "49"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,0,1,1,0") (ifseqformula "45"))
                     (rule "andLeft" (formula "70"))
                     (rule "andLeft" (formula "71"))
                     (rule "andLeft" (formula "70"))
                     (rule "notLeft" (formula "71"))
                     (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "assignment" (formula "91") (term "1"))
                      (builtin "One Step Simplification" (formula "91"))
                     (rule "blockEmpty" (formula "91") (term "1"))
                     (rule "commute_or_2" (formula "70"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or_2" (formula "70"))
                     (rule "commute_or_2" (formula "70") (term "0,0"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0,0"))
                     (rule "commute_or_2" (formula "70") (term "0,0"))
                     (rule "commute_or_2" (formula "70") (term "0"))
                     (rule "commute_or_2" (formula "70"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "returnUnfold" (formula "91") (term "1") (inst "#v0=g"))
                     (rule "variableDeclarationAssign" (formula "91") (term "1"))
                     (rule "variableDeclaration" (formula "91") (term "1") (newnames "g"))
                     (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0,0,0"))
                     (rule "commute_and" (formula "11") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0,0,0,0"))
                     (rule "commute_and" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0,1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "commute_and" (formula "6") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "6") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "6") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "6") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,0,0,1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon_heap_append<<anonHeapFunction>>"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0,0,0"))
                     (rule "shift_paren_and" (formula "1") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "shift_paren_and" (formula "1") (term "1,0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=anon(heapAfter_hashPasswordWithSHA256,
     empty,
     anon_heap_append<<anonHeapFunction>>)"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "68"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "64"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "68"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "60"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "64"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "56"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "60"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "56"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "52"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "48"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "52"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "48"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0"))
                     (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "obj=obj") (inst "seq_1=seq_1") (inst "i_1=i_1") (inst "sv_heap=heapAfter_append"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "75"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1,0") (ifseqformula "75"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "71"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "71"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "67"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "63"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "63"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "59"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "59"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "51"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "51"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,0,1,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                     (rule "shift_paren_and" (formula "3") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "8") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "commute_and" (formula "8") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "shift_paren_and" (formula "3") (term "1,0,0"))
                     (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "7") (term "1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,0,0"))
                     (rule "commute_and" (formula "3") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                     (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                     (rule "instanceCreationAssignment" (formula "95") (term "1") (inst "#v0=g_1"))
                     (rule "variableDeclarationAssign" (formula "95") (term "1"))
                     (rule "variableDeclaration" (formula "95") (term "1") (newnames "g_1"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "95") (term "1") (inst "#v0=g_2"))
                     (rule "variableDeclaration" (formula "95") (term "1") (newnames "g_2"))
                     (rule "methodBodyExpand" (formula "95") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                      (builtin "One Step Simplification" (formula "95"))
                     (rule "variableDeclaration" (formula "95") (term "1") (newnames "__NEW__"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "95") (term "1") (inst "#v0=g_3"))
                     (rule "variableDeclaration" (formula "95") (term "1") (newnames "g_3"))
                     (rule "allocateInstance" (formula "95"))
                      (builtin "One Step Simplification" (formula "96"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "74"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "74"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "70"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "70"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "66"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,1,0") (ifseqformula "62"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,0,1,0") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,1,0") (ifseqformula "62"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,0,0,1,0") (ifseqformula "54"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,1,0") (ifseqformula "58"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,1,0") (ifseqformula "54"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "50"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,1,1,0") (ifseqformula "50"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "74"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "50")) (ifInst ""  (formula "54")) (ifInst ""  (formula "58")) (ifInst ""  (formula "62")) (ifInst ""  (formula "66")) (ifInst ""  (formula "70")))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "orRight" (formula "77"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodBodyExpand" (formula "105") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallWithinClass" (formula "105") (term "1"))
                     (rule "methodBodyExpand" (formula "105") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallSuper" (formula "105") (term "1"))
                     (rule "methodBodyExpand" (formula "105") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallEmpty" (formula "105") (term "1"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallEmpty" (formula "105") (term "1"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "105") (term "1"))
                     (rule "methodCallReturn" (formula "105") (term "1"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallEmpty" (formula "105") (term "1"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "variableDeclarationAssign" (formula "105") (term "1"))
                     (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_10"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "variableDeclarationAssign" (formula "105") (term "1"))
                     (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_11"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "variableDeclarationAssign" (formula "105") (term "1"))
                     (rule "variableDeclaration" (formula "105") (term "1") (newnames "var_12"))
                     (rule "assignment" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodBodyExpand" (formula "105") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallSuper" (formula "105") (term "1"))
                     (rule "methodBodyExpand" (formula "105") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallEmpty" (formula "105") (term "1"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "assignment_write_attribute_this" (formula "105") (term "1"))
                      (builtin "One Step Simplification" (formula "105"))
                     (rule "methodCallEmpty" (formula "105") (term "1"))
                     (rule "blockEmpty" (formula "105") (term "1"))
                     (rule "assignment_write_attribute" (formula "105") (term "1"))
                     (branch "Normal Execution (g_1 != null)"
                         (builtin "One Step Simplification" (formula "106"))
                         (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "85")))
                        (rule "false_right" (formula "105"))
                        (rule "assignment" (formula "105") (term "1"))
                         (builtin "One Step Simplification" (formula "105"))
                        (rule "methodCallReturn" (formula "105") (term "1"))
                        (rule "assignment" (formula "105") (term "1"))
                         (builtin "One Step Simplification" (formula "105"))
                        (rule "methodCallEmpty" (formula "105") (term "1"))
                        (rule "tryEmpty" (formula "105") (term "1"))
                        (rule "emptyModality" (formula "105") (term "1"))
                        (rule "andRight" (formula "105"))
                        (branch "Case 1"
                           (rule "andRight" (formula "105"))
                           (branch "Case 1"
                              (rule "andRight" (formula "105"))
                              (branch
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "nnf_imp2or" (formula "41") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "34") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "33") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "36") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "38") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "nnf_imp2or" (formula "31") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "nnf_imp2or" (formula "34") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "nnf_imp2or" (formula "42") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "nnf_imp2or" (formula "32") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "nnf_imp2or" (formula "37") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "nnf_imp2or" (formula "38") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "35") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "39") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "29") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "40") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "33") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "43") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "40") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "34") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "43") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "42") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "36") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "32") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "36") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "3") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "32") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "36") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "28") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "27") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "3") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "32") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "28") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "12") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "27") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "0,0,1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "105"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "105") (term "0,0,0,0"))
                                 (rule "pullOutSelect" (formula "105") (term "0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "106") (term "0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "105") (term "0,1") (ifseqformula "91"))
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "pullOutSelect" (formula "105") (term "0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "106") (term "0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "105") (term "0,1") (ifseqformula "86"))
                                  (builtin "One Step Simplification" (formula "105"))
                                 (rule "notRight" (formula "105"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "105") (ifseqformula "2"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "105"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "105"))
                                    (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "105") (userinteraction))
                                    (rule "andRight" (formula "105"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "105"))
                                       (branch
                                          (rule "andRight" (formula "105"))
                                          (branch
                                             (rule "notRight" (formula "105"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "87")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet00000_23" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "99") (ifseqformula "2"))
                                          )
                                          (branch
                                             (rule "notRight" (formula "105"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")) (ifInst ""  (formula "87")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet00000_17" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "100") (ifseqformula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "105") (userinteraction))
                                          (rule "andRight" (formula "105"))
                                          (branch
                                             (rule "andRight" (formula "105"))
                                             (branch
                                                (rule "notRight" (formula "105"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "72"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "64"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "56"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                (rule "ifEqualsNull" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet00000_23" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")) (ifInst ""  (formula "28")) (ifInst ""  (formula "99")))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                                                (rule "replaceKnownSelect_taclet00000_26" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_29" (formula "1") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "61"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "53"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "99") (ifseqformula "2"))
                                             )
                                             (branch
                                                (rule "notRight" (formula "105"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_3"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "72"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "64"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "56"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                (rule "ifEqualsNull" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet00000_23" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")) (ifInst ""  (formula "28")) (ifInst ""  (formula "99")))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")))
                                                (rule "replaceKnownSelect_taclet00000_30" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_33" (formula "1") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "61"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "53"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "98") (ifseqformula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "105"))
                                             (branch "Case 1"
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "pullOutSelect" (formula "105") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "67"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "59"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "64"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "56"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "52"))
                                                (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replaceKnownSelect_taclet00000_23" (formula "2") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "replaceKnownSelect_taclet00000_26" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_29" (formula "1") (term "2,0"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "nnf_imp2or" (formula "41") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "36") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "32") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "33") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "43") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "42") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "35") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "37") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "nnf_imp2or" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "nnf_imp2or" (formula "36") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "nnf_imp2or" (formula "32") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "nnf_imp2or" (formula "33") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "33") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "nnf_imp2or" (formula "43") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "nnf_imp2or" (formula "39") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "nnf_notAnd" (formula "42") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "nnf_imp2or" (formula "35") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "nnf_imp2or" (formula "37") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "nnf_imp2or" (formula "38") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "34") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "43") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "42") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "42") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "35") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "40") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "36") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "35") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "105"))
                                                (rule "closeTrue" (formula "105"))
                                             )
                                             (branch
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                                (rule "pullOutSelect" (formula "105") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_3"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "67"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "59"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "64"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "60"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "56"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "52"))
                                                (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfCreate" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "77"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "73"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replaceKnownSelect_taclet00000_23" (formula "2") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "replaceKnownSelect_taclet00000_30" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_33" (formula "1") (term "2,0"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "nnf_imp2or" (formula "41") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "36") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "32") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "33") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "43") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "39") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "42") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "35") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "37") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "38") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "nnf_imp2or" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "nnf_imp2or" (formula "36") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "nnf_imp2or" (formula "32") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "nnf_imp2or" (formula "33") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "33") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "nnf_imp2or" (formula "43") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "nnf_imp2or" (formula "39") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "39") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "nnf_notAnd" (formula "42") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "nnf_imp2or" (formula "35") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "nnf_imp2or" (formula "37") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "nnf_notAnd" (formula "40") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "nnf_imp2or" (formula "38") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "34") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "36") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "34") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "43") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "42") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "42") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "35") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "40") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "40") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "36") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "35") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "32") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "31") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "105"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "105") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "105") (term "1,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_3"))
                                                (rule "applyEq" (formula "106") (term "0,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "67"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "59"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "55"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "51"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                                                (rule "replaceKnownSelect_taclet00000_34" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000_39" (formula "1") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "67"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "63"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "59"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "55"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "51"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "106") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "106") (term "0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "105") (term "0,0") (ifseqformula "94"))
                                                 (builtin "One Step Simplification" (formula "105"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "15") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "16") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "30") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "36") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "32") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "33") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "12") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "43") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "17") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "7") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "39") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "35") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "16") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "37") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                (rule "commute_or" (formula "6") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0"))
                                                (rule "commute_or" (formula "38") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                (rule "commute_or" (formula "11") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "41") (term "0"))
                                                (rule "commute_or" (formula "15") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                (rule "commute_or" (formula "31") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                (rule "commute_or" (formula "28") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "105"))
                                                (rule "closeTrue" (formula "105"))
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "105") (term "1"))
                                       (rule "pullOutSelect" (formula "105") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")) (ifInst ""  (formula "86")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "75"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet00000_17" (formula "1") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "36") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "35") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "40") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "32") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "42") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "33") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "nnf_imp2or" (formula "38") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "nnf_imp2or" (formula "34") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "nnf_imp2or" (formula "40") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "40") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "nnf_imp2or" (formula "30") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "nnf_imp2or" (formula "29") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "nnf_imp2or" (formula "39") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "nnf_imp2or" (formula "37") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "nnf_imp2or" (formula "32") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "nnf_imp2or" (formula "31") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "nnf_imp2or" (formula "43") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "nnf_imp2or" (formula "36") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "35") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "36") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "35") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "34") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "40") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "37") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "42") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "32") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "42") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "31") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "33") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "43") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "36") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "35") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "28") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "32") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "31") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "3") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "16") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "28") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "31") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "12") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "3") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0"))
                                       (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "105"))
                                       (rule "closeTrue" (formula "105"))
                                    )
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "85")))
                                    (rule "closeTrue" (formula "105"))
                                 )
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "105"))
                              (rule "closeTrue" (formula "105"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "105"))
                           (rule "allRight" (formula "105") (inst "sk=f_0"))
                           (rule "allRight" (formula "105") (inst "sk=o_0"))
                           (rule "orRight" (formula "105"))
                           (rule "selectOfStore" (formula "106") (term "1"))
                            (builtin "One Step Simplification" (formula "106"))
                           (rule "castDel" (formula "106") (term "1,1"))
                           (rule "selectOfStore" (formula "106") (term "2,1"))
                            (builtin "One Step Simplification" (formula "106"))
                           (rule "castDel" (formula "106") (term "1,2,1"))
                           (rule "selectOfStore" (formula "106") (term "2,2,1"))
                            (builtin "One Step Simplification" (formula "106"))
                           (rule "castDel" (formula "106") (term "1,2,2,1"))
                           (rule "selectOfStore" (formula "106") (term "2,2,2,1"))
                            (builtin "One Step Simplification" (formula "106"))
                           (rule "castDel" (formula "106") (term "1,2,2,2,1"))
                           (rule "selectOfCreate" (formula "106") (term "2,2,2,2,1"))
                           (rule "castDel" (formula "106") (term "1,2,2,2,2,1"))
                           (rule "ifthenelse_split" (formula "106") (term "2,2,1"))
                           (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$hashedPassword = f_0 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "ifthenelse_split" (formula "108") (term "1"))
                              (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "109") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectType" (formula "109") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "109"))
                                 (rule "false_right" (formula "109"))
                                 (rule "applyEq" (formula "108") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "108") (term "0,0") (ifseqformula "88"))
                                  (builtin "One Step Simplification" (formula "108"))
                                 (rule "notRight" (formula "108"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                 (rule "ifthenelse_split" (formula "109") (term "1"))
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "109") (term "0"))
                                    (rule "eqSymm" (formula "109") (term "1"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "109"))
                                    (rule "applyEqRigid" (formula "110") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "110") (term "0") (ifseqformula "47"))
                                    (rule "applyEq" (formula "108") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "108") (term "0,1") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "108"))
                                    (rule "notRight" (formula "108"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 FALSE"
                                    (rule "eqSymm" (formula "109") (term "0"))
                                    (rule "eqSymm" (formula "108") (term "0"))
                                    (rule "eqSymm" (formula "108") (term "1"))
                                    (rule "eqSymm" (formula "109") (term "1"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "109"))
                                    (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "108"))
                                    (rule "applyEq" (formula "109") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "109"))
                                    (rule "false_right" (formula "109"))
                                    (rule "applyEq" (formula "109") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "109") (term "0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "107") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "107") (term "0,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "107"))
                                    (rule "notRight" (formula "107"))
                                    (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "108"))
                                    (rule "false_right" (formula "108"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "80") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$hashedPassword = f_0 FALSE"
                              (rule "ifthenelse_split" (formula "107") (term "2,2,2,1"))
                              (branch " g_3 = o_0 ∧ ¬g_3 = null ∧ f_0 = java.lang.Object::<created> TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "ifthenelse_split" (formula "110") (term "2,1"))
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "ifthenelse_split" (formula "111") (term "1"))
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "eqSymm" (formula "110") (term "0"))
                                       (rule "eqSymm" (formula "110") (term "1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                       (rule "notLeft" (formula "3"))
                                       (rule "eqSymm" (formula "110") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "1"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "110") (term "1"))
                                       (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "applyEqRigid" (formula "110") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "false_right" (formula "110"))
                                       (rule "applyEq" (formula "108") (term "0,0,0") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "108") (term "0,0") (ifseqformula "88"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "notRight" (formula "108"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 FALSE"
                                    (rule "ifthenelse_split" (formula "111") (term "1"))
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "eqSymm" (formula "110") (term "1"))
                                       (rule "eqSymm" (formula "109") (term "0"))
                                       (rule "eqSymm" (formula "110") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "1"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "applyEq" (formula "111") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "111") (term "0") (ifseqformula "47"))
                                       (rule "replace_known_right" (formula "108") (term "0,1") (ifseqformula "111"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "notRight" (formula "108"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                       (rule "ifthenelse_split" (formula "112") (term "1"))
                                       (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$password = f_0 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "eqSymm" (formula "111") (term "0"))
                                          (rule "eqSymm" (formula "111") (term "1"))
                                          (rule "eqSymm" (formula "110") (term "0"))
                                          (rule "eqSymm" (formula "110") (term "1"))
                                          (rule "eqSymm" (formula "109") (term "0"))
                                          (rule "eqSymm" (formula "109") (term "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "applyEq" (formula "111") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "false_right" (formula "111"))
                                          (rule "applyEq" (formula "110") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "false_right" (formula "110"))
                                          (rule "applyEqRigid" (formula "109") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "false_right" (formula "109"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$password = f_0 FALSE"
                                          (rule "notLeft" (formula "2"))
                                          (rule "eqSymm" (formula "111") (term "0"))
                                          (rule "eqSymm" (formula "110") (term "0"))
                                          (rule "eqSymm" (formula "111") (term "1"))
                                          (rule "eqSymm" (formula "108") (term "0"))
                                          (rule "eqSymm" (formula "108") (term "1"))
                                          (rule "eqSymm" (formula "110") (term "1"))
                                          (rule "eqSymm" (formula "109") (term "0"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "eqSymm" (formula "109") (term "1"))
                                          (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "applyEq" (formula "112") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "112") (term "0") (ifseqformula "46"))
                                          (rule "replace_known_right" (formula "107") (term "0,1") (ifseqformula "112"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "notRight" (formula "107"))
                                          (rule "applyEqRigid" (formula "110") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "false_right" (formula "110"))
                                          (rule "applyEqRigid" (formula "110") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "false_right" (formula "110"))
                                          (rule "applyEq" (formula "108") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "false_right" (formula "108"))
                                          (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "false_right" (formula "108"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "close" (formula "88") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch " g_3 = o_0 ∧ ¬g_3 = null ∧ f_0 = java.lang.Object::<created> FALSE"
                                 (rule "ifthenelse_split" (formula "108") (term "2,1"))
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "ifthenelse_split" (formula "110") (term "1"))
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "110") (term "0,0"))
                                       (rule "eqSymm" (formula "109") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "replace_known_left" (formula "110") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "88")))
                                       (rule "applyEqRigid" (formula "109") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "false_right" (formula "109"))
                                       (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "false_right" (formula "109"))
                                       (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "110") (term "0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "108") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "0,0"))
                                       (rule "eqSymm" (formula "108") (term "1"))
                                       (rule "eqSymm" (formula "110") (term "1"))
                                       (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "replace_known_left" (formula "109") (term "0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "87")))
                                       (rule "applyEq" (formula "111") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "111") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "111") (term "0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "108") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "false_right" (formula "108"))
                                       (rule "applyEq" (formula "108") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "false_right" (formula "108"))
                                       (rule "applyEq" (formula "108") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "false_right" (formula "108"))
                                       (rule "applyEq" (formula "107") (term "1,0,0,1") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "107") (term "0,1") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "107"))
                                       (rule "notRight" (formula "107"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "close" (formula "88") (ifseqformula "2"))
                                    )
                                 )
                                 (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$publicSigningKey = f_0 FALSE"
                                    (rule "ifthenelse_split" (formula "109") (term "1"))
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "110") (term "0"))
                                       (rule "eqSymm" (formula "109") (term "0,0"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "110") (term "1"))
                                       (rule "eqSymm" (formula "108") (term "0"))
                                       (rule "eqSymm" (formula "108") (term "1"))
                                       (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "replace_known_right" (formula "109") (term "0,1,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "1")))
                                       (rule "applyEqRigid" (formula "111") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "111") (term "0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "107") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "107") (term "0,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "107"))
                                       (rule "notRight" (formula "107"))
                                       (rule "applyEqRigid" (formula "110") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "false_right" (formula "110"))
                                       (rule "applyEq" (formula "108") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "false_right" (formula "108"))
                                       (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "108"))
                                       (rule "false_right" (formula "108"))
                                       (rule "applyEq" (formula "108") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "80") (ifseqformula "1"))
                                    )
                                    (branch "g_3 = o_0 ∧ java.lang.Object::<initialized> = f_0 FALSE"
                                       (rule "ifthenelse_split" (formula "110") (term "1"))
                                       (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$password = f_0 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "eqSymm" (formula "110") (term "0"))
                                          (rule "eqSymm" (formula "110") (term "1"))
                                          (rule "eqSymm" (formula "108") (term "0"))
                                          (rule "eqSymm" (formula "108") (term "1"))
                                          (rule "eqSymm" (formula "111") (term "0"))
                                          (rule "eqSymm" (formula "111") (term "1"))
                                          (rule "eqSymm" (formula "109") (term "0,0"))
                                          (rule "replace_known_left" (formula "108") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "replace_known_left" (formula "110") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "replace_known_right" (formula "109") (term "0,1,0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "1")))
                                          (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "false_right" (formula "108"))
                                          (rule "applyEq" (formula "107") (term "1,0,0,1") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "107") (term "0,1") (ifseqformula "79"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "notRight" (formula "107"))
                                          (rule "applyEq" (formula "111") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "111") (term "0") (ifseqformula "47"))
                                          (rule "applyEqRigid" (formula "110") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "110"))
                                          (rule "false_right" (formula "110"))
                                          (rule "applyEqRigid" (formula "109") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "false_right" (formula "109"))
                                          (rule "applyEqRigid" (formula "108") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "108"))
                                          (rule "false_right" (formula "108"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "close" (formula "88") (ifseqformula "1"))
                                       )
                                       (branch " g_3 = o_0 ∧ de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter::$password = f_0 FALSE"
                                          (rule "selectOfAnonEQ" (formula "111") (term "1") (ifseqformula "74"))
                                           (builtin "One Step Simplification" (formula "111"))
                                          (rule "ifthenelse_split" (formula "111") (term "1"))
                                          (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_hashPasswordWithSHA256 = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0") (ifseqformula "68"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "selectOfAnonEQ" (formula "2") (term "0,0,0,0,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                             (rule "ifthenelse_negated" (formula "2") (term "0,0,0,0,0"))
                                             (rule "ifthenelse_split" (formula "2") (term "0,0,0,0,0"))
                                             (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "selectOfAnonEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                (rule "ifthenelse_negated" (formula "3") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0,0,0,0,0"))
                                                (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                   (rule "selectOfAnonEQ" (formula "4") (term "0,0,0,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "109")))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "eqSymm" (formula "116") (term "0"))
                                                   (rule "eqSymm" (formula "116") (term "1"))
                                                   (rule "eqSymm" (formula "117"))
                                                   (rule "eqSymm" (formula "115") (term "0"))
                                                   (rule "eqSymm" (formula "115") (term "1"))
                                                   (rule "eqSymm" (formula "114") (term "0"))
                                                   (rule "eqSymm" (formula "114") (term "1"))
                                                   (rule "eqSymm" (formula "113") (term "0,0"))
                                                   (rule "eqSymm" (formula "112") (term "0"))
                                                   (rule "eqSymm" (formula "112") (term "1"))
                                                   (rule "replace_known_right" (formula "111") (term "0,0") (ifseqformula "78"))
                                                    (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "79")))
                                                   (rule "closeTrue" (formula "111"))
                                                )
                                                (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                   (rule "selectCreatedOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "80"))
                                                   (rule "orRight" (formula "80"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "close" (formula "79") (ifseqformula "1"))
                                                )
                                             )
                                             (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "77"))
                                                (rule "orRight" (formula "77"))
                                                (rule "orRight" (formula "77"))
                                                (rule "eqSymm" (formula "115") (term "0,0"))
                                                (rule "eqSymm" (formula "118") (term "0"))
                                                (rule "eqSymm" (formula "118") (term "1"))
                                                (rule "eqSymm" (formula "119"))
                                                (rule "eqSymm" (formula "116") (term "0"))
                                                (rule "eqSymm" (formula "114") (term "0"))
                                                (rule "eqSymm" (formula "117") (term "0"))
                                                (rule "eqSymm" (formula "117") (term "1"))
                                                (rule "eqSymm" (formula "114") (term "1"))
                                                (rule "eqSymm" (formula "116") (term "1"))
                                                (rule "replace_known_right" (formula "113") (term "0,1") (ifseqformula "82"))
                                                 (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "81")))
                                                (rule "closeTrue" (formula "113"))
                                             )
                                          )
                                          (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_hashPasswordWithSHA256 = TRUE FALSE"
                                             (rule "selectOfAnonEQ" (formula "112") (term "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "112"))
                                             (rule "selectCreatedOfAnonEQ" (formula "111") (term "0,0,1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "111"))
                                             (rule "ifthenelse_split" (formula "112") (term "1"))
                                             (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_newSalt = TRUE TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "selectOfAnonEQ" (formula "113") (term "0,0,0,1") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "ifthenelse_negated" (formula "113") (term "0,0,0"))
                                                (rule "ifthenelse_split" (formula "113") (term "0,0,0"))
                                                (branch " o_0.<created>@heapAfter_loginPasswordFromMasterPIN = TRUE TRUE"
                                                   (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "69"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " o_0.<created>@heapAfter_loginPasswordFromMasterPIN = TRUE FALSE"
                                                   (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "68"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "113")))
                                                   (rule "selectOfAnonEQ" (formula "113") (term "0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "1")))
                                                   (rule "ifthenelse_negated" (formula "113") (term "0"))
                                                   (rule "ifthenelse_split" (formula "113") (term "0"))
                                                   (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                      (rule "close" (formula "114") (ifseqformula "1"))
                                                   )
                                                   (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                      (rule "selectOfAnonEQ" (formula "113") (term "0") (ifseqformula "60"))
                                                       (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "1")))
                                                      (rule "ifthenelse_negated" (formula "113") (term "0"))
                                                      (rule "ifthenelse_split" (formula "113") (term "0"))
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                         (rule "close" (formula "114") (ifseqformula "1"))
                                                      )
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                         (rule "selectCreatedOfAnonEQ" (formula "113") (term "0") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "113"))
                                                         (rule "orRight" (formula "113"))
                                                         (rule "selectOfAnonEQ" (formula "113") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "107")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notRight" (formula "117"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "eqSymm" (formula "113") (term "0"))
                                                         (rule "eqSymm" (formula "111") (term "0"))
                                                         (rule "eqSymm" (formula "109") (term "0"))
                                                         (rule "eqSymm" (formula "111") (term "1"))
                                                         (rule "eqSymm" (formula "113") (term "1"))
                                                         (rule "eqSymm" (formula "118"))
                                                         (rule "eqSymm" (formula "112") (term "0"))
                                                         (rule "eqSymm" (formula "109") (term "1"))
                                                         (rule "eqSymm" (formula "110") (term "0,0"))
                                                         (rule "eqSymm" (formula "112") (term "1"))
                                                         (rule "replace_known_right" (formula "108") (term "0,1") (ifseqformula "114"))
                                                          (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "79")))
                                                         (rule "closeTrue" (formula "108"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "¬o_0 = null ∧ ¬o_0.<created>@heapAfter_newSalt = TRUE FALSE"
                                                (rule "selectOfAnonEQ" (formula "111") (term "0,0,0,1") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "111"))
                                                (rule "ifthenelse_split" (formula "111") (term "0,0,0,1"))
                                                (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_loginPasswordFromMasterPIN = TRUE TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "114") (term "0,0,1") (ifseqformula "68"))
                                                    (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "1")))
                                                   (rule "selectOfAnonEQ" (formula "115") (term "1") (ifseqformula "68"))
                                                    (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectOfAnonEQ" (formula "114") (term "0,0,0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "1")))
                                                   (rule "ifthenelse_negated" (formula "114") (term "0,0,0"))
                                                   (rule "ifthenelse_split" (formula "114") (term "0,0,0"))
                                                   (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                      (rule "selectOfAnonEQ" (formula "3") (term "0,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                      (rule "ifthenelse_negated" (formula "3") (term "0,0,0"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0,0,0"))
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                         (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                         (rule "selectCreatedOfAnonEQ" (formula "4") (term "0,0,0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "3") (term "0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "selectOfAnonEQ" (formula "4") (term "0,0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "109")))
                                                         (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "109")))
                                                         (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "116"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "notRight" (formula "115"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "close" (formula "79") (ifseqformula "2"))
                                                      )
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                         (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "80")))
                                                         (rule "selectCreatedOfAnonEQ" (formula "80") (term "0") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "80"))
                                                         (rule "orRight" (formula "80"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                         (rule "selectOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "110")))
                                                         (rule "false_right" (formula "117"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "close" (formula "78") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                      (rule "selectOfAnonEQ" (formula "2") (term "0,0,0") (ifseqformula "60"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                      (rule "ifthenelse_negated" (formula "2") (term "0,0,0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0,0,0"))
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                         (rule "selectOfAnonEQ" (formula "115") (term "0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                                         (rule "closeTrue" (formula "115"))
                                                      )
                                                      (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                         (rule "selectOfAnonEQ" (formula "115") (term "0") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")) (ifInst ""  (formula "79")))
                                                         (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "selectOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "109")))
                                                         (rule "notRight" (formula "117"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "eqSymm" (formula "114") (term "0"))
                                                         (rule "eqSymm" (formula "114") (term "1"))
                                                         (rule "eqSymm" (formula "115") (term "0"))
                                                         (rule "eqSymm" (formula "115") (term "1"))
                                                         (rule "eqSymm" (formula "113") (term "0"))
                                                         (rule "eqSymm" (formula "113") (term "1"))
                                                         (rule "eqSymm" (formula "112") (term "0,0"))
                                                         (rule "eqSymm" (formula "118"))
                                                         (rule "eqSymm" (formula "111") (term "0"))
                                                         (rule "eqSymm" (formula "111") (term "1"))
                                                         (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "80"))
                                                          (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "78")))
                                                         (rule "closeTrue" (formula "110"))
                                                      )
                                                   )
                                                )
                                                (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_loginPasswordFromMasterPIN = TRUE FALSE"
                                                   (rule "selectCreatedOfAnonEQ" (formula "113") (term "0,0,1") (ifseqformula "66"))
                                                    (builtin "One Step Simplification" (formula "113"))
                                                   (rule "selectOfAnonEQ" (formula "114") (term "1") (ifseqformula "66"))
                                                    (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "111")))
                                                   (rule "selectOfAnonEQ" (formula "111") (term "0,0,1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "111"))
                                                   (rule "selectOfAnonEQ" (formula "112") (term "0,0,0,1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "112"))
                                                   (rule "ifthenelse_split" (formula "112") (term "0,0,0,1"))
                                                   (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,0,1") (ifseqformula "64"))
                                                       (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")))
                                                      (rule "ifthenelse_split" (formula "113") (term "0,0,1"))
                                                      (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                         (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                            (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "2")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "0") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "3") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                               (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "108")))
                                                               (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "117") (term "1"))
                                                               (rule "ifthenelse_split" (formula "117") (term "1"))
                                                               (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "3") (term "0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")))
                                                                  (rule "ifthenelse_negated" (formula "118") (term "1"))
                                                                  (rule "ifthenelse_split" (formula "118") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "59"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "59"))
                                                                      (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "3")))
                                                                     (rule "ifthenelse_negated" (formula "119") (term "1"))
                                                                     (rule "ifthenelse_split" (formula "119") (term "1"))
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "60"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                        (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "110")))
                                                                           (rule "closeTrue" (formula "119"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                           (rule "close" (formula "83") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "59"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "119")))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                           (rule "close" (formula "119") (ifseqformula "1"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "119") (term "0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "110")))
                                                                           (rule "false_right" (formula "118"))
                                                                           (rule "notLeft" (formula "5"))
                                                                           (rule "notLeft" (formula "3"))
                                                                           (rule "eqSymm" (formula "118"))
                                                                           (rule "eqSymm" (formula "111") (term "0,0"))
                                                                           (rule "eqSymm" (formula "114") (term "0"))
                                                                           (rule "eqSymm" (formula "112") (term "0"))
                                                                           (rule "eqSymm" (formula "112") (term "1"))
                                                                           (rule "eqSymm" (formula "113") (term "0"))
                                                                           (rule "eqSymm" (formula "110") (term "0"))
                                                                           (rule "eqSymm" (formula "110") (term "1"))
                                                                           (rule "eqSymm" (formula "114") (term "1"))
                                                                           (rule "eqSymm" (formula "113") (term "1"))
                                                                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "replace_known_right" (formula "108") (term "0,0") (ifseqformula "79"))
                                                                            (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "116")))
                                                                           (rule "closeTrue" (formula "108"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                     (rule "orRight" (formula "118"))
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "118")) (ifInst ""  (formula "119")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "3")))
                                                                     (rule "closeTrue" (formula "118"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "selectOfAnonEQ" (formula "117") (term "0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "117") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "117") (term "0"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "close" (formula "118") (ifseqformula "1"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "117"))
                                                                     (rule "orRight" (formula "117"))
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "108")))
                                                                     (rule "false_right" (formula "116"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "eqSymm" (formula "110") (term "0"))
                                                                     (rule "eqSymm" (formula "110") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "0"))
                                                                     (rule "eqSymm" (formula "112") (term "1"))
                                                                     (rule "eqSymm" (formula "108") (term "0"))
                                                                     (rule "eqSymm" (formula "108") (term "1"))
                                                                     (rule "eqSymm" (formula "109") (term "0,0"))
                                                                     (rule "eqSymm" (formula "118"))
                                                                     (rule "eqSymm" (formula "111") (term "0"))
                                                                     (rule "eqSymm" (formula "111") (term "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "115"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "107") (term "0,1") (ifseqformula "115"))
                                                                      (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "78")))
                                                                     (rule "closeTrue" (formula "107"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "2")))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                         (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                            (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "79")))
                                                            (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "56"))
                                                             (builtin "One Step Simplification" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "118") (term "1"))
                                                            (rule "selectOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "109")))
                                                            (rule "ifthenelse_split" (formula "118") (term "1"))
                                                            (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                               (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "61"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                               (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                               (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "61"))
                                                                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "2")))
                                                               (rule "ifthenelse_negated" (formula "119") (term "1"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                  (rule "ifthenelse_split" (formula "119") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "57"))
                                                                         (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "110")) (ifInst ""  (formula "80")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                        (rule "close" (formula "82") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "close" (formula "119") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                  (rule "ifthenelse_split" (formula "120") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "close" (formula "81") (ifseqformula "1"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "80") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "2")))
                                                                     (rule "ifthenelse_negated" (formula "80") (term "0"))
                                                                     (rule "ifthenelse_split" (formula "80") (term "0"))
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                        (rule "close" (formula "81") (ifseqformula "1"))
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "81")))
                                                                        (rule "notRight" (formula "119"))
                                                                        (rule "notLeft" (formula "4"))
                                                                        (rule "close" (formula "80") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "118") (term "0") (ifseqformula "60"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "118") (term "0"))
                                                               (rule "ifthenelse_split" (formula "118") (term "0"))
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                  (rule "close" (formula "119") (ifseqformula "1"))
                                                               )
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "80")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "79")))
                                                                  (rule "notRight" (formula "117"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "eqSymm" (formula "114") (term "0"))
                                                                  (rule "eqSymm" (formula "114") (term "1"))
                                                                  (rule "eqSymm" (formula "112") (term "0"))
                                                                  (rule "eqSymm" (formula "112") (term "1"))
                                                                  (rule "eqSymm" (formula "110") (term "0"))
                                                                  (rule "eqSymm" (formula "113") (term "0"))
                                                                  (rule "eqSymm" (formula "113") (term "1"))
                                                                  (rule "eqSymm" (formula "119"))
                                                                  (rule "eqSymm" (formula "110") (term "1"))
                                                                  (rule "eqSymm" (formula "111") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "115") (term "0,0") (ifseqformula "78"))
                                                                   (builtin "One Step Simplification" (formula "115"))
                                                                  (rule "notRight" (formula "115"))
                                                                  (rule "replace_known_right" (formula "110") (term "0,0") (ifseqformula "79"))
                                                                   (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "80")))
                                                                  (rule "closeTrue" (formula "110"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                         (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                         (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                         (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                            (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "2")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "0") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "3") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                               (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "65"))
                                                                   (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "114")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "53"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "117") (term "1"))
                                                                  (rule "ifthenelse_split" (formula "117") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "115") (term "0,0,1") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")) (ifInst ""  (formula "4")))
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "2")) (ifInst ""  (formula "4")))
                                                                     (rule "selectOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "109")))
                                                                     (rule "false_right" (formula "116"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "eqSymm" (formula "116"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "eqSymm" (formula "113") (term "0"))
                                                                     (rule "eqSymm" (formula "113") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "0"))
                                                                     (rule "eqSymm" (formula "112") (term "1"))
                                                                     (rule "eqSymm" (formula "110") (term "0"))
                                                                     (rule "eqSymm" (formula "110") (term "1"))
                                                                     (rule "eqSymm" (formula "111") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "109") (term "0,0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "80")))
                                                                     (rule "closeTrue" (formula "109"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "114") (term "0,0,1") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "117")))
                                                                     (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "108")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "117"))
                                                                     (rule "orRight" (formula "117"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "2")))
                                                                     (rule "closeTrue" (formula "117"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                  (rule "close" (formula "80") (ifseqformula "2"))
                                                               )
                                                            )
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "115")))
                                                               (rule "selectOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "109")))
                                                               (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "61"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "118") (term "1"))
                                                               (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,1") (ifseqformula "61"))
                                                                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,1") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")))
                                                               (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "109")))
                                                               (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "118") (term "1"))
                                                               (rule "ifthenelse_split" (formula "118") (term "1"))
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                  (rule "ifthenelse_split" (formula "4") (term "0,0"))
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")))
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "110")) (ifInst ""  (formula "81")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                     (rule "close" (formula "81") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                  (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                     (rule "close" (formula "119") (ifseqformula "3"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "118") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "109")) (ifInst ""  (formula "80")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "2")))
                                                                     (rule "false_right" (formula "116"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "close" (formula "79") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                            (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "79")))
                                                            (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "56"))
                                                             (builtin "One Step Simplification" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "118") (term "1"))
                                                            (rule "selectOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "109")))
                                                            (rule "ifthenelse_split" (formula "118") (term "1"))
                                                            (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                               (rule "selectOfAnonEQ" (formula "116") (term "0,0,0") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "2")))
                                                               (rule "ifthenelse_negated" (formula "116") (term "0,0,0"))
                                                               (rule "ifthenelse_split" (formula "116") (term "0,0,0"))
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                                  (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "120") (term "1") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "82")))
                                                                     (rule "selectOfAnonEQ" (formula "120") (term "1") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "81")) (ifInst ""  (formula "1")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "81")) (ifInst ""  (formula "1")))
                                                                     (rule "selectOfAnonEQ" (formula "120") (term "1") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "111")))
                                                                     (rule "closeTrue" (formula "120"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "121") (term "1") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "3")) (ifInst ""  (formula "81")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "81") (term "0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "83")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "82")) (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "81") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "82")) (ifInst ""  (formula "1")))
                                                                     (rule "closeTrue" (formula "81"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "120") (term "1") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "116")) (ifInst ""  (formula "81")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "121") (term "1") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "2")) (ifInst ""  (formula "80")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "80") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "117")) (ifInst ""  (formula "82")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "81")))
                                                                     (rule "false_right" (formula "80"))
                                                                     (rule "notRight" (formula "117"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "close" (formula "79") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                               (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,0") (ifseqformula "56"))
                                                                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "80")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "60"))
                                                                (builtin "One Step Simplification" (formula "118"))
                                                               (rule "orRight" (formula "118"))
                                                               (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "79")) (ifInst ""  (formula "119")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "56"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "80")))
                                                               (rule "selectOfAnonEQ" (formula "118") (term "0") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "109")) (ifInst ""  (formula "79")))
                                                               (rule "false_right" (formula "118"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "notRight" (formula "115"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notRight" (formula "116"))
                                                               (rule "eqSymm" (formula "118"))
                                                               (rule "eqSymm" (formula "115") (term "0"))
                                                               (rule "eqSymm" (formula "115") (term "1"))
                                                               (rule "eqSymm" (formula "114") (term "0"))
                                                               (rule "eqSymm" (formula "113") (term "0"))
                                                               (rule "eqSymm" (formula "113") (term "1"))
                                                               (rule "eqSymm" (formula "111") (term "0"))
                                                               (rule "eqSymm" (formula "111") (term "1"))
                                                               (rule "eqSymm" (formula "114") (term "1"))
                                                               (rule "eqSymm" (formula "112") (term "0,0"))
                                                               (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "80"))
                                                                (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "79")))
                                                               (rule "closeTrue" (formula "110"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                      (rule "ifthenelse_split" (formula "111") (term "0,0,1"))
                                                      (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                         (rule "close" (formula "113") (ifseqformula "1"))
                                                      )
                                                      (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                         (rule "selectOfAnonEQ" (formula "111") (term "0,0,1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "111"))
                                                         (rule "ifthenelse_split" (formula "111") (term "0,0,1"))
                                                         (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "114") (term "0,0,0,1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "56"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                               (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "117") (term "1"))
                                                               (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,1") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "1")))
                                                               (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "108")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectOfAnonEQ" (formula "115") (term "0,0,0,0") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "115") (term "0,0,0,0"))
                                                               (rule "ifthenelse_split" (formula "115") (term "0,0,0,0"))
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                  (rule "ifthenelse_split" (formula "118") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "55"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "4")))
                                                                     (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "63"))
                                                                      (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "3")))
                                                                     (rule "ifthenelse_negated" (formula "119") (term "1"))
                                                                     (rule "ifthenelse_split" (formula "119") (term "1"))
                                                                     (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "64"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,0") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0,0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "4")))
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "59"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "3")) (ifInst ""  (formula "1")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                                                                           (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "109")))
                                                                           (rule "closeTrue" (formula "117"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "3")) (ifInst ""  (formula "82")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "82") (term "0") (ifseqformula "55"))
                                                                            (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "4")))
                                                                           (rule "closeTrue" (formula "82"))
                                                                        )
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "119") (term "0") (ifseqformula "59"))
                                                                         (builtin "One Step Simplification" (formula "119"))
                                                                        (rule "orRight" (formula "119"))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,0") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0,0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                        (rule "selectOfAnonEQ" (formula "118") (term "0") (ifseqformula "55"))
                                                                         (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "110")))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "false_right" (formula "116"))
                                                                        (rule "notLeft" (formula "4"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "eqSymm" (formula "112") (term "0"))
                                                                        (rule "eqSymm" (formula "112") (term "1"))
                                                                        (rule "eqSymm" (formula "117"))
                                                                        (rule "eqSymm" (formula "110") (term "0,0"))
                                                                        (rule "eqSymm" (formula "113") (term "0"))
                                                                        (rule "eqSymm" (formula "113") (term "1"))
                                                                        (rule "eqSymm" (formula "111") (term "0"))
                                                                        (rule "eqSymm" (formula "109") (term "0"))
                                                                        (rule "eqSymm" (formula "109") (term "1"))
                                                                        (rule "eqSymm" (formula "111") (term "1"))
                                                                        (rule "replace_known_right" (formula "108") (term "0,1") (ifseqformula "115"))
                                                                         (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "79")))
                                                                        (rule "closeTrue" (formula "108"))
                                                                     )
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "3")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                     (rule "orRight" (formula "118"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0,0") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "118")) (ifInst ""  (formula "119")))
                                                                     (rule "selectOfAnonEQ" (formula "118") (term "0") (ifseqformula "58"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")))
                                                                     (rule "ifthenelse_negated" (formula "118") (term "0"))
                                                                     (rule "ifthenelse_split" (formula "118") (term "0"))
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                        (rule "close" (formula "119") (ifseqformula "1"))
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "54"))
                                                                         (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "3")))
                                                                        (rule "closeTrue" (formula "118"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                  (rule "ifthenelse_split" (formula "118") (term "1"))
                                                                  (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,0") (ifseqformula "62"))
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "116") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "3")))
                                                                     (rule "closeTrue" (formula "116"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "115") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "2")))
                                                                     (rule "closeTrue" (formula "115"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "64"))
                                                                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "117") (term "1"))
                                                               (rule "ifthenelse_split" (formula "117") (term "1"))
                                                               (branch "o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "57"))
                                                                   (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "2")) (ifInst ""  (formula "80")))
                                                                  (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,0,1") (ifseqformula "65"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "80"))
                                                                     (rule "orRight" (formula "80"))
                                                                     (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "2")))
                                                                     (rule "ifthenelse_negated" (formula "119") (term "1"))
                                                                     (rule "ifthenelse_split" (formula "119") (term "1"))
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "119") (term "0,0,0,0") (ifseqformula "62"))
                                                                         (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "2")))
                                                                        (rule "selectOfAnonEQ" (formula "120") (term "1") (ifseqformula "54"))
                                                                         (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "111")))
                                                                        (rule "closeTrue" (formula "120"))
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                        (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "57"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "119")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,0") (ifseqformula "61"))
                                                                         (builtin "One Step Simplification" (formula "118"))
                                                                        (rule "selectOfAnonEQ" (formula "119") (term "0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "110")) (ifInst ""  (formula "80")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,0,0") (ifseqformula "57"))
                                                                         (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")))
                                                                        (rule "false_right" (formula "118"))
                                                                        (rule "notLeft" (formula "3"))
                                                                        (rule "close" (formula "79") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "119") (term "1") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "2")) (ifInst ""  (formula "80")))
                                                                     (rule "selectOfAnonEQ" (formula "80") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "2")) (ifInst ""  (formula "81")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0,0,0,1") (ifseqformula "65"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "81") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "81"))
                                                                     (rule "orRight" (formula "81"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "119") (term "0,0,0,0") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "1")))
                                                                     (rule "false_right" (formula "119"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notRight" (formula "117"))
                                                                     (rule "eqSymm" (formula "118"))
                                                                     (rule "eqSymm" (formula "116") (term "1"))
                                                                     (rule "eqSymm" (formula "116") (term "0"))
                                                                     (rule "eqSymm" (formula "115") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "112") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "1"))
                                                                     (rule "eqSymm" (formula "115") (term "1"))
                                                                     (rule "eqSymm" (formula "113") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "111") (term "0,0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "81")))
                                                                     (rule "closeTrue" (formula "111"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "115") (term "0,0,0,0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")) (ifInst ""  (formula "79")))
                                                                  (rule "selectOfAnonEQ" (formula "117") (term "0") (ifseqformula "60"))
                                                                   (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "117") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "117") (term "0"))
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                     (rule "close" (formula "118") (ifseqformula "1"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,0,1") (ifseqformula "64"))
                                                                      (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "1")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "118") (term "0") (ifseqformula "56"))
                                                                      (builtin "One Step Simplification" (formula "118"))
                                                                     (rule "orRight" (formula "118"))
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "0,0,0,0") (ifseqformula "60"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                     (rule "ifthenelse_negated" (formula "117") (term "0,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "117") (term "0,0,0,0"))
                                                                     (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "119") (term "0") (ifseqformula "53"))
                                                                         (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "110")) (ifInst ""  (formula "80")))
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "57"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "118") (term "0,0,0,0") (ifseqformula "57"))
                                                                            (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "110")) (ifInst ""  (formula "80")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                           (rule "close" (formula "121") (ifseqformula "1"))
                                                                        )
                                                                     )
                                                                     (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "119") (term "0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "109")) (ifInst ""  (formula "79")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "56"))
                                                                         (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "120")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "117") (term "0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")))
                                                                        (rule "false_right" (formula "118"))
                                                                        (rule "notRight" (formula "117"))
                                                                        (rule "notRight" (formula "117"))
                                                                        (rule "notLeft" (formula "3"))
                                                                        (rule "notLeft" (formula "3"))
                                                                        (rule "eqSymm" (formula "112") (term "0,0"))
                                                                        (rule "eqSymm" (formula "114") (term "0"))
                                                                        (rule "eqSymm" (formula "115") (term "0"))
                                                                        (rule "eqSymm" (formula "113") (term "0"))
                                                                        (rule "eqSymm" (formula "113") (term "1"))
                                                                        (rule "eqSymm" (formula "111") (term "0"))
                                                                        (rule "eqSymm" (formula "115") (term "1"))
                                                                        (rule "eqSymm" (formula "111") (term "1"))
                                                                        (rule "eqSymm" (formula "114") (term "1"))
                                                                        (rule "eqSymm" (formula "119"))
                                                                        (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "80"))
                                                                         (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "79")))
                                                                        (rule "closeTrue" (formula "110"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                            (rule "selectCreatedOfAnonEQ" (formula "112") (term "0,0,0,1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "111") (term "0,0,1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "111"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "113") (term "0,0,0,1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "112") (term "0,0,0,0,1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                            (rule "selectOfAnonEQ" (formula "114") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "114"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "111") (term "0,0,0,1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "111"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "113") (term "0,0,0,0,1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "112") (term "0,0,0,0,0,1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "113") (term "0,0,0,0,0,1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "113"))
                                                            (rule "ifthenelse_split" (formula "114") (term "1"))
                                                            (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "selectOfAnonEQ" (formula "115") (term "0,0,0,0,0,0,1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "1")) (ifInst ""  (formula "107")))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "60"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "57"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "3") (term "0,0"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "57"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "3") (term "0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                                                     (rule "closeFalse" (formula "4"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "selectOfAnonEQ" (formula "80") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "109")))
                                                                     (rule "notRight" (formula "117"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "eqSymm" (formula "115") (term "0"))
                                                                     (rule "eqSymm" (formula "113") (term "0"))
                                                                     (rule "eqSymm" (formula "113") (term "1"))
                                                                     (rule "eqSymm" (formula "111") (term "0"))
                                                                     (rule "eqSymm" (formula "111") (term "1"))
                                                                     (rule "eqSymm" (formula "115") (term "1"))
                                                                     (rule "eqSymm" (formula "118"))
                                                                     (rule "eqSymm" (formula "112") (term "0,0"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "81"))
                                                                      (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "80")))
                                                                     (rule "closeTrue" (formula "110"))
                                                                  )
                                                               )
                                                               (branch "o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notRight" (formula "118"))
                                                                  (rule "eqSymm" (formula "113") (term "0,0"))
                                                                  (rule "eqSymm" (formula "116") (term "0"))
                                                                  (rule "eqSymm" (formula "114") (term "0"))
                                                                  (rule "eqSymm" (formula "114") (term "1"))
                                                                  (rule "eqSymm" (formula "115") (term "0"))
                                                                  (rule "eqSymm" (formula "115") (term "1"))
                                                                  (rule "eqSymm" (formula "112") (term "0"))
                                                                  (rule "eqSymm" (formula "112") (term "1"))
                                                                  (rule "eqSymm" (formula "116") (term "1"))
                                                                  (rule "eqSymm" (formula "119"))
                                                                  (rule "replace_known_right" (formula "111") (term "0,1") (ifseqformula "80"))
                                                                   (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "79")))
                                                                  (rule "closeTrue" (formula "111"))
                                                               )
                                                            )
                                                            (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_asHexString = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "113") (term "0,0,0,0,0,0,1") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "105")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "114") (term "0,0,1") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "114"))
                                                               (rule "selectOfAnonEQ" (formula "115") (term "1") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "115"))
                                                               (rule "ifthenelse_split" (formula "115") (term "1"))
                                                               (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_elementToBytes = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                                  (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "0,0,0,1") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "3")))
                                                                     (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "108")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notRight" (formula "117"))
                                                                     (rule "eqSymm" (formula "113") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "0"))
                                                                     (rule "eqSymm" (formula "112") (term "1"))
                                                                     (rule "eqSymm" (formula "110") (term "0"))
                                                                     (rule "eqSymm" (formula "110") (term "1"))
                                                                     (rule "eqSymm" (formula "113") (term "1"))
                                                                     (rule "eqSymm" (formula "111") (term "0,0"))
                                                                     (rule "eqSymm" (formula "118"))
                                                                     (rule "replace_known_right" (formula "109") (term "0,1") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "80")))
                                                                     (rule "closeTrue" (formula "109"))
                                                                  )
                                                                  (branch "o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "0,0,0,1") (ifseqformula "56"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "79")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "79") (term "0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "orRight" (formula "79"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notRight" (formula "118"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "119"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "eqSymm" (formula "115") (term "0"))
                                                                     (rule "eqSymm" (formula "113") (term "0"))
                                                                     (rule "eqSymm" (formula "111") (term "0"))
                                                                     (rule "eqSymm" (formula "111") (term "1"))
                                                                     (rule "eqSymm" (formula "115") (term "1"))
                                                                     (rule "eqSymm" (formula "113") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "110") (term "0,1") (ifseqformula "80"))
                                                                      (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "79")))
                                                                     (rule "closeTrue" (formula "110"))
                                                                  )
                                                               )
                                                               (branch " ¬o_0 = null ∧ ¬o_0.<created>@heapAfter_elementToBytes = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "114") (term "0,0,0,1") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "114"))
                                                                  (rule "ifthenelse_split" (formula "114") (term "0,0,0,1"))
                                                                  (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "118") (term "1") (ifseqformula "56"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "117") (term "0,0,1") (ifseqformula "56"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "1")))
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "0,0,0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "107")))
                                                                     (rule "notRight" (formula "117"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "orRight" (formula "78"))
                                                                     (rule "eqSymm" (formula "111") (term "0,0"))
                                                                     (rule "eqSymm" (formula "114") (term "0"))
                                                                     (rule "eqSymm" (formula "114") (term "1"))
                                                                     (rule "eqSymm" (formula "112") (term "0"))
                                                                     (rule "eqSymm" (formula "112") (term "1"))
                                                                     (rule "eqSymm" (formula "119"))
                                                                     (rule "eqSymm" (formula "110") (term "0"))
                                                                     (rule "eqSymm" (formula "110") (term "1"))
                                                                     (rule "eqSymm" (formula "113") (term "0"))
                                                                     (rule "eqSymm" (formula "113") (term "1"))
                                                                     (rule "replace_known_right" (formula "109") (term "0,1") (ifseqformula "78"))
                                                                      (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "80")))
                                                                     (rule "closeTrue" (formula "109"))
                                                                  )
                                                                  (branch " ¬o_0 = null ∧ ¬ o_0.<created>@heapAfter_publicCredentialFromPIN = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "114")))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "115") (term "0,0,0,1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "115"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "114") (term "0,0,1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "114"))
                                                                     (rule "selectCreatedOfAnonEQ" (formula "116") (term "0,0,1") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "116"))
                                                                     (rule "selectOfAnonEQ" (formula "117") (term "1") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "105")))
                                                                     (rule "closeTrue" (formula "117"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Null Reference (g_1 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (append)"
                      (builtin "One Step Simplification" (formula "69"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "andLeft" (formula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,0") (ifseqformula "69"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,0") (ifseqformula "65"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,1,0") (ifseqformula "61"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,1,0") (ifseqformula "57"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,1,0") (ifseqformula "53"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,1,0") (ifseqformula "49"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,0,1,0") (ifseqformula "45"))
                     (rule "andLeft" (formula "70"))
                     (rule "andLeft" (formula "70"))
                     (rule "andLeft" (formula "72"))
                     (rule "notLeft" (formula "70"))
                     (rule "close" (formula "73") (ifseqformula "72"))
                  )
                  (branch "Pre (append)"
                      (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "70")) (ifInst ""  (formula "68")) (ifInst ""  (formula "69")) (ifInst ""  (formula "70")) (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                     (rule "andRight" (formula "86"))
                     (branch
                        (rule "andRight" (formula "86"))
                        (branch
                           (rule "andRight" (formula "86"))
                           (branch
                              (rule "wellFormedAnonEQ" (formula "86") (ifseqformula "65"))
                              (rule "wellFormedAnonEQ" (formula "86") (term "0") (ifseqformula "61"))
                              (rule "wellFormedAnonEQ" (formula "86") (term "0,0") (ifseqformula "57"))
                              (rule "wellFormedAnonEQ" (formula "86") (term "0,0,0") (ifseqformula "53"))
                              (rule "wellFormedAnonEQ" (formula "86") (term "0,0,0,0") (ifseqformula "49"))
                              (rule "wellFormedAnonEQ" (formula "86") (term "0,0,0,0,0") (ifseqformula "45"))
                              (rule "replace_known_left" (formula "86") (term "1,0,0,0") (ifseqformula "52"))
                               (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "39")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")) (ifInst ""  (formula "56")) (ifInst ""  (formula "60")) (ifInst ""  (formula "64")))
                              (rule "closeTrue" (formula "86"))
                           )
                           (branch
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (ifseqformula "65"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0") (ifseqformula "61"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0") (ifseqformula "57"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0") (ifseqformula "53"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0") (ifseqformula "49"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0") (ifseqformula "45"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "86")) (ifInst ""  (formula "89")) (ifInst ""  (formula "88")) (ifInst ""  (formula "91")) (ifInst ""  (formula "87")))
                              (rule "closeFalse" (formula "63"))
                           )
                        )
                        (branch
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (ifseqformula "65"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0") (ifseqformula "61"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0") (ifseqformula "57"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0") (ifseqformula "53"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0") (ifseqformula "49"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0") (ifseqformula "45"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "orRight" (formula "86"))
                           (rule "replace_known_right" (formula "5") (term "1,0") (ifseqformula "91"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "86")) (ifInst ""  (formula "89")) (ifInst ""  (formula "88")) (ifInst ""  (formula "92")) (ifInst ""  (formula "90")) (ifInst ""  (formula "87")))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                     (branch
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (ifseqformula "65"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0") (ifseqformula "61"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0") (ifseqformula "57"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0") (ifseqformula "53"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0") (ifseqformula "49"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,0,0,0") (ifseqformula "45"))
                        (rule "orRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "orRight" (formula "86"))
                        (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "91"))
                         (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "86")) (ifInst ""  (formula "89")) (ifInst ""  (formula "88")) (ifInst ""  (formula "92")) (ifInst ""  (formula "90")) (ifInst ""  (formula "87")))
                        (rule "closeFalse" (formula "67"))
                     )
                  )
               )
               (branch "Exceptional Post (hashPasswordWithSHA256)"
                   (builtin "One Step Simplification" (formula "57"))
                   (builtin "One Step Simplification" (formula "74"))
                  (rule "andLeft" (formula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0") (ifseqformula "57"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,0") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,1,0") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "37"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "59"))
                  (rule "andLeft" (formula "58"))
                  (rule "andLeft" (formula "60"))
                  (rule "notLeft" (formula "58"))
                  (rule "close" (formula "62") (ifseqformula "61"))
               )
               (branch "Pre (hashPasswordWithSHA256)"
                   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "1,1") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "1,0,1") (ifseqformula "53"))
                  (rule "wellFormedAnonEQ" (formula "72") (term "0,0,1") (ifseqformula "53"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,1,1") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,1,0,1") (ifseqformula "49"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,1,1") (ifseqformula "45"))
                  (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0,1") (ifseqformula "49"))
                  (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0,0,1") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,1,0,1") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0,1,1") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0,0,1,1") (ifseqformula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0,1,0,1") (ifseqformula "41"))
                  (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0,0,0,1") (ifseqformula "41"))
                  (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0,0,0,0,1") (ifseqformula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,0,0,0,1,0,1") (ifseqformula "37"))
                  (rule "replace_known_left" (formula "72") (term "1,0,0,1") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "31")) (ifInst ""  (formula "36")) (ifInst ""  (formula "40")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")))
                  (rule "nnf_imp2or" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "nnf_imp2or" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "19") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "nnf_imp2or" (formula "25") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "nnf_imp2or" (formula "19") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "30") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "2") (term "0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "4") (term "0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "29") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "22") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "18") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "19") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "23") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "14") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "18") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "19") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "14") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "14") (term "0,0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "15") (term "0,0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "72") (term "0"))
                  (rule "insert_constant_string_value" (formula "72") (term "0,0,0,0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "castDel" (formula "72") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "pullOutSelect" (formula "72") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "73") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "72") (term "0,1,0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "pullOutSelect" (formula "72") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "73") (term "0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "1,0,0,0"))
                  (rule "commute_or" (formula "22") (term "1,0,0,0"))
                  (rule "distr_forallAnd" (formula "28") (term "0"))
                  (rule "commute_or" (formula "25") (term "1,0,0,0"))
                  (rule "distr_forallAnd" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "commute_or" (formula "4") (term "1,0,0,0"))
                  (rule "commute_or" (formula "19") (term "1,0,0,0"))
                  (rule "commute_or" (formula "23") (term "1,0,0,0"))
                  (rule "commute_or" (formula "20") (term "1,0,0,0"))
                  (rule "commute_or" (formula "1") (term "1,0,0,0"))
                  (rule "commute_or" (formula "31") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0,0"))
                  (rule "commute_or" (formula "5") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "30") (term "0,0,0"))
                  (rule "commute_or" (formula "27") (term "1,0,0,0"))
                  (rule "commute_or" (formula "2") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "24") (term "0,0,0"))
                  (rule "commute_or" (formula "18") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0"))
                  (rule "commute_or_2" (formula "17") (term "0,0,0"))
                  (rule "commute_or" (formula "4") (term "0,0,0,0"))
                  (rule "shift_paren_and" (formula "3") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "14") (term "1,0,0,0"))
                  (rule "commute_or" (formula "15") (term "1,0,0,0"))
                  (rule "commute_or" (formula "5") (term "0,0,0,0"))
                  (rule "commute_or" (formula "2") (term "0,0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or" (formula "29") (term "0,0"))
                  (rule "cnf_rightDist" (formula "21") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "cnf_rightDist" (formula "25") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "commute_or_2" (formula "73") (term "0,0,0"))
                  (rule "commute_or_2" (formula "73") (term "0,0,1"))
                  (rule "cnf_rightDist" (formula "20") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "commute_or_2" (formula "22") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "31") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "commute_or_2" (formula "19") (term "0,0,0"))
                  (rule "commute_or_2" (formula "23") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "27") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "commute_or_2" (formula "18") (term "0,0,0"))
                  (rule "commute_or_2" (formula "4") (term "0,0,0"))
                  (rule "commute_or_2" (formula "14") (term "0,0,0"))
                  (rule "commute_or_2" (formula "15") (term "0,0,0"))
                  (rule "commute_or_2" (formula "5") (term "0,0,0"))
                  (rule "commute_or_2" (formula "2") (term "0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "28") (term "0,0"))
                  (rule "distr_forallAnd" (formula "28") (term "0"))
                  (rule "distr_forallAnd" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "commute_or" (formula "29") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0,0,0"))
                  (rule "commute_or" (formula "16") (term "1,0,0,0,0"))
                  (rule "commute_or" (formula "25") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "3") (term "0,0"))
                  (rule "distr_forallAnd" (formula "3") (term "0"))
                  (rule "distr_forallAnd" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "commute_or_2" (formula "74") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "74") (term "0,0,0,1"))
                  (rule "commute_or" (formula "24") (term "1,0,0,0,0"))
                  (rule "commute_or" (formula "20") (term "0,0,0,0"))
                  (rule "commute_or" (formula "26") (term "1,0,0,0,0"))
                  (rule "commute_or" (formula "17") (term "1,0,0,0,0"))
                  (rule "commute_or" (formula "32") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                  (rule "castedGetAny" (formula "27") (term "1,0,0,0,0,0,0,0"))
                  (rule "castedGetAny" (formula "27") (term "0,1,0,0,0,0"))
                  (rule "castedGetAny" (formula "27") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "commute_or_2" (formula "73") (term "0,0,0"))
                  (rule "commute_or_2" (formula "73") (term "0,0"))
                  (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "orRight" (formula "73"))
                  (rule "orRight" (formula "73"))
                  (rule "orRight" (formula "73"))
                  (rule "orRight" (formula "73"))
                  (rule "orRight" (formula "73"))
                  (rule "replace_known_right" (formula "56") (term "1,0,0,0,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "73")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "75")))
                  (rule "closeFalse" (formula "56"))
               )
            )
            (branch "Exceptional Post (newSalt)"
                (builtin "One Step Simplification" (formula "64"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "andLeft" (formula "48"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,0") (ifseqformula "48"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,0") (ifseqformula "44"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,1,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0,0,1,0") (ifseqformula "32"))
               (rule "andLeft" (formula "49"))
               (rule "andLeft" (formula "50"))
               (rule "andLeft" (formula "49"))
               (rule "andLeft" (formula "51"))
               (rule "notLeft" (formula "49"))
               (rule "close" (formula "53") (ifseqformula "52"))
            )
            (branch "Pre (newSalt)"
                (builtin "One Step Simplification" (formula "62"))
               (rule "wellFormedAnonEQ" (formula "62") (term "1") (ifseqformula "44"))
               (rule "wellFormedAnonEQ" (formula "62") (term "0,1") (ifseqformula "40"))
               (rule "wellFormedAnonEQ" (formula "62") (term "0,0,1") (ifseqformula "36"))
               (rule "wellFormedAnonEQ" (formula "62") (term "0,0,0,1") (ifseqformula "32"))
               (rule "replace_known_left" (formula "62") (term "1,1") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "26")) (ifInst ""  (formula "31")) (ifInst ""  (formula "35")) (ifInst ""  (formula "39")))
               (rule "nnf_imp2or" (formula "23") (term "0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "19") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "nnf_imp2or" (formula "25") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "19") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "17") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "18") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "10") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "14") (term "0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "9") (term "0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "13") (term "0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "10") (term "0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "14") (term "0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "9") (term "0,0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,0,0,0"))
               (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "62"))
               (rule "pullOutSelect" (formula "62") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
               (rule "applyEq" (formula "63") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet000_8" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_10" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "63") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "63") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "54"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "pullOutSelect" (formula "62") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
               (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "63") (term "0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "55"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "cnf_rightDist" (formula "23") (term "0,0"))
               (rule "distr_forallAnd" (formula "23") (term "0"))
               (rule "distr_forallAnd" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "commute_or" (formula "21") (term "1,0,0,0"))
               (rule "commute_or" (formula "12") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "25") (term "0,0,0"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "63") (term "1"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "commute_or" (formula "22") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "16") (term "0,0,0"))
               (rule "commute_or" (formula "26") (term "1,0,0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "63"))
               (rule "pullOutSelect" (formula "63") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
               (rule "applyEq" (formula "64") (term "1,1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "64") (term "0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "64") (term "1,1,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "63") (term "0,1,0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "pullOutSelect" (formula "63") (term "1,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
               (rule "applyEq" (formula "64") (term "0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_13" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "64") (term "1,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "54"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "commute_or_2" (formula "19") (term "0,0,0"))
               (rule "commute_or" (formula "10") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0,0"))
               (rule "commute_or_2" (formula "11") (term "0,0,0"))
               (rule "commute_or" (formula "14") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "20") (term "0,0,0"))
               (rule "commute_or" (formula "17") (term "1,0,0,0"))
               (rule "commute_or" (formula "9") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "18") (term "0,0,0"))
               (rule "commute_or_2" (formula "13") (term "0,0,0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "63") (term "1"))
               (rule "pullOutSelect" (formula "63") (term "0,0,0,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
               (rule "applyEq" (formula "64") (term "1,1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "8")))
               (rule "applyEqReverse" (formula "64") (term "1,1,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "64") (term "0,0,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "63") (term "0,0,1") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "commute_or_2" (formula "21") (term "0,0,0"))
               (rule "commute_or_2" (formula "12") (term "0,0,0"))
               (rule "commute_or_2" (formula "22") (term "0,0,0"))
               (rule "commute_or_2" (formula "26") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "17") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "23") (term "0,0"))
               (rule "distr_forallAnd" (formula "23") (term "0"))
               (rule "distr_forallAnd" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "64") (term "1"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "cnf_rightDist" (formula "14") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "9") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "10") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "64"))
               (rule "closeTrue" (formula "64"))
            )
         )
         (branch "Exceptional Post (loginPasswordFromMasterPIN)"
             (builtin "One Step Simplification" (formula "61"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "andLeft" (formula "46"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1,0") (ifseqformula "46"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0") (ifseqformula "42"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0") (ifseqformula "38"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,1,0") (ifseqformula "34"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "47"))
            (rule "notLeft" (formula "49"))
            (rule "notLeft" (formula "47"))
            (rule "close" (formula "49") (ifseqformula "48"))
         )
         (branch "Pre (loginPasswordFromMasterPIN)"
             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "51")) (ifInst ""  (formula "58")) (ifInst ""  (formula "57")) (ifInst ""  (formula "51")) (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,1") (ifseqformula "42"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,0,1") (ifseqformula "42"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,1,1") (ifseqformula "38"))
            (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,1") (ifseqformula "42"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,1,1") (ifseqformula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,1,0,1") (ifseqformula "38"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "1,0,0,1") (ifseqformula "42"))
            (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,0,1") (ifseqformula "38"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,1,0,1") (ifseqformula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,1,0,0,1") (ifseqformula "38"))
            (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,0,0,1") (ifseqformula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,1,0,0,1") (ifseqformula "34"))
            (rule "replace_known_left" (formula "59") (term "1,0,0,0,1") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "28")) (ifInst ""  (formula "33")) (ifInst ""  (formula "37")) (ifInst ""  (formula "8")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
            (rule "nnf_imp2or" (formula "25") (term "0,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "18") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "19") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "nnf_imp2or" (formula "17") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "nnf_imp2or" (formula "19") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0"))
            (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "18") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
            (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0"))
            (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0"))
            (rule "nnf_notOr" (formula "18") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "10") (term "0,0,0,0,0"))
            (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
            (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "10") (term "0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "19") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "20") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "16") (term "0,0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "10") (term "0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "59") (term "0"))
            (rule "pullOutSelect" (formula "59") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "60") (term "0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "60") (term "1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "cnf_rightDist" (formula "25") (term "0,0"))
            (rule "distr_forallAnd" (formula "25") (term "0"))
            (rule "distr_forallAnd" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "commute_or" (formula "12") (term "1,0,0,0"))
            (rule "commute_or" (formula "27") (term "1,0,0,0"))
            (rule "commute_or" (formula "17") (term "1,0,0,0"))
            (rule "commute_or" (formula "16") (term "1,0,0,0"))
            (rule "commute_or" (formula "11") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0"))
            (rule "commute_or" (formula "22") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "13") (term "0,0,0"))
            (rule "commute_or" (formula "19") (term "1,0,0,0"))
            (rule "commute_or" (formula "20") (term "1,0,0,0"))
            (rule "commute_or" (formula "14") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "28") (term "0,0,0"))
            (rule "commute_or" (formula "24") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "60"))
            (rule "pullOutSelect" (formula "60") (term "1,1,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
            (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
            (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_12" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "61") (term "1,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "61") (term "0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "60") (term "0,1,0") (ifseqformula "50"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
            (rule "applyEq" (formula "61") (term "1,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
            (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_13" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "61") (term "1,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "commute_or_2" (formula "18") (term "0,0,0"))
            (rule "commute_or" (formula "23") (term "1,0,0,0"))
            (rule "commute_or" (formula "9") (term "1,0,0,0"))
            (rule "commute_or" (formula "10") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "15") (term "0,0,0"))
            (rule "commute_or" (formula "26") (term "0,0"))
            (rule "commute_or" (formula "12") (term "0,0,0,0"))
            (rule "commute_or" (formula "11") (term "0,0,0,0"))
            (rule "commute_or" (formula "9") (term "0,0,0,0"))
            (rule "commute_or" (formula "10") (term "0,0,0,0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "60") (term "0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "cnf_rightDist" (formula "27") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "60"))
            (rule "pullOutSelect" (formula "60") (term "0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
            (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "36"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "8")))
            (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "61") (term "1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "cnf_rightDist" (formula "17") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "commute_or_2" (formula "16") (term "0,0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0,0"))
            (rule "commute_or_2" (formula "19") (term "0,0,0"))
            (rule "commute_or_2" (formula "20") (term "0,0,0"))
            (rule "commute_or_2" (formula "14") (term "0,0,0"))
            (rule "commute_or_2" (formula "24") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "23") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "60"))
            (rule "closeTrue" (formula "60"))
         )
      )
      (branch "Exceptional Post (asHexString)"
          (builtin "One Step Simplification" (formula "47"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0") (ifseqformula "16"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "33"))
         (rule "notLeft" (formula "31"))
         (rule "close" (formula "33") (ifseqformula "32"))
      )
      (branch "Pre (asHexString)"
          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1") (ifseqformula "20"))
         (rule "wellFormedAnonEQ" (formula "45") (term "0") (ifseqformula "20"))
         (rule "wellFormedAnonEQ" (formula "45") (term "0,0") (ifseqformula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1") (ifseqformula "16"))
         (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "15")) (ifInst ""  (formula "19")))
         (rule "orRight" (formula "45"))
         (rule "orRight" (formula "45"))
         (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "45"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
         (rule "closeFalse" (formula "22"))
      )
   )
   (branch "Exceptional Post (elementToBytes)"
       (builtin "One Step Simplification" (formula "33"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0") (ifseqformula "16"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "23"))
      (rule "notLeft" (formula "21"))
      (rule "close" (formula "24") (ifseqformula "23"))
   )
   (branch "Pre (elementToBytes)"
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")))
      (rule "wellFormedAnonEQ" (formula "31") (term "0,1") (ifseqformula "16"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1") (ifseqformula "16"))
      (rule "replace_known_left" (formula "31") (term "1,0,1") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "10")) (ifInst ""  (formula "17")))
      (rule "nnf_imp2or" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
      (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
      (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0"))
      (rule "nnf_notOr" (formula "2") (term "0,1,0,0,0,0"))
      (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0"))
      (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "31"))
      (rule "pullOutSelect" (formula "31") (term "1,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
      (rule "applyEq" (formula "32") (term "0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "32") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
      (rule "applyEq" (formula "33") (term "1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "33") (term "0,1"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "33") (term "1"))
      (rule "pullOutSelect" (formula "33") (term "0,0,0,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
      (rule "applyEq" (formula "34") (term "1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "34") (term "1,1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "cnf_rightDist" (formula "10") (term "0,0"))
      (rule "distr_forallAnd" (formula "10") (term "0"))
      (rule "distr_forallAnd" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "commute_or" (formula "5") (term "1,0,0,0"))
      (rule "commute_or_2" (formula "8") (term "0,0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0,0"))
      (rule "commute_or_2" (formula "12") (term "0,0,0"))
      (rule "commute_or_2" (formula "13") (term "0,0,0"))
      (rule "commute_or_2" (formula "7") (term "0,0,0"))
      (rule "commute_or_2" (formula "6") (term "0,0,0"))
      (rule "commute_or_2" (formula "4") (term "0,0,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or_2" (formula "5") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "10") (term "0,0"))
      (rule "distr_forallAnd" (formula "10") (term "0"))
      (rule "distr_forallAnd" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
      (rule "commute_or" (formula "13") (term "1,0,0,0,0"))
      (rule "cnf_rightDist" (formula "10") (term "0,0"))
      (rule "distr_forallAnd" (formula "10") (term "0"))
      (rule "distr_forallAnd" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or" (formula "15") (term "1,0,0,0,0"))
      (rule "commute_or" (formula "7") (term "1,0,0,0,0"))
      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
      (rule "commute_and" (formula "8") (term "1,0,0,0"))
      (rule "commute_and" (formula "9") (term "1,0,0,0"))
      (rule "commute_and" (formula "14") (term "1,0,0,0"))
      (rule "commute_and" (formula "15") (term "1,0,0,0"))
      (rule "commute_and" (formula "7") (term "1,0,0,0"))
      (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
      (rule "commute_and" (formula "6") (term "1,0,0,0"))
      (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "4") (term "0,0"))
      (rule "distr_forallAnd" (formula "4") (term "0"))
      (rule "distr_forallAnd" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "shift_paren_or" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "5") (term "1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "5") (term "0,0"))
      (rule "distr_forallAnd" (formula "5") (term "0"))
      (rule "distr_forallAnd" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "shift_paren_or" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "eqSymm" (formula "6") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "8") (term "0,0"))
      (rule "distr_forallAnd" (formula "8") (term "0"))
      (rule "distr_forallAnd" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "commute_or_2" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "9") (term "0,0"))
      (rule "distr_forallAnd" (formula "9") (term "0"))
      (rule "distr_forallAnd" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "commute_or_2" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "14") (term "0,0"))
      (rule "distr_forallAnd" (formula "14") (term "0"))
      (rule "distr_forallAnd" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "15") (term "0,0"))
      (rule "distr_forallAnd" (formula "15") (term "0"))
      (rule "distr_forallAnd" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "7") (term "0,0"))
      (rule "distr_forallAnd" (formula "7") (term "0"))
      (rule "distr_forallAnd" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "6") (term "0,0"))
      (rule "distr_forallAnd" (formula "6") (term "0"))
      (rule "distr_forallAnd" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "shift_paren_or" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "commute_or_2" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "commute_or_2" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "shift_paren_or" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "commute_or_2" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "commute_or_2" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "shift_paren_or" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "shift_paren_or" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "4") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "ifthenelse_split" (formula "2") (term "0"))
      (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "30") (term "0,0,1,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "applyEqReverse" (formula "29") (term "0,0,0,0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "18")))
         (rule "notRight" (formula "28"))
         (rule "ifthenelse_negated" (formula "2") (term "0"))
         (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
         (rule "ifEqualsNull" (formula "2"))
         (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "referencedObjectIsCreatedRight" (formula "17") (ifseqformula "20"))
         (rule "close" (formula "17") (ifseqformula "8"))
      )
      (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "17") (ifseqformula "22"))
         (rule "close" (formula "17") (ifseqformula "8"))
      )
   )
   (branch "Null reference (e = null)"
       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "23")))
      (rule "closeTrue" (formula "31"))
   )
)
(branch "Exceptional Post (publicCredentialFromPIN)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "13") (ifseqformula "12"))
)
(branch "Pre (publicCredentialFromPIN)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "12")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "4")) (ifInst ""  (formula "12")) (ifInst ""  (formula "18")) (ifInst ""  (formula "6")) (ifInst ""  (formula "19")) (ifInst ""  (formula "5")))
   (rule "nnf_imp2or" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
   (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "20") (term "1,0"))
   (rule "replace_known_right" (formula "20") (term "0,1,0,1,0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "11")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "20") (term "0,1,0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "20") (term "1,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "20") (term "1,0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "20") (term "0"))
   (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "8")))
   (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "12"))
   (rule "close" (formula "20") (ifseqformula "4"))
)
)
}
