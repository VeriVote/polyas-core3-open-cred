\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 13 14:45:28 CET 2019
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Labels]UseOriginLabels=false
[SMTSettings]integersMaximum=2147483645
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Nov 13 14:45:28 CET 2019
name=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:asHexString([B)].Non-interference contract.0
contract=de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils\\:\\:asHexString([B)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "11129")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "0,0,0,1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "boxToDiamond" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_asHexString,savedHeapBefore_asHexString"))
 (builtin "One Step Simplification" (formula "4"))
(rule "returnUnfold" (formula "4") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "4") (term "1") (inst "#v0=s_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s_1"))
 (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_bytesToHexString,result_52,exc_65,heapAfter_bytesToHexString,anon_heap_bytesToHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::bytesToHexString([B)].JML normal_behavior operation contract.0"))
(branch "Post (bytesToHexString)"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "9")) (ifInst ""  (formula "1")) (ifInst ""  (formula "9")) (ifInst ""  (formula "2")))
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "7"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "commute_or" (formula "7"))
    (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_toLowerCase,result_53,exc_66,heapAfter_toLowerCase,anon_heap_toLowerCase") (contract "java.lang.String[java.lang.String::toLowerCase()].JML normal_behavior operation contract.0"))
   (branch "Post (toLowerCase)"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "10"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "14"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "commute_or" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "12"))
      (rule "methodCallReturn" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "tryEmpty" (formula "17") (term "1"))
      (rule "emptyModality" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "notRight" (formula "17"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "2"))
      (rule "Use_information_flow_contract_for_toLowerCase_2107268077" (formula "16") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "Use_information_flow_contract_for_bytesToHexString_1724841292" (formula "11") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
      (rule "true_left" (formula "11"))
      (rule "Use_information_flow_contract_for_toLowerCase_2107268077" (formula "16") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "Use_information_flow_contract_for_bytesToHexString_1724841292" (formula "11") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
      (rule "true_left" (formula "11"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "notLeft" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "eqSymm" (formula "8") (term "1,0,0,1"))
      (rule "eqSymm" (formula "8") (term "0,0,0,1"))
      (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "assignment" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "boxToDiamond" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_asHexString_0,savedHeapBefore_asHexString_0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "returnUnfold" (formula "19") (term "1") (inst "#v0=s"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "s_2"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "19") (term "1") (inst "#v0=s_3"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "s_3"))
       (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_bytesToHexString_0,result_54,exc_67,heapAfter_bytesToHexString_0,anon_heap_bytesToHexString_0") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::bytesToHexString([B)].JML normal_behavior operation contract.0"))
      (branch "Post (bytesToHexString)"
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "6")) (ifInst ""  (formula "24")) (ifInst ""  (formula "7")))
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "21"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "22"))
         (rule "andLeft" (formula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "assignment" (formula "25") (term "1"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "applyEq" (formula "23") (term "3") (ifseqformula "21"))
         (rule "commute_or" (formula "22"))
          (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_toLowerCase_0,result_55,exc_68,heapAfter_toLowerCase_0,anon_heap_toLowerCase_0") (contract "java.lang.String[java.lang.String::toLowerCase()].JML normal_behavior operation contract.0"))
         (branch "Post (toLowerCase)"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "26"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,1,0") (ifseqformula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "29"))
            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "assignment" (formula "34") (term "1"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "applyEq" (formula "29") (term "4") (ifseqformula "26"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "commute_or" (formula "27") (term "0"))
            (rule "commute_or_2" (formula "27"))
            (rule "methodCallReturn" (formula "32") (term "1"))
            (rule "assignment" (formula "32") (term "1"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "methodCallEmpty" (formula "32") (term "1"))
            (rule "tryEmpty" (formula "32") (term "1"))
            (rule "emptyModality" (formula "32") (term "1"))
            (rule "Use_information_flow_contract_for_bytesToHexString_1724841292" (formula "23") (ifseqformula "12"))
            (rule "impLeft" (formula "23"))
            (branch "pre bytesToHexString_1724841292 (information flow)"
               (rule "andRight" (formula "30"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "notRight" (formula "30"))
                  (rule "close" (formula "34") (ifseqformula "1"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "notRight" (formula "30"))
                  (rule "close" (formula "37") (ifseqformula "1"))
               )
            )
            (branch "post bytesToHexString_1724841292 (information flow)"
               (rule "Use_information_flow_contract_for_bytesToHexString_1724841292_0" (formula "24") (ifseqformula "12"))
               (rule "impLeft" (formula "24"))
               (branch "pre bytesToHexString_1724841292_0 (information flow)"
                  (rule "andRight" (formula "31"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "23"))
                     (rule "notRight" (formula "32"))
                     (rule "close" (formula "36") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "23"))
                     (rule "notRight" (formula "32"))
                     (rule "close" (formula "39") (ifseqformula "1"))
                  )
               )
               (branch "post bytesToHexString_1724841292_0 (information flow)"
                  (rule "Use_information_flow_contract_for_toLowerCase_2107268077_0" (formula "29") (ifseqformula "17"))
                  (rule "Use_information_flow_contract_for_toLowerCase_2107268077" (formula "30") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "29"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "andLeft" (formula "23"))
                  (rule "notRight" (formula "35"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "42") (term "0"))
                  (rule "eqSymm" (formula "42") (term "0,1"))
                  (rule "eqSymm" (formula "42") (term "1,1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "allFieldsEq" (formula "27") (term "0"))
                  (rule "allFieldsEq" (formula "42") (term "0,1"))
                  (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "28") (term "2") (ifseqformula "26"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "20") (term "3") (ifseqformula "4"))
                  (rule "applyEq" (formula "34") (term "3") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "15") (term "3") (ifseqformula "13"))
                  (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "26"))
                  (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "34") (term "2") (ifseqformula "26"))
                  (rule "applyEq" (formula "20") (term "4") (ifseqformula "18"))
                  (rule "applyEq" (formula "33") (term "0,0,1,1,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "33") (term "1,1,1"))
                  (rule "applyEq" (formula "33") (term "0,0,0,1,1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEq" (formula "27") (term "0,0,1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "32") (term "0,0,1,1") (ifseqformula "4"))
                  (rule "eqSymm" (formula "32") (term "1,1"))
                  (rule "Class_invariant_axiom_for_java_lang_String" (formula "32") (term "1,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "Class_invariant_axiom_for_java_lang_String" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "replace_known_left" (formula "41") (term "1,1") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "32")))
                  (rule "closeTrue" (formula "41"))
               )
            )
         )
         (branch "Exceptional Post (toLowerCase)"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "26"))
            (rule "close" (formula "30") (ifseqformula "29"))
         )
         (branch "Pre (toLowerCase)"
             (builtin "One Step Simplification" (formula "25"))
            (rule "wellFormedAnonEQ" (formula "25") (term "1") (ifseqformula "20"))
            (rule "eqSymm" (formula "30") (term "0"))
            (rule "eqSymm" (formula "30") (term "0,1"))
            (rule "eqSymm" (formula "30") (term "1,1"))
            (rule "replace_known_left" (formula "25") (term "1,1") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "6")))
            (rule "allFieldsEq" (formula "30") (term "0,1"))
            (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "3") (ifseqformula "10"))
            (rule "applyEq" (formula "17") (term "3") (ifseqformula "1"))
            (rule "applyEq" (formula "17") (term "4") (ifseqformula "15"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "1"))
            (rule "Class_invariant_axiom_for_java_lang_String" (formula "25"))
            (rule "closeTrue" (formula "25"))
         )
         (branch "Null reference (s_3 = null)"
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
            (rule "closeTrue" (formula "25"))
         )
      )
      (branch "Exceptional Post (bytesToHexString)"
          (builtin "One Step Simplification" (formula "21"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "21"))
         (rule "close" (formula "24") (ifseqformula "23"))
      )
      (branch "Pre (bytesToHexString)"
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
         (rule "closeTrue" (formula "19"))
      )
   )
   (branch "Exceptional Post (toLowerCase)"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (toLowerCase)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "wellFormedAnonEQ" (formula "10") (term "1") (ifseqformula "5"))
      (rule "replace_known_left" (formula "10") (term "1,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "10"))
      (rule "closeTrue" (formula "10"))
   )
   (branch "Null reference (s_1 = null)"
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
      (rule "closeTrue" (formula "10"))
   )
)
(branch "Exceptional Post (bytesToHexString)"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "9") (ifseqformula "8"))
)
(branch "Pre (bytesToHexString)"
    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "2")))
   (rule "closeTrue" (formula "4"))
)
)
}
