\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 16:29:16 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\problem {
!(  wellFormed(heapAtPre<<anonHeapFunction>>)
  & heap = heapAtPre<<anonHeapFunction>>
  & (  ((  password_41 = null
         |   boolean::select(heapAtPre<<anonHeapFunction>>,
                             password_41,
                             java.lang.Object::<created>)
           = TRUE)<<SC>>)
     & ((  salt_9 = null
         |   boolean::select(heapAtPre<<anonHeapFunction>>,
                             salt_9,
                             java.lang.Object::<created>)
           = TRUE)<<SC>>))
  & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre<<anonHeapFunction>>)<<impl>>
      & ((  (!(password_41 = null)<<origin("requires @ file Crypto.java @ line 118","[]")>>)<<impl,
                                                                                              origin("requires @ file Crypto.java @ line 118","[]")>>
          & (!(salt_9 = null)<<origin("requires @ file Crypto.java @ line 118","[]")>>)<<impl,
                                                                                         origin("requires @ file Crypto.java @ line 118","[]")>>)<<SC>>))<<SC>>)
  & {_password_41:=password_41 || _salt_9:=salt_9}
      \[{
          exc_426=null;try {
            result_378=de.polyas.core3.open.cred.Crypto.hashPasswordWithSHA256(_password_41,_salt_9)@de.polyas.core3.open.cred.Crypto;
          }   catch (java.lang.Throwable e) {
            exc_426=e;
          }
        }\] (  resultAtPost_378 = result_378
             & excAtPost_426 = exc_426
             & heapAtPost = heap))

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "1582")

(branch "dummy ID"
(rule "notRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "6") (term "1,0,0,1"))
(rule "eqSymm" (formula "6") (term "0,0,0,1"))
(rule "eqSymm" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "boxToDiamond" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_hashPasswordWithSHA256,savedHeapBefore_hashPasswordWithSHA256"))
 (builtin "One Step Simplification" (formula "8"))
(rule "returnUnfold" (formula "8") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "var"))
(rule "stringConcat" (formula "8") (term "1") (inst "sk=sk_0"))
 (builtin "One Step Simplification" (formula "9"))
 (builtin "One Step Simplification" (formula "10"))
 (builtin "One Step Simplification" (formula "1"))
(rule "eqSeqConcat" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "polySimp_addComm0" (formula "1") (term "1"))
(rule "lenOfSeqSubEQ" (formula "1") (term "0,1") (ifseqformula "3"))
(rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
(rule "polySimp_addComm0" (formula "1") (term "1"))
(rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
 (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_sha256,result_379,exc_427,heapAfter_sha256,anon_heap_sha256") (contract "de.polyas.core3.open.cred.Crypto[de.polyas.core3.open.cred.Crypto::sha256(java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (sha256)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "12"))
   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "blockEmpty" (formula "22") (term "1"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "16"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
   (rule "castDel" (formula "16") (term "0"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "pullOutSelect" (formula "10") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
   (rule "simplifySelectOfCreate" (formula "10"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "21")))
   (rule "castDel" (formula "10") (term "1,0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "16"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "16"))
   (rule "notLeft" (formula "15"))
   (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "17") (term "0"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "16") (term "0"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownSelect_taclet0_4" (formula "1") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "1") (term "0"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_9" (formula "16") (term "0"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownSelect_taclet0_6" (formula "1") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "1") (term "0"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_11" (formula "15") (term "0"))
   (rule "methodCallReturn" (formula "22") (term "1"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "methodCallEmpty" (formula "22") (term "1"))
   (rule "tryEmpty" (formula "22") (term "1"))
   (rule "emptyModality" (formula "22") (term "1"))
    (opengoal "!(  wellFormed(heapAtPre<<anonHeapFunction>>)   & heap = heapAtPre<<anonHeapFunction>>   & (  ((  password_41 = null          |   boolean::select(heapAtPre<<anonHeapFunction>>,                              password_41,                              java.lang.Object::<created>)            = TRUE)<<SC>>)      & ((  salt_9 = null          |   boolean::select(heapAtPre<<anonHeapFunction>>,                              salt_9,                              java.lang.Object::<created>)            = TRUE)<<SC>>))   & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre<<anonHeapFunction>>)<<impl>>       & ((  (!(password_41 = null)<<origin(\"requires @ file Crypto.java @ line 118\",\"[]\")>>)<<impl,                                                                                               origin(\"requires @ file Crypto.java @ line 118\",\"[]\")>>           & (!(salt_9 = null)<<origin(\"requires @ file Crypto.java @ line 118\",\"[]\")>>)<<impl,                                                                                          origin(\"requires @ file Crypto.java @ line 118\",\"[]\")>>)<<SC>>))<<SC>>)   & {_password_41:=password_41 || _salt_9:=salt_9}       \\[{           exc_426=null;try {             result_378=de.polyas.core3.open.cred.Crypto.hashPasswordWithSHA256(_password_41,_salt_9)@de.polyas.core3.open.cred.Crypto;           }   catch (java.lang.Throwable e) {             exc_426=e;           }         }\\] (  resultAtPost_378 = result_378              & excAtPost_426 = exc_426              & heapAtPost = heap)) ")
)
(branch "Exceptional Post (sha256)"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (sha256)"
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
   (rule "wellFormedCreate" (formula "12") (term "0,1"))
   (rule "polySimp_homoEq" (formula "1"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
   (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "5"))
   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "5"))
   (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
   (rule "insert_constant_string_value" (formula "9") (term "0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0"))
   (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "5"))
   (rule "polySimp_sepPosMonomial" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_homoEq" (formula "1") (term "1"))
   (rule "times_zero_2" (formula "1") (term "1,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,1"))
   (rule "polySimp_sepPosMonomial" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,0"))
   (rule "pullOutSelect" (formula "12") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "13") (term "0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "commute_or" (formula "1"))
   (rule "inEqSimp_or_weaken1" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "12"))
   (rule "insert_constant_string_value" (formula "12") (term "0,0,0,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "castDel" (formula "12") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "12") (term "0,0,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "pullOutSelect" (formula "12") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
   (rule "applyEqReverse" (formula "13") (term "0,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "notRight" (formula "12"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "close" (formula "12") (ifseqformula "2"))
)
)
}
